<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>生鱼忧患</title>
  
  <subtitle>网络安全&amp;软件开发</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://yoursite.com/"/>
  <updated>2020-09-01T15:01:49.997Z</updated>
  <id>http://yoursite.com/</id>
  
  <author>
    <name>真小鱼</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>weblogic-cve_2017_10271</title>
    <link href="http://yoursite.com/2020/09/01/weblogic-cve-2017-10271/"/>
    <id>http://yoursite.com/2020/09/01/weblogic-cve-2017-10271/</id>
    <published>2020-09-01T14:59:58.000Z</published>
    <updated>2020-09-01T15:01:49.997Z</updated>
    
    <content type="html"><![CDATA[<h1 id="weblogic-cve-2017-10271"><a href="#weblogic-cve-2017-10271" class="headerlink" title="weblogic-cve_2017_10271"></a>weblogic-cve_2017_10271</h1><p>Weblogic XMLDecoder反序化</p><h2 id="漏洞描述"><a href="#漏洞描述" class="headerlink" title="漏洞描述"></a>漏洞描述</h2><p>Oracle Fusion Middleware中的Oracle WebLogic Server组件的<strong>WLS Security子组件</strong>存在安全漏洞。使用精心构造的xml数据可能造成<strong>任意代码执行</strong>，攻击者只需要发送精心构造的<strong>xml恶意数据</strong>，就可以拿到目标服务器的权限。</p><p>wls-wsat路径： /root/Oracle/Middleware//user_projects/domains/base_domain/servers/AdminServer/tmp/_WL_internal/wls-wsat/</p><h2 id="影响版本"><a href="#影响版本" class="headerlink" title="影响版本"></a>影响版本</h2><p>Oracle WebLogic Server 10.3.6.0.0版本<br>Oracle WebLogic Server 12.1.3.0.0版本<br>Oracle WebLogic Server 12.2.1.1.0版本</p><h2 id="漏洞利用"><a href="#漏洞利用" class="headerlink" title="漏洞利用"></a>漏洞利用</h2><p>1、访问页面</p><p><img src="http://ww1.sinaimg.cn/large/006X0pjBly1gibi3c15nnj31fg095t99.jpg" alt="Snipaste_2020-09-01_22-04-37.png"></p><p>2、初步判断</p><p>访问：<a href="http://127.0.0.1:7001/wls-wsat/CoordinatorPortType11，存在下图则说明可能存在漏洞。" target="_blank" rel="noopener">http://127.0.0.1:7001/wls-wsat/CoordinatorPortType11，存在下图则说明可能存在漏洞。</a></p><p><img src="http://ww1.sinaimg.cn/large/006X0pjBly1gi9c1f2ny5j31dh064gm9.jpg" alt="image-20200831005437218.png"></p><p>3、构造post包，执行python验证脚本</p><p><img src="http://ww1.sinaimg.cn/large/006X0pjBly1gi9cm9c2hrj30oo01v0st.jpg" alt="image-20200831012502598.png"></p><h2 id="漏洞分析"><a href="#漏洞分析" class="headerlink" title="漏洞分析"></a>漏洞分析</h2><p>此次漏洞出现在wls-wsat.war中，此组件使用了weblogic自带的webservices处理程序来处理SOAP（一个基于xml格式的web交互协议）请求首先在weblogic.wsee.jaxws.workcontext.WorkContextServerTube类中获取<strong>XML数据</strong>最终传递给<strong>XMLDecoder来解析</strong>，其解析XML的调用链为：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">1、weblogic.wsee.jaxws.workcontext.WorkContextServerTube.processRequest</span><br><span class="line">&#x2F;&#x2F; 获取到localHeader1后传递给readHeaderOld方法，其内容为&lt;work:WorkContext&gt;所包裹的数据，然后继续跟进</span><br><span class="line">2、weblogic.wsee.jaxws.workcontext.WorkContextTube.readHeaderOld</span><br><span class="line">&#x2F;&#x2F; 在此方法中实例化了WorkContextXmlInputAdapter类，并且将获取到的XML格式的序列化数据传递到此类的构造方法中，最后通过XMLDecoder来进行反序列化操作</span><br><span class="line">&#x2F;&#x2F; public WorkContextXmlInputAdapter(InputStream paramInputStream)&#123;this.xmlDecoder&#x3D;new XMLDecoder(paramInputStream)&#125;</span><br><span class="line">3、weblogic.wsee.workarea.WorkContextXmlInputAdapter</span><br></pre></td></tr></table></figure><h2 id="修复建议"><a href="#修复建议" class="headerlink" title="修复建议"></a>修复建议</h2><p>1.临时解决方案<br>根据攻击者利用POC分析发现所利用的为wls-wsat组件的CoordinatorPortType接口，若Weblogic服务器集群中未应用此组件，建议临时备份后将此组件删除，当形成防护能力后，再进行恢复。</p><p>根据实际环境路径，删除WebLogic wls-wsat组件：</p><p>rm -f   /home/WebLogic/Oracle/Middleware/wlserver_10.3/server/lib/wls-wsat.war</p><p>rm -f   /home/WebLogic/Oracle/Middleware/user_projects/domains/base_domain/servers/AdminServer/tmp/.internal/wls-wsat.war</p><p>rm -rf /home/WebLogic/Oracle/Middleware/user_projects/domains/base_domain/servers/AdminServer/tmp/_WL_internal/wls-wsat</p><p>重启Weblogic域控制器服务:</p><p>DOMAIN_NAME/bin/stopWeblogic.sh           #停止服务</p><p>DOMAIN_NAME/bin/startManagedWebLogic.sh    #启动服务</p><p>删除以上文件之后，需重启WebLogic。确认<a href="http://weblogic_ip/wls-wsat/" target="_blank" rel="noopener">http://weblogic_ip/wls-wsat/</a> 是否为404页面。</p><p>2.官方补丁修复<br>前往Oracle官网下载10月份所提供的安全补丁</p><p><a href="http://www.oracle.com/technetwork/security-advisory/cpuoct2017-3236626.html" target="_blank" rel="noopener">http://www.oracle.com/technetwork/security-advisory/cpuoct2017-3236626.html</a></p><p>升级过程可参考：</p><p><a href="http://blog.csdn.net/qqlifu/article/details/49423839" target="_blank" rel="noopener">http://blog.csdn.net/qqlifu/article/details/49423839</a></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;weblogic-cve-2017-10271&quot;&gt;&lt;a href=&quot;#weblogic-cve-2017-10271&quot; class=&quot;headerlink&quot; title=&quot;weblogic-cve_2017_10271&quot;&gt;&lt;/a&gt;weblogic-cve_2017
      
    
    </summary>
    
    
    
      <category term="vulfocus练习" scheme="http://yoursite.com/tags/vulfocus%E7%BB%83%E4%B9%A0/"/>
    
  </entry>
  
  <entry>
    <title>tomcat-pass-getshell</title>
    <link href="http://yoursite.com/2020/08/26/tomcat-pass-getshell/"/>
    <id>http://yoursite.com/2020/08/26/tomcat-pass-getshell/</id>
    <published>2020-08-26T13:13:38.000Z</published>
    <updated>2020-08-26T13:23:52.155Z</updated>
    
    <content type="html"><![CDATA[<h1 id="前置知识"><a href="#前置知识" class="headerlink" title="前置知识"></a>前置知识</h1><p>Tomcat是Jakarta项目开发的<strong>Servlet</strong>容器，实现了<strong>对Servlet和JavaServer Page（JSP）的支持</strong>，并提供了作为Web服务器的一些特有功能，如Tomcat管理和控制平台、安全局管理和Tomcat阀等。</p><p>由于Tomcat本身也内含了HTTP服务器，因此也可以视作<strong>单独的Web服务器</strong>。但是，不能将Tomcat和Apache HTTP服务器混淆，Apache HTTP服务器是用C语言实现的HTTP Web服务器；这两个HTTP web server不是捆绑在一起的。Apache Tomcat包含了配置管理工具，也可以通过编辑XML格式的配置文件来进行配置。</p><p>Apache Tomcat的默认端口是8080，管理后台是tomcat manager，后台的路径是 /manager/html。</p><p>tomcat manager后台的弱口令账户密码是tomcat/tomcat。</p><h1 id="漏洞利用"><a href="#漏洞利用" class="headerlink" title="漏洞利用"></a>漏洞利用</h1><p>1、访问页面</p><table><thead><tr><th>PORT</th><th>STATE</th><th>SERVICE</th><th>VERSION</th></tr></thead><tbody><tr><td>54766/tcp</td><td>open</td><td>http</td><td>Apache  Tomcat/Coyote JSP engine 1.1</td></tr></tbody></table><img src="/2020/08/26/tomcat-pass-getshell/1.png" class title="This is an image"><p>2、直接尝试弱口令登入 Manager App 后台</p><img src="/2020/08/26/tomcat-pass-getshell/2.png" class title="This is an image"><p>3、往下翻，发现可以上传war包，war file to deploy</p><img src="/2020/08/26/tomcat-pass-getshell/3.png" class title="This is an image"><p>4、制作war包，将jsp马压缩为zip，改后缀为war，上传</p><img src="/2020/08/26/tomcat-pass-getshell/4.png" class title="This is an image"><p>5、然后构造木马访问路径 http://靶机地址/压缩包名/shell名.jsp(想要执行你的 war 文件，你需要进入该目录并点击 war 文件，或者是直接在 URL 里访问)</p><p>6、用冰蝎连接，成功后找flag，在tmp下</p><img src="/2020/08/26/tomcat-pass-getshell/5.png" class title="This is an image"><h1 id="漏洞分析"><a href="#漏洞分析" class="headerlink" title="漏洞分析"></a>漏洞分析</h1><p>1、Tomcat支持在后台部署war文件，可以直接将webshell部署到web目录下。其中，欲访问后台，需要对应用户有相应权限。</p><p>2、Tomcat7+权限分为：</p><ul><li>manager（后台管理）<ul><li>manager-gui 拥有html页面权限</li><li>manager-status 拥有查看status的权限</li><li>manager-script 拥有text接口的权限，和status权限</li><li>manager-jmx 拥有jmx权限，和status权限</li></ul></li><li>host-manager（虚拟主机管理）<ul><li>admin-gui 拥有html页面权限</li><li>admin-script 拥有text接口权限</li></ul></li></ul><p>3、正常安装的情况下，tomcat8中默认没有任何用户，且manager页面只允许本地IP访问。只有管理员手工修改了这些属性的情况下，才可以进行攻击。</p><p>4、为什么需要上传war包，为什么不是tar.zip一类的。</p><p>war包是用来进行Web开发时一个网站项目下的所有代码，包括前台HTML/CSS/JS代码，以及后台JavaWeb的代码。当开发人员开发完毕时，就会将源码打包给测试人员测试，测试完后若要发布则也会打包成War包进行发布。War包可以放在Tomcat下的webapps或word目录，当Tomcat服务器启动时，War包即会随之解压源代码来进行自动部署。</p><h1 id="修复建议"><a href="#修复建议" class="headerlink" title="修复建议"></a>修复建议</h1><p>1、在系统上以低权限运行Tomcat应用程序。创建一个专门的 Tomcat服务用户，该用户只能拥有一组最小权限（例如不允许远程登录）。</p><p>2、增加对于本地和基于证书的身份验证，部署账户锁定机制（对于集中式认证，目录服务也要做相应配置）。在CATALINA_HOME/conf/web.xml文件设置锁定机制和时间超时限制。</p><p>3、以及针对manager-gui/manager-status/manager-script等目录页面设置最小权限访问限制。</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;前置知识&quot;&gt;&lt;a href=&quot;#前置知识&quot; class=&quot;headerlink&quot; title=&quot;前置知识&quot;&gt;&lt;/a&gt;前置知识&lt;/h1&gt;&lt;p&gt;Tomcat是Jakarta项目开发的&lt;strong&gt;Servlet&lt;/strong&gt;容器，实现了&lt;strong&gt;对Serv
      
    
    </summary>
    
    
    
      <category term="vulfocus练习" scheme="http://yoursite.com/tags/vulfocus%E7%BB%83%E4%B9%A0/"/>
    
  </entry>
  
  <entry>
    <title>统一身份认证与应用</title>
    <link href="http://yoursite.com/2020/08/10/%E7%BB%9F%E4%B8%80%E8%BA%AB%E4%BB%BD%E8%AE%A4%E8%AF%81%E4%B8%8E%E5%BA%94%E7%94%A8/"/>
    <id>http://yoursite.com/2020/08/10/%E7%BB%9F%E4%B8%80%E8%BA%AB%E4%BB%BD%E8%AE%A4%E8%AF%81%E4%B8%8E%E5%BA%94%E7%94%A8/</id>
    <published>2020-08-10T14:12:22.000Z</published>
    <updated>2020-08-10T14:23:17.215Z</updated>
    
    <content type="html"><![CDATA[<p>1、统一身份认证(IAM, Identity and Access Management)与单点登录(SSO, single sign on)是同一个概念。如果没有统一身份认证，那么你进入任何一个应用系统都要求输入账号和密码，这样一方面难以记住众多的账号和密码，另一方面使用云端资源很烦琐。</p><p>2、对于云端应用系统的访问控制，通常分为三个层面：</p><p>认证：解决能否进入的问题。</p><p>授权：解决进入后能做什么的问题。</p><p>记账：解决做了事情后就要承担相应责任的问题，可能还要付费。</p><p>这就是通常所说的 3A 安全机制（Authentication，Authorization，Accountability）。</p><p>3、基于 3A 安全机制的访问控制在现代操作系统中被普遍采用，例如 Linux 操作系统访问控制步骤如下：</p><p>1）用户输入账号和密码企图登录系统，此时操作系统会进行认证（Authentication），即核对输入的账号和密码与保存在系统里的账号和密码是否相符。如果相符，则允许登录。</p><p>2）登录后的用户并不能为所欲为，其每一步操作都必须被授权（Authorization），比如允许进入什么目录、哪些文件允许读、哪些文件允许写、哪些文件允许删除等，都处于操作系统严密的监视之下。</p><p>3）用户的全部操作都被作为日志记录下来（Accountability），方便以后落实责任、事后监督，并作为付费的依据。</p><p>4、Windows 操作系统也采用相同的方法，作为云端的统一身份认证系统，必须实现以下四个功能：</p><p>1）统一用户管理（Identification）</p><p>租户的账号、密码等信息集中存储，统一管理。</p><p>2）身份鉴别（Authentication）</p><p>当租户企图登录某个应用系统时，验证他的票据或者身份是否合法。</p><p>3）权限控制（Authorization）</p><p>规定允许登录系统的租户具备哪些操作权限。</p><p>4）操作日志登记（Accountability）</p><p>记录租户的操作行为，以便事后责任追溯。</p><p>5、统一身份认证的功能描述</p><p>5.1、用户管理</p><img src="/2020/08/10/%E7%BB%9F%E4%B8%80%E8%BA%AB%E4%BB%BD%E8%AE%A4%E8%AF%81%E4%B8%8E%E5%BA%94%E7%94%A8/1.png" class title="This is an image"><p>企业的安全治理：</p><ul><li>根据用户职责规划用户组</li><li>并根据职责为用户组授权</li><li>再将用户加入到用户组中</li><li>使得用户具有所属用户组中的权限</li></ul><p>优势：</p><ul><li>用户灵活管理</li><li>当用户职责发生变化时，只需要调整其所属用户组即可</li><li>权限精细管理</li><li>您可以基于项目授予用户某个资源的操作权限</li></ul><p>5.2、联邦身份认证</p><img src="/2020/08/10/%E7%BB%9F%E4%B8%80%E8%BA%AB%E4%BB%BD%E8%AE%A4%E8%AF%81%E4%B8%8E%E5%BA%94%E7%94%A8/2.png" class title="This is an image"><p>单点登录：</p><p>企业内员工需要访问云时，无需注册云账号，通过配置联邦身份认证，在自身企业管理系统中认证后，即可直接访问云。</p><p>优势：</p><ul><li>入口统一</li><li>企业用户仅需要在自身的企业管理系统登录</li><li>轻松管理</li><li>企业只需管理一套企业管理系统的用户信息</li></ul><p>5.3、权限共享</p><img src="/2020/08/10/%E7%BB%9F%E4%B8%80%E8%BA%AB%E4%BB%BD%E8%AE%A4%E8%AF%81%E4%B8%8E%E5%BA%94%E7%94%A8/3.png" class title="This is an image"><p>协作：</p><p>您需要与其他账号共享你的资源和权限，但无需提供密码或密钥。</p><p>优势：</p><ul><li>使用便捷</li><li>选择好需要共享的权限后创建委托给被委托账号</li><li>可随时回收</li><li>建立的委托关系可以随时根据您的需要取消</li></ul>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;1、统一身份认证(IAM, Identity and Access Management)与单点登录(SSO, single sign on)是同一个概念。如果没有统一身份认证，那么你进入任何一个应用系统都要求输入账号和密码，这样一方面难以记住众多的账号和密码，另一方面使用
      
    
    </summary>
    
    
    
      <category term="统一身份认证" scheme="http://yoursite.com/tags/%E7%BB%9F%E4%B8%80%E8%BA%AB%E4%BB%BD%E8%AE%A4%E8%AF%81/"/>
    
  </entry>
  
  <entry>
    <title>威胁情报与分析模型</title>
    <link href="http://yoursite.com/2020/08/05/%E5%A8%81%E8%83%81%E6%83%85%E6%8A%A5/"/>
    <id>http://yoursite.com/2020/08/05/%E5%A8%81%E8%83%81%E6%83%85%E6%8A%A5/</id>
    <published>2020-08-05T14:06:54.000Z</published>
    <updated>2020-08-05T14:31:32.748Z</updated>
    
    <content type="html"><![CDATA[<p>整理自K0rz3n的博客，在此做记录【状态：通读一遍】</p><p><a href="https://www.k0rz3n.com/2019/03/19/威胁情报概念与APT事件分析模型概述/" target="_blank" rel="noopener">https://www.k0rz3n.com/2019/03/19/%E5%A8%81%E8%83%81%E6%83%85%E6%8A%A5%E6%A6%82%E5%BF%B5%E4%B8%8EAPT%E4%BA%8B%E4%BB%B6%E5%88%86%E6%9E%90%E6%A8%A1%E5%9E%8B%E6%A6%82%E8%BF%B0/</a></p><h1 id="威胁情报"><a href="#威胁情报" class="headerlink" title="威胁情报"></a>威胁情报</h1><p>1、威胁情报是关于IT或信息资产所面临的现有或潜在的威胁的循证知识，包括情境、机制、指标、推论与可行建议，这些知识可为威胁响应提供决策依据。</p><p>2、威胁情报的按不同标准有很多不同的分类方式，根据数据本身威胁情报可分为HASH值，IP地址，域名，网络或主机特征，TTPs这几种。</p><img src="/2020/08/05/%E5%A8%81%E8%83%81%E6%83%85%E6%8A%A5/1.png" class title="This is an image"><p>【左侧为可利用情报，右侧为这些情报给攻击者造成的困难程度】</p><p>2.1、一般来说情报中价值最低的是Hash值、IP地址和域名（也就是常说的信誉库），其次是网络/主机特征、攻击工具特征，对攻击者影响最大的是TTPs（战术、技术和行为模式）类型的威胁情报。这里分别做个简单介绍：</p><p><strong>HASH值</strong>：一般指<u>样本、文件的HASH值</u>，比如MD5和SHA系列。由于HASH函数的雪崩效应，文件任何微弱地改变，都会导致产生一个完全不同也不相关的哈希值。这使得在很多情况下，它变得不值得跟踪，所以它带来的防御效果也是最低的。</p><p><strong>IP地址</strong>：常见的指标之一，通过<u>IP的访问控制</u>可以抵御很多常见的攻击，但是又因为IP数量太大，任何攻击者均可以尝试更改IP地址，以绕过访问控制。</p><p><strong>域名</strong>：有些攻击类型或攻击手法也或者出于隐藏的目的，攻击者会<u>通过域名连接外部服务器进行间接通信</u>，由于域名需要购买、注册、与服务器绑定等操作使得它的成本相对IP是比较高的，<u>对域名的把控</u>产生的防御效果也是较好的。但是对于<u>高级APT攻击或大规模的团伙攻击，往往会准备大量备用域名</u>，所以它的限制作用也是有限。</p><p><strong>网络或主机特征</strong>：这里指的特征可以是很多方面，比如<u>攻击者浏览器的User-Agent、登录的用户名、访问的频率</u>等，这些特征就是一种对<u>攻击者的描述，这些情报数据可以很好的将攻击流量从其他的流量中提取出来</u>，就会产生一种较好的防御效果。</p><p><strong>攻击工具</strong>：这里是指<u>获取或检测到了攻击者使用的工具</u>，这种<u>基于工具的情报数据能够使得一批攻击失效，攻击者不得不进行免杀或重写工具</u>，这就达到了增加攻击成本的目的。</p><p><strong>TTPs</strong>：Tactics、Techniques &amp; Procedures的缩写，这里是指<u>攻击者所使用的攻击策略、手法等，掌握了些信息就能明白攻击者所利用的具体漏洞</u><u>，就能够针对性的布防</u>，使得攻击者不得不寻找新的漏洞，所以这也是价值最高的情报数据。</p><p>3、威胁情报按传统分类方法分为以下三类</p><p><strong>战术级情报</strong>：战术情报的作用主要是<u>发现威胁事件以及对报警确认或优先级排序</u>。常见的失陷检测情报（CnC 情报，即攻击者控制被害主机所使用的远程命令与控制服务器情报）、IP情报就属于这个范畴，它们都是可机读的情报，可以直接被设备使用，自动化的完成上述的安全工作。</p><p><strong>运营级情报</strong>：运营级情报是<u>给安全分析师或者说安全事件响应人员使用</u>的，目的是对已知的重要安全事件做分析（报警确认、攻击影响范围、攻击链以及攻击目的、技战术方法等）或者利用已知的攻击者技战术手法主动的查找攻击相关线索。</p><p><strong>战略级情报</strong>：战略层面的威胁情报是<u>给组织的安全管理者使用</u>的，比如CSO。它能够帮助决策者把握当前的安全态势，在安全决策上更加有理有据。包括了什么样的组织会进行攻击，攻击可能造成的危害有哪些，攻击者的战术能力和掌控的资源情况等，当然也会包括具体的攻击实例。</p><h1 id="APT-事件的分析与防御"><a href="#APT-事件的分析与防御" class="headerlink" title="APT 事件的分析与防御"></a>APT 事件的分析与防御</h1><p>高级持续性威胁(Advanced Persistent Threat)</p><p>1、威胁情报在事件分析中的定位</p><p>1.1、威胁情报数据并不能帮助甲方来预测攻击，威胁情报在安全运营体系中的定位是——<u>辅助发现潜在的或正在发起的恶意行为或操作</u>，重点在于辅助两个字，威胁情报严格意义上来说只能有限地感知潜在的威胁，换句话说：如果有人现在瞄准的目标全部都是能源类客户，那么威胁情报就可以提醒没有被攻击的客户可能会遭受到该攻击者的攻击，这个叫做有限的感知潜在的威胁。</p><p>1.2、威胁情报既然是个辅助手段，那么肯定有一个主要手段，这个主要的手段其实就是<u>针对事件的分析</u>，接下来主要说的是<u>两个分析使用的模型——钻石模型和Kill-Chain模型(杀伤链模型)</u>，这两个模型在分析的时候往往需要结合起来使用，尤其是比较大型的针对性的攻击诸如APT攻击。</p><p>2、杀伤链模型【攻击的进程和路线】</p><p>Kill-Chain模型分为7个部分，侦查阶段（Reconnaissance）、武器化阶段（Weaponization）、部署阶段（Delivery）、攻击阶段（Exploitation）、后门植入阶段（Installation）、远程控制阶段（C&amp;C, Command&amp;Control）、后渗透阶段（Actives on Objects），也就是下面这个样子：</p><p><strong>侦查阶段</strong>：<u>扫描目标IT资产和信息收集</u>，比如说Google Hacking这些侦查类型的攻击</p><p><strong>武器化阶段</strong>：将前一阶段发现和扫描到<u>漏洞的信息整合到一起并制作针对性的武器</u>（当然国内的嘛，你懂得）</p><p><strong>部署阶段</strong>：将这些<u>武器或者是远控RAT部署到对应的Compromised Servers</u>上</p><p><strong>攻击阶段</strong>：<u>使用这些Compromised Servers和之前做好的武器化工具对目标发起攻击</u></p><p><strong>后门种植阶段</strong>：<u>安装远程控制的服务和进程</u></p><p><strong>远控阶段</strong>：让<u>目标和C&amp;C通信</u></p><p><strong>后渗透阶段</strong>：收割、继续<u>横向渗透入侵</u></p><p>一次完整的攻击行为的参考就是上面说到的Kill-Chain，也就是用来<u>描述的攻击者攻击的路线和进行的进度</u>。但是Kill-Chain只能说明攻击的进程和路线，并不能很好地说明其造成的影响和目的，钻石模型就很好的针对性的补充了这点。</p><p>3、钻石模型【造成的影响和目的】</p><p>3.1、钻石模型是一个针对单个事件分析的模型，核心就是用来<u>描述攻击者的技战术和目的</u>，具体的钻石模型如下图所示：</p><img src="/2020/08/05/%E5%A8%81%E8%83%81%E6%83%85%E6%8A%A5/2.png" class title="This is an image"><p>【攻击者因为什么原因，利用哪些基础设施，并通过哪些手段，攻击了怎样的一个目标】</p><p>具体一点的关于图中信息的解释如下：</p><p><strong>社会政治影响</strong>：处于钻石模型上下两个顶点，上顶点表示攻击者，下顶点表示受害者也就是目标。<u>攻击者和受害者之间的某种利益冲突或者是社会地位对立则会产生攻击的意图和发起攻击的原因</u>，纵切面表示的就是社会政治影响。说大白话就是<u>根据这俩人去发现攻击的意图</u>。</p><p><strong>技战术组合</strong>：技战术组合位于整个钻石模型的横切面，横切面的两个顶点分别为<u>基础设施和技术能力</u>，这里的基础设施和技术能力其实都是相对于攻击者而言的。</p><p><strong>元数据</strong>：这个其实就是左边列出来的，<u>攻击时间、攻击阶段、攻击结果、攻击方向、攻击手段、攻击资源利用</u></p><p><strong>置信度</strong>：也就是以上你分析出<u>结果的可信程度</u>。</p><p>3.2、钻石模型建立的基本元素是入侵活动事件，事件有四个基本特征：对手、能力、基础设施和受害者。</p><img src="/2020/08/05/%E5%A8%81%E8%83%81%E6%83%85%E6%8A%A5/3.png" class title="This is an image"><p><strong>对手</strong>：对手的知识一般情况下难以掌握，特别是在刚发现的时候，这时候会简单的将对手的活动当作对手。</p><p><strong>能力</strong>：描述事件中使用的<u>工具或者技术</u>。可以包括最原始的手工方法，也可以是高度复杂的自动化攻击，所有已披露的漏洞应该属于其一部分。</p><p><strong>基础设施</strong>：描述攻击者用来递送能力的物理或逻辑结构，如：IP地址、域名、邮件地址、或者某个USB设备等。基础设施有两种类型，一类是<u>攻击者完全控制及拥有</u>的，另一类是<u>短时间控制</u>的，如僵尸主机、恶意网址、攻击跳跃点、失陷的账号等等，它们很可能会混淆恶意活动的起源和归属。</p><p><strong>受害者</strong>：受害者的身份和资产在不同的分析中都非常有用，受害者或社会-政治为支点的安全分析中受害者身份作用重大，而脆弱性评估必然和资产相关。资产同时可能是攻击面或最终目标。</p><p>3.3、支点分析pivote</p><img src="/2020/08/05/%E5%A8%81%E8%83%81%E6%83%85%E6%8A%A5/4.png" class title="This is an image"><p>4、杀伤链与钻石模型的组合分析</p><p>复杂的攻击往往都是由一系列的攻击事件组成的，不同的攻击事件指向的目标和达到的目的可以表示出攻击的进程，那么我们如果把事件按照Kill-Chain进行分类同时使用泳道图进行表示，同时把不同的攻击路线分为不同的攻击线程，那么我们就可以得到一个这样的泳道图。</p><img src="/2020/08/05/%E5%A8%81%E8%83%81%E6%83%85%E6%8A%A5/5.png" class title="This is an image"><p>其实这张图描述的是这么一个事件：</p><p>1.攻击者先对目标进行了Google Hacking操作，获得了他们域名解析记录等一些基础的It信息</p><p>2.攻击者找到了一个目标新注册的域名，然后用搜索引擎搜索他们的网络管理员的电子邮件信息</p><p>3.攻击者使用鱼叉邮件方式对目标的网络管理员发送一封带有木马的邮件</p><p>4.目标的网管（我们叫他网管一号）打开了这封邮件的附件然后不幸中枪</p><p>5.网管一号的主机因为中了病毒，所以攻击者利用网管一号这台主机发送了一个HTTP Post请求到域控节点，然后域控节点返回了一个HTTP Response</p><p>6.我们通过对鱼叉邮件中附件进行逆向分析发现里面有两个IP地址，第二个IP地址作为备份，防止第一个失效</p><p>7.通过C&amp;C请求到网管一号的主机，我们的恶意程序打开了一个TCP代理服务</p><p>8.通过网管一号主机上的代理服务，攻击者继续去Google上搜索其他的目标</p><p>9.攻击者检查网管一号邮件的通信录列表去寻找是否拥有目标二号的通讯方式，结果发现了目标二号的首席科学家的联系方式</p><p>10.攻击者使用攻陷的网管一号的邮箱对目标二号的首席科学家的邮箱发起鱼叉邮件攻击，工具使用和之前一样的</p><p>11.此时又来了一个攻击者，我们称他为攻击者二号，攻击者一号扫描了目标三号的web服务器</p><p>12.使用同样的漏洞利用工具攻击发现目标三号主机上的相同的漏洞</p><p>13.被攻陷的目标三号主机返回一个shell会话给攻击者三号</p><p>14.目标三号的所有数据被攻击者三号窃取</p><p>这样的话使用Kill-Chain和钻石模型分析可以同时get到攻击者的点和想要攻击的目标，同时还知道了他的攻击路径，也就是说这时候我们对攻击者了如指掌了。</p><p>5、基于Kill-Chain的安全防护矩阵</p><img src="/2020/08/05/%E5%A8%81%E8%83%81%E6%83%85%E6%8A%A5/6.png" class title="This is an image"><h1 id="ATT-amp-CK框架"><a href="#ATT-amp-CK框架" class="headerlink" title="ATT&amp;CK框架"></a>ATT&amp;CK框架</h1><p>补充ing</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;整理自K0rz3n的博客，在此做记录【状态：通读一遍】&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://www.k0rz3n.com/2019/03/19/威胁情报概念与APT事件分析模型概述/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;https:/
      
    
    </summary>
    
    
    
      <category term="威胁情报" scheme="http://yoursite.com/tags/%E5%A8%81%E8%83%81%E6%83%85%E6%8A%A5/"/>
    
  </entry>
  
  <entry>
    <title>大型互联网企业安全架构</title>
    <link href="http://yoursite.com/2020/05/20/%E5%AE%89%E5%85%A8%E6%9E%B6%E6%9E%84/"/>
    <id>http://yoursite.com/2020/05/20/%E5%AE%89%E5%85%A8%E6%9E%B6%E6%9E%84/</id>
    <published>2020-05-20T13:26:12.000Z</published>
    <updated>2020-05-25T06:28:43.452Z</updated>
    
    <content type="html"><![CDATA[<h1 id="基础运维"><a href="#基础运维" class="headerlink" title="基础运维"></a>基础运维</h1><p>业务开发（Dev）完成后，就进入运维（Ops）阶段了，该阶段的资产管理、漏洞与补丁管理、安全配置基线、应急响应等如果没有做好也容易造成各种安全风险。</p><h1 id="基础安全运营平台"><a href="#基础安全运营平台" class="headerlink" title="基础安全运营平台"></a>基础安全运营平台</h1><p>基础安全运营平台是集<strong>威胁情报、漏洞检测、入侵感知、主动防御、后门查杀、安全基线、安全大脑</strong>于一体的综合安全平台，承担着企业抵御各种网络攻击和防范内部风险的重任。首先通过威胁情报从外部获取最新的攻击数据和趋势，其次通过漏洞检测统计企业资产并周期性巡检、修补安全漏洞，再基于入侵感知发现各种网络、主机、服务的攻击，随后使用主动防御、后门查杀及安全基线实现对入侵攻击免疫和安全加固，最后通过安全大脑统筹分析和自动化响应，一气呵成完成互联网企业的基础安全运营工作。</p><h2 id="威胁情报"><a href="#威胁情报" class="headerlink" title="威胁情报"></a>威胁情报</h2><p>随着网络安全环境越来越复杂，威胁情报（TIP）也扮演着越来越重要的角色。除了传统的URL、IP地址、域名（Domain）、文件（File），漏洞的POC（Proof Of Concept）、攻击手法、社交媒体信息、通过GPS（全球定位系统）获取的信息、数据泄露情况等也属于广义的安全威胁情报。</p><h2 id="漏洞检测"><a href="#漏洞检测" class="headerlink" title="漏洞检测"></a>漏洞检测</h2><p>在运营阶段，常常会爆发很多新型漏洞或第三方组件漏洞，这些漏洞在开发阶段通常可能没有被发现或公开，或者在做运维配置时使用了弱口令等，这为导致安全问题埋下了隐患，所以周期性的漏洞巡检必不可少。</p><p>按照漏洞检测方式的不同，漏洞大致可以被分为以下3种类型。·</p><p>网络漏洞：可以通过对端口直接进行远程扫描而发现的漏洞，如OpenSSH远程溢出漏洞、MySQL弱口令等。·</p><p>主机漏洞：只能在本地利用和检测的漏洞，如Linux内核提权、glibc漏洞提权等。·</p><p>网站漏洞：需要通过爬虫和遍历网站页面提取URL和参数才能检测的漏洞，如SQL注入、XSS跨站、命令执行、SSRF等。</p><h2 id="入侵感知"><a href="#入侵感知" class="headerlink" title="入侵感知"></a>入侵感知</h2><p>入侵感知技术是一种通过监控一系列与安全相关的异常指标来达到发现入侵目的的手段。一般可以从被动渠道感知入侵：①网络异常，如DDoS攻击、异常DNS请求、ARP欺骗；②主机异常，如暴力破解、反弹shell、系统提权；③隔离异常，如VM逃逸、容器逃逸；④应用异常，如命令执行、文件读写、SQL注入。也可从主动渠道（如蜜罐、诱饵、蜜签）来感知入侵。</p><h2 id="主动防御"><a href="#主动防御" class="headerlink" title="主动防御"></a>主动防御</h2><p>主动防御技术通常以保护为主。在系统默认安全的基础上加入主动防御技术通常有助于拦截已知或未知的安全威胁，比如，对于主机层Linux内核提权漏洞，在内核层再加上一层内核保护技术即可拦截提权进程；在应用层的Struts2、Spring框架基础上加入RASP技术即可拦截绝大部分零日漏洞。通过主动防御来层层设防，如使用HIPS、WAF、RASP、数据库防火墙等，即可实现纵深防御架构，从而保障业务的安全性。</p><h2 id="后门查杀（AV）"><a href="#后门查杀（AV）" class="headerlink" title="后门查杀（AV）"></a>后门查杀（AV）</h2><p>黑客入侵服务器后为了长期控制或便于操作系统通常会在主机中留下后门。一般后门大致分为3类：①高度隐蔽性后门Rootkit，②一般性远程控制后门，③在Web环境下执行的Webshell后门。</p><h2 id="安全基线"><a href="#安全基线" class="headerlink" title="安全基线"></a>安全基线</h2><p>安全基线</p><p>配置安全问题在安全漏洞中占很大比例，涉及的范围包括网络、操作系统、各种应用服务器以及数据库系统等。常见的安全基线包含默认安全配置和安全加固两部分。</p><p>【安全配置基线基本包括了所有的操作系统、数据库、中间件、网络设备、浏览器、云服务的安全配置，一般互联网公司可基于上述安全基线模板来开发自己的安全基线检查系统。】</p><h2 id="安全大脑"><a href="#安全大脑" class="headerlink" title="安全大脑"></a>安全大脑</h2><p>安全大脑</p><p>安全大脑即安全数据的综合分析与编排自动化响应中心，主要功能包含安全态势感知（SecuritySituation Awareness，SSA）、安全信息和事件管理（Security Information and EventManagement，SIEM）、安全编排与自动化响应（Security Orchestration,Automation andResponse，SOAR）。</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;基础运维&quot;&gt;&lt;a href=&quot;#基础运维&quot; class=&quot;headerlink&quot; title=&quot;基础运维&quot;&gt;&lt;/a&gt;基础运维&lt;/h1&gt;&lt;p&gt;业务开发（Dev）完成后，就进入运维（Ops）阶段了，该阶段的资产管理、漏洞与补丁管理、安全配置基线、应急响应等如果没有做好
      
    
    </summary>
    
    
    
      <category term="安全运营" scheme="http://yoursite.com/tags/%E5%AE%89%E5%85%A8%E8%BF%90%E8%90%A5/"/>
    
  </entry>
  
  <entry>
    <title>Web安全基础总结</title>
    <link href="http://yoursite.com/2020/05/20/Web%E5%AE%89%E5%85%A8%E5%9F%BA%E7%A1%80%E6%80%BB%E7%BB%93/"/>
    <id>http://yoursite.com/2020/05/20/Web%E5%AE%89%E5%85%A8%E5%9F%BA%E7%A1%80%E6%80%BB%E7%BB%93/</id>
    <published>2020-05-20T13:20:43.000Z</published>
    <updated>2020-08-28T16:52:44.225Z</updated>
    
    <content type="html"><![CDATA[<h1 id="白帽子讲Web安全—小记"><a href="#白帽子讲Web安全—小记" class="headerlink" title="白帽子讲Web安全—小记"></a>白帽子讲Web安全—小记</h1><h2 id="OWASP-TOP-10"><a href="#OWASP-TOP-10" class="headerlink" title="OWASP TOP 10"></a>OWASP TOP 10</h2><ol><li><a href="https://owasp.org/www-project-top-ten/OWASP_Top_Ten_2017/Top_10-2017_A1-Injection" target="_blank" rel="noopener"><strong>Injection</strong></a>。当将不受信任的数据作为命令或查询的一部分发送到解释器时，会发生注入缺陷，例如SQL，NoSQL，OS和LDAP注入。攻击者的敌对数据可能会诱使解释器执行未经预期的命令或未经适当授权而访问数据。</li><li><a href="https://owasp.org/www-project-top-ten/OWASP_Top_Ten_2017/Top_10-2017_A2-Broken_Authentication" target="_blank" rel="noopener"><strong>身份验证失败</strong></a>。与身份验证和会话管理有关的应用程序功能通常会错误地实现，从而使攻击者能够破坏密码，密钥或会话令牌，或者利用其他实现缺陷来临时或永久地假定其他用户的身份。</li><li><a href="https://owasp.org/www-project-top-ten/OWASP_Top_Ten_2017/Top_10-2017_A3-Sensitive_Data_Exposure" target="_blank" rel="noopener"><strong>敏感数据暴露</strong></a>。许多Web应用程序和API无法正确保护敏感数据，例如金融，医疗保健和PII。攻击者可能会窃取或修改这些受保护程度不高的数据，以进行信用卡欺诈，身份盗用或其他犯罪。敏感数据可能会在没有额外保护的情况下受到损害，例如静态加密或传输中加密，并且在与浏览器进行交换时需要采取特殊的预防措施。</li><li><a href="https://owasp.org/www-project-top-ten/OWASP_Top_Ten_2017/Top_10-2017_A4-XML_External_Entities_(XXE)" target="_blank" rel="noopener"><strong>XML外部实体（XXE）</strong></a>。许多较旧的或配置不当的XML处理器都会评估XML文档中的外部实体引用。外部实体可以使用文件URI处理程序，内部文件共享，内部端口扫描，远程代码执行和拒绝服务攻击来公开内部文件。</li><li><a href="https://owasp.org/www-project-top-ten/OWASP_Top_Ten_2017/Top_10-2017_A5-Broken_Access_Control" target="_blank" rel="noopener"><strong>损坏的访问控制</strong></a>。通常，对身份验证用户允许执行的操作的限制通常未得到正确执行。攻击者可以利用这些缺陷来访问未经授权的功能和/或数据，例如访问其他用户的帐户，查看敏感文件，修改其他用户的数据，更改访问权限等。</li><li><a href="https://owasp.org/www-project-top-ten/OWASP_Top_Ten_2017/Top_10-2017_A6-Security_Misconfiguration" target="_blank" rel="noopener"><strong>安全配置错误</strong></a>。安全配置错误是最常见的问题。这通常是由于不安全的默认配置，不完整或临时的配置，开放的云存储，错误配置的HTTP标头以及包含敏感信息的冗长错误消息的结果。不仅必须安全地配置所有操作系统，框架，库和应用程序，而且还必须及时对其进行修补/升级。</li><li><a href="https://owasp.org/www-project-top-ten/OWASP_Top_Ten_2017/Top_10-2017_A7-Cross-Site_Scripting_(XSS)" target="_blank" rel="noopener"><strong>跨站点脚本XSS</strong></a>。每当应用程序在未经适当验证或转义的情况下在新网页中包含不受信任的数据，或者使用可以创建HTML或JavaScript的浏览器API用用户提供的数据更新现有网页时，都会发生XSS漏洞。XSS允许攻击者在受害者的浏览器中执行脚本，这些脚本可以劫持用户会话，破坏网站或将用户重定向到恶意网站。</li><li><a href="https://owasp.org/www-project-top-ten/OWASP_Top_Ten_2017/Top_10-2017_A8-Insecure_Deserialization" target="_blank" rel="noopener"><strong>不安全的反序列化</strong></a>。不安全的反序列化通常会导致远程执行代码。即使反序列化缺陷不会导致远程执行代码，也可以将它们用于执行攻击，包括重播攻击，注入攻击和特权升级攻击。</li><li><a href="https://owasp.org/www-project-top-ten/OWASP_Top_Ten_2017/Top_10-2017_A9-Using_Components_with_Known_Vulnerabilities" target="_blank" rel="noopener"><strong>使用已知漏洞的组件</strong></a>。诸如库，框架和其他软件模块之类的组件以与应用程序相同的特权运行。如果利用了易受攻击的组件，则此类攻击可能会导致严重的数据丢失或服务器接管。使用具有已知漏洞的组件的应用程序和API可能破坏应用程序防御，并造成各种攻击和影响。</li><li><a href="https://owasp.org/www-project-top-ten/OWASP_Top_Ten_2017/Top_10-2017_A10-Insufficient_Logging%2526Monitoring" target="_blank" rel="noopener"><strong>日志和监控不足</strong></a>。日志和监视的不足，再加上事件响应的缺失或无效集成，使攻击者可以进一步攻击系统，保持持久性，转向更多系统以及篡改，提取或破坏数据。大多数违规研究表明，检测到违规的时间超过200天，通常由外部各方而不是内部流程或监视来检测。</li></ol><h1 id="Fuzzing"><a href="#Fuzzing" class="headerlink" title="Fuzzing"></a>Fuzzing</h1><p>模糊测试是一种黑盒软件测试技术，它基本上包括使用格式错误/半格式数据注入以自动方式查找实现错误。</p><p>一个简单的例子<br>考虑一个程序中的整数，该整数存储用户在3个问题之间进行选择的结果。当用户选择一个时，选择将是0、1或2。这是三种实际情况。但是，如果我们传输3或255怎么办？我们可以，因为整数存储了一个静态大小变量。如果未安全地实现默认开关情况，则该程序可能会崩溃并导致“经典”安全问题：（无法利用的）缓冲区溢出，DoS等……</p><p>模糊测试是自动发现错误的艺术，它的作用是发现软件实现错误，并在可能的情况下识别它们。</p><p>模糊测试是一种介于完全的手工渗透测试与完全的自动化测试之间的安全性测试类型。它充分利用了机器的能力：随机生成和发送数据；同时，也尝试将安全专家在安全性方面的经验引入进来。从执行过程来说，模糊测试的执行过程非常简单：<br>　　测试工具通过随机或是半随机的方式生成大量数据；<br>　　测试工具将生成的数据发送给被测试的系统（输入）；<br>　　测试工具检测被测系统的状态（如是否能够响应，响应是否正确等）；<br>　　根据被测系统的状态判断是否存在潜在的安全漏洞。<br>　　显然，模糊测试的整个执行过程是依靠工具进行的自动化测试。但是，看起来它完全是一个类似MonkeyTest工具的随机数据生成器嘛，这怎么能和安全专家的经验结合起来呢？别着急，我们用一个例子来演示一下。<br>　　为了简单起见，假定我们要测试的应用是一个C/S应用的服务端程序。这个程序运行在Unix平台上，名字叫做TgServer。我们唯一知道的信息就是客户端和TgServer之间使用基于TCP/IP的自定义协议进行通讯。这种情况下，我们该如何尝试找到应用系统中可能的漏洞？</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;白帽子讲Web安全—小记&quot;&gt;&lt;a href=&quot;#白帽子讲Web安全—小记&quot; class=&quot;headerlink&quot; title=&quot;白帽子讲Web安全—小记&quot;&gt;&lt;/a&gt;白帽子讲Web安全—小记&lt;/h1&gt;&lt;h2 id=&quot;OWASP-TOP-10&quot;&gt;&lt;a href=&quot;#O
      
    
    </summary>
    
    
    
      <category term="Web安全" scheme="http://yoursite.com/tags/Web%E5%AE%89%E5%85%A8/"/>
    
  </entry>
  
  <entry>
    <title>SPM维护</title>
    <link href="http://yoursite.com/2020/05/18/SPM%E7%BB%B4%E6%8A%A4/"/>
    <id>http://yoursite.com/2020/05/18/SPM%E7%BB%B4%E6%8A%A4/</id>
    <published>2020-05-18T11:36:45.000Z</published>
    <updated>2020-05-25T06:54:15.384Z</updated>
    
    <content type="html"><![CDATA[<h2 id="软件项目管理"><a href="#软件项目管理" class="headerlink" title="软件项目管理"></a>软件项目管理</h2><h3 id="实验—LRR维护"><a href="#实验—LRR维护" class="headerlink" title="实验—LRR维护"></a>实验—LRR维护</h3><h4 id="准备工作"><a href="#准备工作" class="headerlink" title="准备工作"></a>准备工作</h4><p>1.安装wampserver集成服务器组件（Apache+PHP+Mysql/MariaDB）。</p><p>2.phpmyadmin新建lrr数据库并导入sql文件，两个sql文件任选其一。</p><p>3.安装HBuilderX或PhpStorm，进行必要的配置。</p><p>4.打开LRR即为成功。</p><img src="/2020/05/18/SPM%E7%BB%B4%E6%8A%A4/image-20200518221332226.png" class title="This is an image"><h4 id="维护流程"><a href="#维护流程" class="headerlink" title="维护流程"></a>维护流程</h4><p>1.明确bug，运行时错误，团队成员的名字在一组中多次出现。</p><img src="/2020/05/18/SPM%E7%BB%B4%E6%8A%A4/image-20200518221343243.png" class title="This is an image"><blockquote><p><a href="http://118.25.96.118/bugzilla/show_bug.cgi?id=57" target="_blank" rel="noopener">http://118.25.96.118/bugzilla/show_bug.cgi?id=57</a></p><p>Hui Lan 2020-03-15 13:55:57 CST</p><p><a href="http://118.25.96.118/bugzilla/show_bug.cgi?id=57" target="_blank" rel="noopener">Repeated names in a course group</a></p><p>QWQ- Leader : 陆博业(201732120119)<br>Zhou Xianlong-201732120130 (Joined)<br>陆博业-201732120119 (Created)<br>吕伊豪-201732120120 (Joined)<br>郑可富-201732120129 (Joined)<br>郑可富-201732120129 (Joined)<br>郑可富-201732120129 (Joined)<br>郑可富-201732120129 (Joined)<br>郑可富-201732120129 (Joined)</p></blockquote><p>2.修改Script.php文件中的connection为本地root连接。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">&#x2F;&#x2F;$con&#x3D;mysqli_connect(&quot;localhost&quot;,&quot;Teecloudy&quot;,&quot;5q7Ol2e!#!&quot;,&quot;lrr&quot;);</span><br><span class="line">$con&#x3D;mysqli_connect(&quot;localhost&quot;,&quot;root&quot;,&quot;&quot;,&quot;lrr&quot;);</span><br></pre></td></tr></table></figure><p>3.因为此bug是学生端创建组问题，因此以学生身份登录，UserType=Student。</p><p>4.问题复现。</p><ul><li>创建Group，遇到的问题。</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">TypeError:$(...).dialog is not a function</span><br><span class="line">&#x2F;&#x2F;没有添加jquery-ui.css和jquery-ui.js</span><br><span class="line">TypeError: r.getClientRects is not a function</span><br><span class="line">&#x2F;&#x2F;添加的jquery-ui的版本为1.10.4导致此问题，更新为最新的1.12.1就显示正常了</span><br></pre></td></tr></table></figure><ul><li>重复邀请好友，还原到问题根本。</li></ul><img src="/2020/05/18/SPM%E7%BB%B4%E6%8A%A4/image-20200520005825475.png" class title="This is an image"><img src="/2020/05/18/SPM%E7%BB%B4%E6%8A%A4/image-20200520141050255.png" class title="This is an image"><ul><li>猜测是系统没有判断该好友是否已加入队伍，好像很好修复，加个判断就行，那就来试一下。</li></ul><p>5.代码审计。</p><ul><li>定位到邀请好友模块。该页面处于Course.php中。</li></ul><img src="/2020/05/18/SPM%E7%BB%B4%E6%8A%A4/image-20200520140322816.png" class title="This is an image"><img src="/2020/05/18/SPM%E7%BB%B4%E6%8A%A4/image-20200520140538458.png" class title="This is an image"><ul><li>表单传递到Script.php中处理。</li></ul><img src="/2020/05/18/SPM%E7%BB%B4%E6%8A%A4/image-20200520140803714.png" class title="This is an image"><p>该Invite Group Request模块并未在插入数据之前检查这条数据的合理性（是否重复包含）。</p><p>在获取student_id后直接插入数据表course_group_members_table。</p><p>6.解决方法。在插入之前先查询，比较之后再执行sql语句。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">$result &#x3D; mysqli_query($con,&quot;SELECT * FROM course_group_members_table where Course_Group_id &#x3D; &#39;$groupid&#39; and Student_ID &#x3D; &#39;$student_id&#39;&quot;);</span><br><span class="line">if(mysqli_num_rows($result)&gt;0)&#123;</span><br><span class="line">$_SESSION[&quot;info_ReMarking&quot;]&#x3D;&quot;This student has already been invited&quot;;</span><br><span class="line">header(&quot;Location: Course.php?url&#x3D;&quot;.$url);</span><br><span class="line">&#125;else&#123;</span><br><span class="line">$sql&#x3D;&quot;INSERT INTO &#96;course_group_members_table&#96;( &#96;Course_Group_id&#96;, &#96;Student_ID&#96;, &#96;Status&#96;) VALUES ($groupid,$student_id,&#39;Invited&#39;)&quot;;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>该if-else语句首先查询数据库中是否存在要添加的student_id，若返回结果集中行的数量大于0，则表示已存在该student_id，那么重定向到当前页面；否则执行添加student_id的sql语句。</p><p>注意：把数据库表course_groups_table和course_group_members_table中重复的student_id数据先手动删除，否则mysqli_num_rows()返回值会大于0。</p><p>7.关于旧版和新版引申出的新bug。</p><p>我在旧版的基础上进行了修改，也保证了我的修改准确无误。</p><p>因为LRR更新了新版，因此我也在新版上进行了测试，但是我发现了一个问题（这样的问题可能不止我发现的这一处）。</p><p>我在添加成员后发现，course_group_members_table数据表的添加没有问题，course_groups_table中成员的student_id未添加。</p><img src="/2020/05/18/SPM%E7%BB%B4%E6%8A%A4/Snipaste_2020-05-25_12-58-32.png" class title="This is an image"><img src="/2020/05/18/SPM%E7%BB%B4%E6%8A%A4/Snipaste_2020-05-25_12-58-54.png" class title="This is an image"><p>以下是旧版部分代码截图：</p><img src="/2020/05/18/SPM%E7%BB%B4%E6%8A%A4/Snipaste_2020-05-25_12-51-50.png" class title="This is an image"><p>以下是新版部分代码截图：</p><img src="/2020/05/18/SPM%E7%BB%B4%E6%8A%A4/Snipaste_2020-05-25_12-51-15.png" class title="This is an image"><p>可以发现新版LRR删除了部分代码，那部分被删除的代码刚好导致了这个原因，因此我重新添加了原来的代码，并修改了错误的title为原版的“Invite Group Request and add a new member into the database”。</p><p>8.验证测试。</p><img src="/2020/05/18/SPM%E7%BB%B4%E6%8A%A4/Snipaste_2020-05-25_13-54-30.png" class title="This is an image"><img src="/2020/05/18/SPM%E7%BB%B4%E6%8A%A4/Snipaste_2020-05-25_13-54-41.png" class title="This is an image"><img src="/2020/05/18/SPM%E7%BB%B4%E6%8A%A4/Snipaste_2020-05-25_13-54-53.png" class title="This is an image"><img src="/2020/05/18/SPM%E7%BB%B4%E6%8A%A4/Snipaste_2020-05-25_13-55-05.png" class title="This is an image"><img src="/2020/05/18/SPM%E7%BB%B4%E6%8A%A4/Snipaste_2020-05-25_14-53-26.png" class title="This is an image"><img src="/2020/05/18/SPM%E7%BB%B4%E6%8A%A4/Snipaste_2020-05-25_13-55-37.png" class title="This is an image"><img src="/2020/05/18/SPM%E7%BB%B4%E6%8A%A4/Snipaste_2020-05-25_13-55-48.png" class title="This is an image"><p>因youtube、youku、bilibili等上传视频需实名认证和审核，所以录像上传至百度网盘。</p><p>链接：<a href="https://pan.baidu.com/s/1zbWNkLSf6g_iBh7j9I6-lQ" target="_blank" rel="noopener">https://pan.baidu.com/s/1zbWNkLSf6g_iBh7j9I6-lQ</a><br>提取码：qwrj</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;软件项目管理&quot;&gt;&lt;a href=&quot;#软件项目管理&quot; class=&quot;headerlink&quot; title=&quot;软件项目管理&quot;&gt;&lt;/a&gt;软件项目管理&lt;/h2&gt;&lt;h3 id=&quot;实验—LRR维护&quot;&gt;&lt;a href=&quot;#实验—LRR维护&quot; class=&quot;headerlink&quot; 
      
    
    </summary>
    
    
    
      <category term="SPM" scheme="http://yoursite.com/tags/SPM/"/>
    
  </entry>
  
</feed>
