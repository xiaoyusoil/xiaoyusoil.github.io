{"meta":{"title":"生鱼忧患","subtitle":"网络安全&软件开发","description":"","author":"真小鱼","url":"http://yoursite.com","root":"/"},"pages":[],"posts":[{"title":"统一身份认证与应用","slug":"统一身份认证与应用","date":"2020-08-10T14:12:22.000Z","updated":"2020-08-10T14:23:17.215Z","comments":true,"path":"2020/08/10/统一身份认证与应用/","link":"","permalink":"http://yoursite.com/2020/08/10/%E7%BB%9F%E4%B8%80%E8%BA%AB%E4%BB%BD%E8%AE%A4%E8%AF%81%E4%B8%8E%E5%BA%94%E7%94%A8/","excerpt":"","text":"1、统一身份认证(IAM, Identity and Access Management)与单点登录(SSO, single sign on)是同一个概念。如果没有统一身份认证，那么你进入任何一个应用系统都要求输入账号和密码，这样一方面难以记住众多的账号和密码，另一方面使用云端资源很烦琐。 2、对于云端应用系统的访问控制，通常分为三个层面： 认证：解决能否进入的问题。 授权：解决进入后能做什么的问题。 记账：解决做了事情后就要承担相应责任的问题，可能还要付费。 这就是通常所说的 3A 安全机制（Authentication，Authorization，Accountability）。 3、基于 3A 安全机制的访问控制在现代操作系统中被普遍采用，例如 Linux 操作系统访问控制步骤如下： 1）用户输入账号和密码企图登录系统，此时操作系统会进行认证（Authentication），即核对输入的账号和密码与保存在系统里的账号和密码是否相符。如果相符，则允许登录。 2）登录后的用户并不能为所欲为，其每一步操作都必须被授权（Authorization），比如允许进入什么目录、哪些文件允许读、哪些文件允许写、哪些文件允许删除等，都处于操作系统严密的监视之下。 3）用户的全部操作都被作为日志记录下来（Accountability），方便以后落实责任、事后监督，并作为付费的依据。 4、Windows 操作系统也采用相同的方法，作为云端的统一身份认证系统，必须实现以下四个功能： 1）统一用户管理（Identification） 租户的账号、密码等信息集中存储，统一管理。 2）身份鉴别（Authentication） 当租户企图登录某个应用系统时，验证他的票据或者身份是否合法。 3）权限控制（Authorization） 规定允许登录系统的租户具备哪些操作权限。 4）操作日志登记（Accountability） 记录租户的操作行为，以便事后责任追溯。 5、统一身份认证的功能描述 5.1、用户管理 企业的安全治理： 根据用户职责规划用户组 并根据职责为用户组授权 再将用户加入到用户组中 使得用户具有所属用户组中的权限 优势： 用户灵活管理 当用户职责发生变化时，只需要调整其所属用户组即可 权限精细管理 您可以基于项目授予用户某个资源的操作权限 5.2、联邦身份认证 单点登录： 企业内员工需要访问云时，无需注册云账号，通过配置联邦身份认证，在自身企业管理系统中认证后，即可直接访问云。 优势： 入口统一 企业用户仅需要在自身的企业管理系统登录 轻松管理 企业只需管理一套企业管理系统的用户信息 5.3、权限共享 协作： 您需要与其他账号共享你的资源和权限，但无需提供密码或密钥。 优势： 使用便捷 选择好需要共享的权限后创建委托给被委托账号 可随时回收 建立的委托关系可以随时根据您的需要取消","categories":[],"tags":[{"name":"统一身份认证","slug":"统一身份认证","permalink":"http://yoursite.com/tags/%E7%BB%9F%E4%B8%80%E8%BA%AB%E4%BB%BD%E8%AE%A4%E8%AF%81/"}]},{"title":"威胁情报与分析模型","slug":"威胁情报","date":"2020-08-05T14:06:54.000Z","updated":"2020-08-05T14:31:32.748Z","comments":true,"path":"2020/08/05/威胁情报/","link":"","permalink":"http://yoursite.com/2020/08/05/%E5%A8%81%E8%83%81%E6%83%85%E6%8A%A5/","excerpt":"","text":"整理自K0rz3n的博客，在此做记录【状态：通读一遍】 https://www.k0rz3n.com/2019/03/19/%E5%A8%81%E8%83%81%E6%83%85%E6%8A%A5%E6%A6%82%E5%BF%B5%E4%B8%8EAPT%E4%BA%8B%E4%BB%B6%E5%88%86%E6%9E%90%E6%A8%A1%E5%9E%8B%E6%A6%82%E8%BF%B0/ 威胁情报1、威胁情报是关于IT或信息资产所面临的现有或潜在的威胁的循证知识，包括情境、机制、指标、推论与可行建议，这些知识可为威胁响应提供决策依据。 2、威胁情报的按不同标准有很多不同的分类方式，根据数据本身威胁情报可分为HASH值，IP地址，域名，网络或主机特征，TTPs这几种。 【左侧为可利用情报，右侧为这些情报给攻击者造成的困难程度】 2.1、一般来说情报中价值最低的是Hash值、IP地址和域名（也就是常说的信誉库），其次是网络/主机特征、攻击工具特征，对攻击者影响最大的是TTPs（战术、技术和行为模式）类型的威胁情报。这里分别做个简单介绍： HASH值：一般指样本、文件的HASH值，比如MD5和SHA系列。由于HASH函数的雪崩效应，文件任何微弱地改变，都会导致产生一个完全不同也不相关的哈希值。这使得在很多情况下，它变得不值得跟踪，所以它带来的防御效果也是最低的。 IP地址：常见的指标之一，通过IP的访问控制可以抵御很多常见的攻击，但是又因为IP数量太大，任何攻击者均可以尝试更改IP地址，以绕过访问控制。 域名：有些攻击类型或攻击手法也或者出于隐藏的目的，攻击者会通过域名连接外部服务器进行间接通信，由于域名需要购买、注册、与服务器绑定等操作使得它的成本相对IP是比较高的，对域名的把控产生的防御效果也是较好的。但是对于高级APT攻击或大规模的团伙攻击，往往会准备大量备用域名，所以它的限制作用也是有限。 网络或主机特征：这里指的特征可以是很多方面，比如攻击者浏览器的User-Agent、登录的用户名、访问的频率等，这些特征就是一种对攻击者的描述，这些情报数据可以很好的将攻击流量从其他的流量中提取出来，就会产生一种较好的防御效果。 攻击工具：这里是指获取或检测到了攻击者使用的工具，这种基于工具的情报数据能够使得一批攻击失效，攻击者不得不进行免杀或重写工具，这就达到了增加攻击成本的目的。 TTPs：Tactics、Techniques &amp; Procedures的缩写，这里是指攻击者所使用的攻击策略、手法等，掌握了些信息就能明白攻击者所利用的具体漏洞，就能够针对性的布防，使得攻击者不得不寻找新的漏洞，所以这也是价值最高的情报数据。 3、威胁情报按传统分类方法分为以下三类 战术级情报：战术情报的作用主要是发现威胁事件以及对报警确认或优先级排序。常见的失陷检测情报（CnC 情报，即攻击者控制被害主机所使用的远程命令与控制服务器情报）、IP情报就属于这个范畴，它们都是可机读的情报，可以直接被设备使用，自动化的完成上述的安全工作。 运营级情报：运营级情报是给安全分析师或者说安全事件响应人员使用的，目的是对已知的重要安全事件做分析（报警确认、攻击影响范围、攻击链以及攻击目的、技战术方法等）或者利用已知的攻击者技战术手法主动的查找攻击相关线索。 战略级情报：战略层面的威胁情报是给组织的安全管理者使用的，比如CSO。它能够帮助决策者把握当前的安全态势，在安全决策上更加有理有据。包括了什么样的组织会进行攻击，攻击可能造成的危害有哪些，攻击者的战术能力和掌控的资源情况等，当然也会包括具体的攻击实例。 APT 事件的分析与防御高级持续性威胁(Advanced Persistent Threat) 1、威胁情报在事件分析中的定位 1.1、威胁情报数据并不能帮助甲方来预测攻击，威胁情报在安全运营体系中的定位是——辅助发现潜在的或正在发起的恶意行为或操作，重点在于辅助两个字，威胁情报严格意义上来说只能有限地感知潜在的威胁，换句话说：如果有人现在瞄准的目标全部都是能源类客户，那么威胁情报就可以提醒没有被攻击的客户可能会遭受到该攻击者的攻击，这个叫做有限的感知潜在的威胁。 1.2、威胁情报既然是个辅助手段，那么肯定有一个主要手段，这个主要的手段其实就是针对事件的分析，接下来主要说的是两个分析使用的模型——钻石模型和Kill-Chain模型(杀伤链模型)，这两个模型在分析的时候往往需要结合起来使用，尤其是比较大型的针对性的攻击诸如APT攻击。 2、杀伤链模型【攻击的进程和路线】 Kill-Chain模型分为7个部分，侦查阶段（Reconnaissance）、武器化阶段（Weaponization）、部署阶段（Delivery）、攻击阶段（Exploitation）、后门植入阶段（Installation）、远程控制阶段（C&amp;C, Command&amp;Control）、后渗透阶段（Actives on Objects），也就是下面这个样子： 侦查阶段：扫描目标IT资产和信息收集，比如说Google Hacking这些侦查类型的攻击 武器化阶段：将前一阶段发现和扫描到漏洞的信息整合到一起并制作针对性的武器（当然国内的嘛，你懂得） 部署阶段：将这些武器或者是远控RAT部署到对应的Compromised Servers上 攻击阶段：使用这些Compromised Servers和之前做好的武器化工具对目标发起攻击 后门种植阶段：安装远程控制的服务和进程 远控阶段：让目标和C&amp;C通信 后渗透阶段：收割、继续横向渗透入侵 一次完整的攻击行为的参考就是上面说到的Kill-Chain，也就是用来描述的攻击者攻击的路线和进行的进度。但是Kill-Chain只能说明攻击的进程和路线，并不能很好地说明其造成的影响和目的，钻石模型就很好的针对性的补充了这点。 3、钻石模型【造成的影响和目的】 3.1、钻石模型是一个针对单个事件分析的模型，核心就是用来描述攻击者的技战术和目的，具体的钻石模型如下图所示： 【攻击者因为什么原因，利用哪些基础设施，并通过哪些手段，攻击了怎样的一个目标】 具体一点的关于图中信息的解释如下： 社会政治影响：处于钻石模型上下两个顶点，上顶点表示攻击者，下顶点表示受害者也就是目标。攻击者和受害者之间的某种利益冲突或者是社会地位对立则会产生攻击的意图和发起攻击的原因，纵切面表示的就是社会政治影响。说大白话就是根据这俩人去发现攻击的意图。 技战术组合：技战术组合位于整个钻石模型的横切面，横切面的两个顶点分别为基础设施和技术能力，这里的基础设施和技术能力其实都是相对于攻击者而言的。 元数据：这个其实就是左边列出来的，攻击时间、攻击阶段、攻击结果、攻击方向、攻击手段、攻击资源利用 置信度：也就是以上你分析出结果的可信程度。 3.2、钻石模型建立的基本元素是入侵活动事件，事件有四个基本特征：对手、能力、基础设施和受害者。 对手：对手的知识一般情况下难以掌握，特别是在刚发现的时候，这时候会简单的将对手的活动当作对手。 能力：描述事件中使用的工具或者技术。可以包括最原始的手工方法，也可以是高度复杂的自动化攻击，所有已披露的漏洞应该属于其一部分。 基础设施：描述攻击者用来递送能力的物理或逻辑结构，如：IP地址、域名、邮件地址、或者某个USB设备等。基础设施有两种类型，一类是攻击者完全控制及拥有的，另一类是短时间控制的，如僵尸主机、恶意网址、攻击跳跃点、失陷的账号等等，它们很可能会混淆恶意活动的起源和归属。 受害者：受害者的身份和资产在不同的分析中都非常有用，受害者或社会-政治为支点的安全分析中受害者身份作用重大，而脆弱性评估必然和资产相关。资产同时可能是攻击面或最终目标。 3.3、支点分析pivote 4、杀伤链与钻石模型的组合分析 复杂的攻击往往都是由一系列的攻击事件组成的，不同的攻击事件指向的目标和达到的目的可以表示出攻击的进程，那么我们如果把事件按照Kill-Chain进行分类同时使用泳道图进行表示，同时把不同的攻击路线分为不同的攻击线程，那么我们就可以得到一个这样的泳道图。 其实这张图描述的是这么一个事件： 1.攻击者先对目标进行了Google Hacking操作，获得了他们域名解析记录等一些基础的It信息 2.攻击者找到了一个目标新注册的域名，然后用搜索引擎搜索他们的网络管理员的电子邮件信息 3.攻击者使用鱼叉邮件方式对目标的网络管理员发送一封带有木马的邮件 4.目标的网管（我们叫他网管一号）打开了这封邮件的附件然后不幸中枪 5.网管一号的主机因为中了病毒，所以攻击者利用网管一号这台主机发送了一个HTTP Post请求到域控节点，然后域控节点返回了一个HTTP Response 6.我们通过对鱼叉邮件中附件进行逆向分析发现里面有两个IP地址，第二个IP地址作为备份，防止第一个失效 7.通过C&amp;C请求到网管一号的主机，我们的恶意程序打开了一个TCP代理服务 8.通过网管一号主机上的代理服务，攻击者继续去Google上搜索其他的目标 9.攻击者检查网管一号邮件的通信录列表去寻找是否拥有目标二号的通讯方式，结果发现了目标二号的首席科学家的联系方式 10.攻击者使用攻陷的网管一号的邮箱对目标二号的首席科学家的邮箱发起鱼叉邮件攻击，工具使用和之前一样的 11.此时又来了一个攻击者，我们称他为攻击者二号，攻击者一号扫描了目标三号的web服务器 12.使用同样的漏洞利用工具攻击发现目标三号主机上的相同的漏洞 13.被攻陷的目标三号主机返回一个shell会话给攻击者三号 14.目标三号的所有数据被攻击者三号窃取 这样的话使用Kill-Chain和钻石模型分析可以同时get到攻击者的点和想要攻击的目标，同时还知道了他的攻击路径，也就是说这时候我们对攻击者了如指掌了。 5、基于Kill-Chain的安全防护矩阵 ATT&amp;CK框架补充ing","categories":[],"tags":[{"name":"威胁情报","slug":"威胁情报","permalink":"http://yoursite.com/tags/%E5%A8%81%E8%83%81%E6%83%85%E6%8A%A5/"}]},{"title":"大型互联网企业安全架构","slug":"安全架构","date":"2020-05-20T13:26:12.000Z","updated":"2020-05-25T06:28:43.452Z","comments":true,"path":"2020/05/20/安全架构/","link":"","permalink":"http://yoursite.com/2020/05/20/%E5%AE%89%E5%85%A8%E6%9E%B6%E6%9E%84/","excerpt":"","text":"基础运维业务开发（Dev）完成后，就进入运维（Ops）阶段了，该阶段的资产管理、漏洞与补丁管理、安全配置基线、应急响应等如果没有做好也容易造成各种安全风险。 基础安全运营平台基础安全运营平台是集威胁情报、漏洞检测、入侵感知、主动防御、后门查杀、安全基线、安全大脑于一体的综合安全平台，承担着企业抵御各种网络攻击和防范内部风险的重任。首先通过威胁情报从外部获取最新的攻击数据和趋势，其次通过漏洞检测统计企业资产并周期性巡检、修补安全漏洞，再基于入侵感知发现各种网络、主机、服务的攻击，随后使用主动防御、后门查杀及安全基线实现对入侵攻击免疫和安全加固，最后通过安全大脑统筹分析和自动化响应，一气呵成完成互联网企业的基础安全运营工作。 威胁情报随着网络安全环境越来越复杂，威胁情报（TIP）也扮演着越来越重要的角色。除了传统的URL、IP地址、域名（Domain）、文件（File），漏洞的POC（Proof Of Concept）、攻击手法、社交媒体信息、通过GPS（全球定位系统）获取的信息、数据泄露情况等也属于广义的安全威胁情报。 漏洞检测在运营阶段，常常会爆发很多新型漏洞或第三方组件漏洞，这些漏洞在开发阶段通常可能没有被发现或公开，或者在做运维配置时使用了弱口令等，这为导致安全问题埋下了隐患，所以周期性的漏洞巡检必不可少。 按照漏洞检测方式的不同，漏洞大致可以被分为以下3种类型。· 网络漏洞：可以通过对端口直接进行远程扫描而发现的漏洞，如OpenSSH远程溢出漏洞、MySQL弱口令等。· 主机漏洞：只能在本地利用和检测的漏洞，如Linux内核提权、glibc漏洞提权等。· 网站漏洞：需要通过爬虫和遍历网站页面提取URL和参数才能检测的漏洞，如SQL注入、XSS跨站、命令执行、SSRF等。 入侵感知入侵感知技术是一种通过监控一系列与安全相关的异常指标来达到发现入侵目的的手段。一般可以从被动渠道感知入侵：①网络异常，如DDoS攻击、异常DNS请求、ARP欺骗；②主机异常，如暴力破解、反弹shell、系统提权；③隔离异常，如VM逃逸、容器逃逸；④应用异常，如命令执行、文件读写、SQL注入。也可从主动渠道（如蜜罐、诱饵、蜜签）来感知入侵。 主动防御主动防御技术通常以保护为主。在系统默认安全的基础上加入主动防御技术通常有助于拦截已知或未知的安全威胁，比如，对于主机层Linux内核提权漏洞，在内核层再加上一层内核保护技术即可拦截提权进程；在应用层的Struts2、Spring框架基础上加入RASP技术即可拦截绝大部分零日漏洞。通过主动防御来层层设防，如使用HIPS、WAF、RASP、数据库防火墙等，即可实现纵深防御架构，从而保障业务的安全性。 后门查杀（AV）黑客入侵服务器后为了长期控制或便于操作系统通常会在主机中留下后门。一般后门大致分为3类：①高度隐蔽性后门Rootkit，②一般性远程控制后门，③在Web环境下执行的Webshell后门。 安全基线安全基线 配置安全问题在安全漏洞中占很大比例，涉及的范围包括网络、操作系统、各种应用服务器以及数据库系统等。常见的安全基线包含默认安全配置和安全加固两部分。 【安全配置基线基本包括了所有的操作系统、数据库、中间件、网络设备、浏览器、云服务的安全配置，一般互联网公司可基于上述安全基线模板来开发自己的安全基线检查系统。】 安全大脑安全大脑 安全大脑即安全数据的综合分析与编排自动化响应中心，主要功能包含安全态势感知（SecuritySituation Awareness，SSA）、安全信息和事件管理（Security Information and EventManagement，SIEM）、安全编排与自动化响应（Security Orchestration,Automation andResponse，SOAR）。","categories":[],"tags":[{"name":"安全运营","slug":"安全运营","permalink":"http://yoursite.com/tags/%E5%AE%89%E5%85%A8%E8%BF%90%E8%90%A5/"}]},{"title":"Web安全基础总结","slug":"Web安全基础总结","date":"2020-05-20T13:20:43.000Z","updated":"2020-05-25T06:28:22.553Z","comments":true,"path":"2020/05/20/Web安全基础总结/","link":"","permalink":"http://yoursite.com/2020/05/20/Web%E5%AE%89%E5%85%A8%E5%9F%BA%E7%A1%80%E6%80%BB%E7%BB%93/","excerpt":"","text":"白帽子讲Web安全—小记OWASP TOP 10 Injection。当将不受信任的数据作为命令或查询的一部分发送到解释器时，会发生注入缺陷，例如SQL，NoSQL，OS和LDAP注入。攻击者的敌对数据可能会诱使解释器执行未经预期的命令或未经适当授权而访问数据。 身份验证失败。与身份验证和会话管理有关的应用程序功能通常会错误地实现，从而使攻击者能够破坏密码，密钥或会话令牌，或者利用其他实现缺陷来临时或永久地假定其他用户的身份。 敏感数据暴露。许多Web应用程序和API无法正确保护敏感数据，例如金融，医疗保健和PII。攻击者可能会窃取或修改这些受保护程度不高的数据，以进行信用卡欺诈，身份盗用或其他犯罪。敏感数据可能会在没有额外保护的情况下受到损害，例如静态加密或传输中加密，并且在与浏览器进行交换时需要采取特殊的预防措施。 XML外部实体（XXE）。许多较旧的或配置不当的XML处理器都会评估XML文档中的外部实体引用。外部实体可以使用文件URI处理程序，内部文件共享，内部端口扫描，远程代码执行和拒绝服务攻击来公开内部文件。 损坏的访问控制。通常，对身份验证用户允许执行的操作的限制通常未得到正确执行。攻击者可以利用这些缺陷来访问未经授权的功能和/或数据，例如访问其他用户的帐户，查看敏感文件，修改其他用户的数据，更改访问权限等。 安全配置错误。安全配置错误是最常见的问题。这通常是由于不安全的默认配置，不完整或临时的配置，开放的云存储，错误配置的HTTP标头以及包含敏感信息的冗长错误消息的结果。不仅必须安全地配置所有操作系统，框架，库和应用程序，而且还必须及时对其进行修补/升级。 跨站点脚本XSS。每当应用程序在未经适当验证或转义的情况下在新网页中包含不受信任的数据，或者使用可以创建HTML或JavaScript的浏览器API用用户提供的数据更新现有网页时，都会发生XSS漏洞。XSS允许攻击者在受害者的浏览器中执行脚本，这些脚本可以劫持用户会话，破坏网站或将用户重定向到恶意网站。 不安全的反序列化。不安全的反序列化通常会导致远程执行代码。即使反序列化缺陷不会导致远程执行代码，也可以将它们用于执行攻击，包括重播攻击，注入攻击和特权升级攻击。 使用已知漏洞的组件。诸如库，框架和其他软件模块之类的组件以与应用程序相同的特权运行。如果利用了易受攻击的组件，则此类攻击可能会导致严重的数据丢失或服务器接管。使用具有已知漏洞的组件的应用程序和API可能破坏应用程序防御，并造成各种攻击和影响。 日志和监控不足。日志和监视的不足，再加上事件响应的缺失或无效集成，使攻击者可以进一步攻击系统，保持持久性，转向更多系统以及篡改，提取或破坏数据。大多数违规研究表明，检测到违规的时间超过200天，通常由外部各方而不是内部流程或监视来检测。","categories":[],"tags":[{"name":"Web安全","slug":"Web安全","permalink":"http://yoursite.com/tags/Web%E5%AE%89%E5%85%A8/"}]},{"title":"SPM维护","slug":"SPM维护","date":"2020-05-18T11:36:45.000Z","updated":"2020-05-25T06:54:15.384Z","comments":true,"path":"2020/05/18/SPM维护/","link":"","permalink":"http://yoursite.com/2020/05/18/SPM%E7%BB%B4%E6%8A%A4/","excerpt":"","text":"软件项目管理实验—LRR维护准备工作1.安装wampserver集成服务器组件（Apache+PHP+Mysql/MariaDB）。 2.phpmyadmin新建lrr数据库并导入sql文件，两个sql文件任选其一。 3.安装HBuilderX或PhpStorm，进行必要的配置。 4.打开LRR即为成功。 维护流程1.明确bug，运行时错误，团队成员的名字在一组中多次出现。 http://118.25.96.118/bugzilla/show_bug.cgi?id=57 Hui Lan 2020-03-15 13:55:57 CST Repeated names in a course group QWQ- Leader : 陆博业(201732120119)Zhou Xianlong-201732120130 (Joined)陆博业-201732120119 (Created)吕伊豪-201732120120 (Joined)郑可富-201732120129 (Joined)郑可富-201732120129 (Joined)郑可富-201732120129 (Joined)郑可富-201732120129 (Joined)郑可富-201732120129 (Joined) 2.修改Script.php文件中的connection为本地root连接。 12&#x2F;&#x2F;$con&#x3D;mysqli_connect(&quot;localhost&quot;,&quot;Teecloudy&quot;,&quot;5q7Ol2e!#!&quot;,&quot;lrr&quot;);$con&#x3D;mysqli_connect(&quot;localhost&quot;,&quot;root&quot;,&quot;&quot;,&quot;lrr&quot;); 3.因为此bug是学生端创建组问题，因此以学生身份登录，UserType=Student。 4.问题复现。 创建Group，遇到的问题。 1234TypeError:$(...).dialog is not a function&#x2F;&#x2F;没有添加jquery-ui.css和jquery-ui.jsTypeError: r.getClientRects is not a function&#x2F;&#x2F;添加的jquery-ui的版本为1.10.4导致此问题，更新为最新的1.12.1就显示正常了 重复邀请好友，还原到问题根本。 猜测是系统没有判断该好友是否已加入队伍，好像很好修复，加个判断就行，那就来试一下。 5.代码审计。 定位到邀请好友模块。该页面处于Course.php中。 表单传递到Script.php中处理。 该Invite Group Request模块并未在插入数据之前检查这条数据的合理性（是否重复包含）。 在获取student_id后直接插入数据表course_group_members_table。 6.解决方法。在插入之前先查询，比较之后再执行sql语句。 1234567$result &#x3D; mysqli_query($con,&quot;SELECT * FROM course_group_members_table where Course_Group_id &#x3D; &#39;$groupid&#39; and Student_ID &#x3D; &#39;$student_id&#39;&quot;);if(mysqli_num_rows($result)&gt;0)&#123; $_SESSION[&quot;info_ReMarking&quot;]&#x3D;&quot;This student has already been invited&quot;; header(&quot;Location: Course.php?url&#x3D;&quot;.$url);&#125;else&#123; $sql&#x3D;&quot;INSERT INTO &#96;course_group_members_table&#96;( &#96;Course_Group_id&#96;, &#96;Student_ID&#96;, &#96;Status&#96;) VALUES ($groupid,$student_id,&#39;Invited&#39;)&quot;;&#125; 该if-else语句首先查询数据库中是否存在要添加的student_id，若返回结果集中行的数量大于0，则表示已存在该student_id，那么重定向到当前页面；否则执行添加student_id的sql语句。 注意：把数据库表course_groups_table和course_group_members_table中重复的student_id数据先手动删除，否则mysqli_num_rows()返回值会大于0。 7.关于旧版和新版引申出的新bug。 我在旧版的基础上进行了修改，也保证了我的修改准确无误。 因为LRR更新了新版，因此我也在新版上进行了测试，但是我发现了一个问题（这样的问题可能不止我发现的这一处）。 我在添加成员后发现，course_group_members_table数据表的添加没有问题，course_groups_table中成员的student_id未添加。 以下是旧版部分代码截图： 以下是新版部分代码截图： 可以发现新版LRR删除了部分代码，那部分被删除的代码刚好导致了这个原因，因此我重新添加了原来的代码，并修改了错误的title为原版的“Invite Group Request and add a new member into the database”。 8.验证测试。 因youtube、youku、bilibili等上传视频需实名认证和审核，所以录像上传至百度网盘。 链接：https://pan.baidu.com/s/1zbWNkLSf6g_iBh7j9I6-lQ提取码：qwrj","categories":[],"tags":[{"name":"SPM","slug":"SPM","permalink":"http://yoursite.com/tags/SPM/"}]}],"categories":[],"tags":[{"name":"统一身份认证","slug":"统一身份认证","permalink":"http://yoursite.com/tags/%E7%BB%9F%E4%B8%80%E8%BA%AB%E4%BB%BD%E8%AE%A4%E8%AF%81/"},{"name":"威胁情报","slug":"威胁情报","permalink":"http://yoursite.com/tags/%E5%A8%81%E8%83%81%E6%83%85%E6%8A%A5/"},{"name":"安全运营","slug":"安全运营","permalink":"http://yoursite.com/tags/%E5%AE%89%E5%85%A8%E8%BF%90%E8%90%A5/"},{"name":"Web安全","slug":"Web安全","permalink":"http://yoursite.com/tags/Web%E5%AE%89%E5%85%A8/"},{"name":"SPM","slug":"SPM","permalink":"http://yoursite.com/tags/SPM/"}]}